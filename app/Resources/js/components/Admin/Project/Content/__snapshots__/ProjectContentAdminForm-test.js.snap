// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectContentAdminForm /> renders correctly empty 1`] = `
<div
  className="col-md-12"
>
  <div
    className="box box-primary container-fluid"
  >
    <div
      className="box-header"
    >
      <h4
        className="box-title"
      >
        <FormattedMessage
          id="admin.group.content"
          values={Object {}}
        />
      </h4>
    </div>
    <div
      className="box-content"
    >
      <form
        id="ProjectContentAdminForm"
        onSubmit={[MockFunction]}
      >
        <Field
          component={[Function]}
          label={
            <div>
              <FormattedMessage
                id="admin.fields.group.title"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                <FormattedMessage
                  id="global.mandatory"
                  values={Object {}}
                />
              </span>
            </div>
          }
          name="title"
          type="text"
        />
        <UserListField
          ariaControls="EventListFilters-filter-author-listbox"
          authorOfEvent={false}
          autoload={false}
          className=""
          clearable={true}
          debounce={true}
          id="project-author"
          inputClassName="fake-inputClassName"
          label={
            <div>
              <FormattedMessage
                id="admin.fields.project.authors"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                <FormattedMessage
                  id="global.mandatory"
                  values={Object {}}
                />
              </span>
            </div>
          }
          labelClassName="control-label"
          multi={true}
          name="authors"
          placeholder="all-the-authors"
          selectFieldIsObject={true}
        />
        <injectIntl(ProjectTypeListField) />
        <Field
          component={[Function]}
          label={
            <span>
              <FormattedMessage
                id="admin.fields.project.opinion_term"
                values={Object {}}
              />
            </span>
          }
          name="opinionTerm"
          normalize={[Function]}
          parse={[Function]}
          type="select"
        >
          <option
            key="0"
            value={0}
          >
            project.opinion_term.opinion
          </option>
          <option
            key="1"
            value={1}
          >
            project.opinion_term.article
          </option>
        </Field>
      </form>
    </div>
  </div>
</div>
`;

exports[`<ProjectContentAdminForm /> renders correctly with a project 1`] = `
<div
  className="col-md-12"
>
  <div
    className="box box-primary container-fluid"
  >
    <div
      className="box-header"
    >
      <h4
        className="box-title"
      >
        <FormattedMessage
          id="admin.group.content"
          values={Object {}}
        />
      </h4>
    </div>
    <div
      className="box-content"
    >
      <form
        id="ProjectContentAdminForm"
        onSubmit={[MockFunction]}
      >
        <Field
          component={[Function]}
          label={
            <div>
              <FormattedMessage
                id="admin.fields.group.title"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                <FormattedMessage
                  id="global.mandatory"
                  values={Object {}}
                />
              </span>
            </div>
          }
          name="title"
          type="text"
        />
        <UserListField
          ariaControls="EventListFilters-filter-author-listbox"
          authorOfEvent={false}
          autoload={false}
          className=""
          clearable={true}
          debounce={true}
          id="project-author"
          inputClassName="fake-inputClassName"
          label={
            <div>
              <FormattedMessage
                id="admin.fields.project.authors"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                <FormattedMessage
                  id="global.mandatory"
                  values={Object {}}
                />
              </span>
            </div>
          }
          labelClassName="control-label"
          multi={true}
          name="authors"
          placeholder="all-the-authors"
          selectFieldIsObject={true}
        />
        <injectIntl(ProjectTypeListField) />
        <Field
          component={[Function]}
          label={
            <span>
              <FormattedMessage
                id="admin.fields.project.opinion_term"
                values={Object {}}
              />
            </span>
          }
          name="opinionTerm"
          normalize={[Function]}
          parse={[Function]}
          type="select"
        >
          <option
            key="0"
            value={0}
          >
            project.opinion_term.opinion
          </option>
          <option
            key="1"
            value={1}
          >
            project.opinion_term.article
          </option>
        </Field>
      </form>
    </div>
  </div>
</div>
`;
