// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Comment /> <Comment /> not shown and focus should render correctly 1`] = `
<styles__CommentContainer
  as="li"
  invertedBackground={true}
>
  <Media
    className="opinion"
  >
    <Left>
      <Connect(UserAvatarDeprecated)
        user={
          Object {
            "displayName": "admin",
            "media": null,
            "vip": true,
          }
        }
      />
    </Left>
    <Body
      className="opinion__body"
      id="comment_proposalComment1"
    >
      <div
        className="opinion__data"
      >
        <ForwardRef(Relay(CommentInfos))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
      <ForwardRef(Relay(CommentBody))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <div
        className="small"
      >
        <ForwardRef(Relay(CommentVoteButton))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="xsmall"
          bsStyle="default"
          className="btn-dark-gray btn--outline"
          disabled={false}
          onClick={[Function]}
        >
          <i
            className="cap-reply-mail-2"
          />
           
          <FormattedMessage
            id="global.answer"
            values={Object {}}
          />
        </Button>
         
        <ForwardRef(Relay(Connect(CommentReportButton)))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
        <ForwardRef(Relay(CommentEdit))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
      </div>
      <div>
        <ForwardRef(Relay(CommentAnswers))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
          invertedBackground={true}
        />
      </div>
    </Body>
  </Media>
</styles__CommentContainer>
`;

exports[`<Comment /> <Comment /> not shown and not focus should render correctly 1`] = `
<styles__CommentContainer
  as="li"
  invertedBackground={true}
>
  <Media
    className="opinion"
  >
    <Left>
      <Connect(UserAvatarDeprecated)
        user={
          Object {
            "displayName": "admin",
            "media": null,
            "vip": true,
          }
        }
      />
    </Left>
    <Body
      className="opinion__body"
      id="comment_proposalComment1"
    >
      <div
        className="opinion__data"
      >
        <ForwardRef(Relay(CommentInfos))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
      <ForwardRef(Relay(CommentBody))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <div
        className="small"
      >
        <ForwardRef(Relay(CommentVoteButton))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="xsmall"
          bsStyle="default"
          className="btn-dark-gray btn--outline"
          disabled={false}
          onClick={[Function]}
        >
          <i
            className="cap-reply-mail-2"
          />
           
          <FormattedMessage
            id="global.answer"
            values={Object {}}
          />
        </Button>
         
        <ForwardRef(Relay(Connect(CommentReportButton)))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
        <ForwardRef(Relay(CommentEdit))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
      </div>
      <div>
        <ForwardRef(Relay(CommentAnswers))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
          invertedBackground={true}
        />
      </div>
    </Body>
  </Media>
</styles__CommentContainer>
`;

exports[`<Comment /> <Comment /> shown and focus should render correctly 1`] = `
<styles__CommentContainer
  as="li"
  invertedBackground={true}
>
  <Media
    className="opinion"
  >
    <Left>
      <Connect(UserAvatarDeprecated)
        user={
          Object {
            "displayName": "admin",
            "media": null,
            "vip": true,
          }
        }
      />
    </Left>
    <Body
      className="opinion__body"
      id="comment_proposalComment1"
    >
      <div
        className="opinion__data"
      >
        <ForwardRef(Relay(CommentInfos))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
      <ForwardRef(Relay(CommentBody))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <div
        className="small"
      >
        <ForwardRef(Relay(CommentVoteButton))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="xsmall"
          bsStyle="default"
          className="btn-dark-gray btn--outline"
          disabled={false}
          onClick={[Function]}
        >
          <i
            className="cap-reply-mail-2"
          />
           
          <FormattedMessage
            id="global.answer"
            values={Object {}}
          />
        </Button>
         
        <ForwardRef(Relay(Connect(CommentReportButton)))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
        <ForwardRef(Relay(CommentEdit))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
      </div>
      <div>
        <ForwardRef(Relay(CommentAnswers))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
          invertedBackground={true}
        />
        <ForwardRef(Relay(Connect(ReduxForm)))
          answerOf="proposalComment1"
          commentable={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
    </Body>
  </Media>
</styles__CommentContainer>
`;

exports[`<Comment /> <Comment /> shown and not focus should render correctly 1`] = `
<styles__CommentContainer
  as="li"
  invertedBackground={true}
>
  <Media
    className="opinion"
  >
    <Left>
      <Connect(UserAvatarDeprecated)
        user={
          Object {
            "displayName": "admin",
            "media": null,
            "vip": true,
          }
        }
      />
    </Left>
    <Body
      className="opinion__body"
      id="comment_proposalComment1"
    >
      <div
        className="opinion__data"
      >
        <ForwardRef(Relay(CommentInfos))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
      <ForwardRef(Relay(CommentBody))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <div
        className="small"
      >
        <ForwardRef(Relay(CommentVoteButton))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="xsmall"
          bsStyle="default"
          className="btn-dark-gray btn--outline"
          disabled={false}
          onClick={[Function]}
        >
          <i
            className="cap-reply-mail-2"
          />
           
          <FormattedMessage
            id="global.answer"
            values={Object {}}
          />
        </Button>
         
        <ForwardRef(Relay(Connect(CommentReportButton)))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
        <ForwardRef(Relay(CommentEdit))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
         
      </div>
      <div>
        <ForwardRef(Relay(CommentAnswers))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
          invertedBackground={true}
        />
        <ForwardRef(Relay(Connect(ReduxForm)))
          answerOf="proposalComment1"
          commentable={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
    </Body>
  </Media>
</styles__CommentContainer>
`;

exports[`<Comment /> should render correctly highlighted 1`] = `
<styles__CommentContainer
  as="li"
  invertedBackground={true}
  isHighlighted={true}
>
  <Media
    className="opinion"
  >
    <Left>
      <Connect(UserAvatarDeprecated)
        user={
          Object {
            "displayName": "jcVandam",
            "media": Object {
              "url": "http://perdu.com/image.jpg",
            },
            "vip": true,
          }
        }
      />
    </Left>
    <Body
      className="opinion__body"
      id="comment_comment1"
    >
      <div
        className="opinion__data"
      >
        <ForwardRef(Relay(CommentInfos))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": Object {
                  "url": "http://perdu.com/image.jpg",
                },
                "vip": true,
              },
              "id": "comment1",
            }
          }
        />
      </div>
      <ForwardRef(Relay(CommentBody))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "displayName": "jcVandam",
              "media": Object {
                "url": "http://perdu.com/image.jpg",
              },
              "vip": true,
            },
            "id": "comment1",
          }
        }
      />
      <div
        className="small"
      >
        <ForwardRef(Relay(CommentVoteButton))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": Object {
                  "url": "http://perdu.com/image.jpg",
                },
                "vip": true,
              },
              "id": "comment1",
            }
          }
        />
         
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="xsmall"
          bsStyle="default"
          className="btn-dark-gray btn--outline"
          disabled={false}
          onClick={[Function]}
        >
          <i
            className="cap-reply-mail-2"
          />
           
          <FormattedMessage
            id="global.answer"
            values={Object {}}
          />
        </Button>
         
        <ForwardRef(Relay(Connect(CommentReportButton)))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": Object {
                  "url": "http://perdu.com/image.jpg",
                },
                "vip": true,
              },
              "id": "comment1",
            }
          }
        />
         
        <ForwardRef(Relay(CommentEdit))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": Object {
                  "url": "http://perdu.com/image.jpg",
                },
                "vip": true,
              },
              "id": "comment1",
            }
          }
        />
         
      </div>
      <div>
        <ForwardRef(Relay(CommentAnswers))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": Object {
                  "url": "http://perdu.com/image.jpg",
                },
                "vip": true,
              },
              "id": "comment1",
            }
          }
          invertedBackground={true}
        />
      </div>
    </Body>
  </Media>
</styles__CommentContainer>
`;

exports[`<Comment /> should render correctly not highlighted 1`] = `
<styles__CommentContainer
  as="li"
  invertedBackground={true}
  isHighlighted={false}
>
  <Media
    className="opinion"
  >
    <Left>
      <Connect(UserAvatarDeprecated)
        user={
          Object {
            "displayName": "jcVandam",
            "media": null,
            "vip": true,
          }
        }
      />
    </Left>
    <Body
      className="opinion__body"
      id="comment_comment2"
    >
      <div
        className="opinion__data"
      >
        <ForwardRef(Relay(CommentInfos))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": null,
                "vip": true,
              },
              "id": "comment2",
            }
          }
        />
      </div>
      <ForwardRef(Relay(CommentBody))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "displayName": "jcVandam",
              "media": null,
              "vip": true,
            },
            "id": "comment2",
          }
        }
      />
      <div
        className="small"
      >
        <ForwardRef(Relay(CommentVoteButton))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": null,
                "vip": true,
              },
              "id": "comment2",
            }
          }
        />
         
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="xsmall"
          bsStyle="default"
          className="btn-dark-gray btn--outline"
          disabled={false}
          onClick={[Function]}
        >
          <i
            className="cap-reply-mail-2"
          />
           
          <FormattedMessage
            id="global.answer"
            values={Object {}}
          />
        </Button>
         
        <ForwardRef(Relay(Connect(CommentReportButton)))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": null,
                "vip": true,
              },
              "id": "comment2",
            }
          }
        />
         
        <ForwardRef(Relay(CommentEdit))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": null,
                "vip": true,
              },
              "id": "comment2",
            }
          }
        />
         
      </div>
      <div>
        <ForwardRef(Relay(CommentAnswers))
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": null,
                "vip": true,
              },
              "id": "comment2",
            }
          }
          invertedBackground={true}
        />
        <ForwardRef(Relay(Connect(ReduxForm)))
          answerOf="comment2"
          commentable={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "displayName": "jcVandam",
                "media": null,
                "vip": true,
              },
              "id": "comment2",
            }
          }
        />
      </div>
    </Body>
  </Media>
</styles__CommentContainer>
`;
