// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EvaluationsIndexPage /> render function renders correctly 1`] = `
<div>
  <ForwardRef(Relay(ProposalFormEvaluationList))
    key="1"
    proposalForm={
      Object {
        "$fragmentRefs": null,
        "id": "1",
      }
    }
  />
  <ForwardRef(Relay(ProposalFormEvaluationList))
    key="2"
    proposalForm={
      Object {
        "$fragmentRefs": null,
        "id": "2",
      }
    }
  />
</div>
`;

exports[`<EvaluationsIndexPage /> renders correcty 1`] = `
<ReactRelayQueryRenderer
  environment={
    RelayModernEnvironment {
      "__setNet": [Function],
      "_deferrableSelections": Array [],
      "_network": Object {
        "execute": [Function],
        "executeWithEvents": [Function],
      },
      "_publishQueue": RelayPublishQueue {
        "_appliedOptimisticUpdates": Array [],
        "_backup": Object {},
        "_handlerProvider": [Function],
        "_pendingBackupRebase": false,
        "_pendingData": Array [],
        "_pendingOptimisticUpdates": Array [],
        "_pendingUpdaters": Array [],
        "_store": RelayMarkSweepStore {
          "_gcEnabled": true,
          "_hasScheduledGC": false,
          "_index": 0,
          "_recordSource": Object {},
          "_roots": Array [],
          "_subscriptions": Array [],
          "_updatedRecordIDs": Object {},
        },
      },
      "_store": RelayMarkSweepStore {
        "_gcEnabled": true,
        "_hasScheduledGC": false,
        "_index": 0,
        "_recordSource": Object {},
        "_roots": Array [],
        "_subscriptions": Array [],
        "_updatedRecordIDs": Object {},
      },
      "configName": undefined,
      "unstable_internal": Object {
        "areEqualSelectors": [Function],
        "createFragmentSpecResolver": [Function],
        "createOperationSelector": [Function],
        "getDataIDsFromObject": [Function],
        "getFragment": [Function],
        "getRequest": [Function],
        "getSelector": [Function],
        "getSelectorList": [Function],
        "getSelectorsFromObject": [Function],
        "getVariablesFromObject": [Function],
      },
    }
  }
  query={[Function]}
  render={[Function]}
  variables={
    Object {
      "count": 100,
      "cursor": null,
    }
  }
/>
`;
