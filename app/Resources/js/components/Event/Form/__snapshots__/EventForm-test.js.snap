// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventForm /> it renders correctly with event complete 1`] = `
<form
  className="eventForm"
>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="proposal.admin.general"
        values={Object {}}
      />
    </h3>
  </div>
  <div
    className="box-body"
  >
    <Field
      component={[Function]}
      id="event_title"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.group.title"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="title"
      type="text"
    />
    <UserListField
      ariaControls="EventForm-filter-user-listbox"
      authorOfEvent={false}
      autoload={true}
      className=""
      clearable={false}
      debounce={false}
      disabled={false}
      id="event_author"
      inputClassName="fake-inputClassName"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.argument_vote.voter"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      labelClassName={null}
      multi={false}
      name="author"
      placeholder={null}
      selectFieldIsObject={true}
    />
    <Field
      component={[Function]}
      formName="EventForm"
      id="event_address"
      label={
        <FormattedMessage
          id="admin.fields.proposal.address"
          values={Object {}}
        />
      }
      name="addressText"
      placeholder="proposal.map.form.placeholder"
      type="address"
    />
    <Field
      component={[Function]}
      id="event_body"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.proposal_form.description"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="body"
      type="editor"
    />
    <div
      className="datePickContainer"
    >
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        dateTimeInputProps={
          Object {
            "id": "event_input_startAt",
          }
        }
        formName="EventForm"
        id="event_startAt"
        label={
          <span>
            <FormattedMessage
              id="start-date"
              values={Object {}}
            />
             
            <span
              className="excerpt"
            >
              <FormattedMessage
                id="global.mandatory"
                values={Object {}}
              />
            </span>
          </span>
        }
        name="startAt"
        timeFormat={false}
        type="datetime"
      />
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        dateTimeInputProps={
          Object {
            "id": "event_input_endAt",
          }
        }
        formName="EventForm"
        id="event_endAt"
        label={
          <FormattedMessage
            id="ending-date"
            values={Object {}}
          />
        }
        name="endAt"
        type="datetime"
      />
    </div>
    <Field
      component={[Function]}
      id="event_media"
      label={
        <FormattedMessage
          id="admin.fields.proposal.media"
          values={Object {}}
        />
      }
      name="media"
      type="image"
    />
  </div>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="form.label_category"
        values={Object {}}
      />
    </h3>
  </div>
  <ForwardRef(Relay(InjectIntl(SelectProject)))
    clearable={true}
    label="admin.group.project"
    multi={true}
    name="projects"
    object={
      Object {
        "$refType": null,
        "author": Object {
          "displayName": "my name is toto",
          "id": "user1",
        },
        "body": "<p>My body</p>",
        "commentable": true,
        "customCode": "custom code",
        "enabled": true,
        "fullAddress": "",
        "googleMapsAddress": Object {
          "formatted": "111 Avenue Jean Jaurès, 69007 Lyon, France",
          "json": "[{\\"address_components\\":[{\\"long_name\\":\\"111\\",\\"short_name\\":\\"111\\",\\"types\\":[\\"street_number\\"]},{\\"long_name\\":\\"Avenue Jean Jaurès\\",\\"short_name\\":\\"Avenue Jean Jaurès\\",\\"types\\":[\\"route\\"]},{\\"long_name\\":\\"Lyon\\",\\"short_name\\":\\"Lyon\\",\\"types\\":[\\"locality\\",\\"political\\"]},{\\"long_name\\":\\"Rhône\\",\\"short_name\\":\\"Rhône\\",\\"types\\":[\\"administrative_area_level_2\\",\\"political\\"]},{\\"long_name\\":\\"Auvergne-Rhône-Alpes\\",\\"short_name\\":\\"Auvergne-Rhône-Alpes\\",\\"types\\":[\\"administrative_area_level_1\\",\\"political\\"]},{\\"long_name\\":\\"France\\",\\"short_name\\":\\"FR\\",\\"types\\":[\\"country\\",\\"political\\"]},{\\"long_name\\":\\"69007\\",\\"short_name\\":\\"69007\\",\\"types\\":[\\"postal_code\\"]}],\\"formatted_address\\":\\"111 Avenue Jean Jaurès, 69007 Lyon, France\\",\\"geometry\\":{\\"location\\":{\\"lat\\":45.742842,\\"lng\\":4.84068000000002},\\"location_type\\":\\"ROOFTOP\\",\\"viewport\\":{\\"south\\":45.7414930197085,\\"west\\":4.839331019708538,\\"north\\":45.74419098029149,\\"east\\":4.842028980291502}},\\"place_id\\":\\"ChIJHyD85zjq9EcR8Yaae-eQdeQ\\",\\"plus_code\\":{\\"compound_code\\":\\"PRVR+47 Lyon, France\\",\\"global_code\\":\\"8FQ6PRVR+47\\"},\\"types\\":[\\"street_address\\"]}]",
          "lat": 45.742842,
          "lng": 4.84068000000002,
        },
        "guestListEnabled": true,
        "id": "event1",
        "lat": 45.749842,
        "link": "http://weezevent.com",
        "lng": 4.94068000000002,
        "media": Object {
          "id": "media1",
          "url": "http://capco.dev",
        },
        "metaDescription": "meta description",
        "projects": Array [
          Object {
            "id": "1",
            "title": "project-1",
          },
        ],
        "themes": Array [
          Object {
            "id": "1",
            "title": "theme-1",
          },
        ],
        "timeRange": Object {
          "endAt": "2019-09-09",
          "startAt": "2019-04-21",
        },
        "title": "my event",
      }
    }
    query={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "viewer": Object {
          "isAdmin": true,
          "isSuperAdmin": false,
        },
      }
    }
  />
  <div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="proposal_form.admin.settings.options"
            values={Object {}}
          />
        </h3>
      </div>
      <div
        className="ml-10 pl-10"
      >
        <Field
          component={[Function]}
          id="event_registrable"
          name="guestListEnabled"
          type="checkbox"
        >
          <FormattedMessage
            id="authorize-registration"
            values={Object {}}
          />
        </Field>
      </div>
      <div
        className="clearfix"
      >
        <Field
          component={[Function]}
          id="event_link"
          label={
            <FormattedMessage
              id="admin.fields.event.link"
              values={Object {}}
            />
          }
          name="link"
          placeholder="http://"
          type="text"
        />
      </div>
      <div
        className="ml-10 pl-10"
      >
        <Field
          component={[Function]}
          id="event_commentable"
          name="commentable"
          type="checkbox"
        >
          <FormattedMessage
            id="admin.fields.blog_post.is_commentable"
            values={Object {}}
          />
        </Field>
      </div>
    </div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.page.advanced"
            values={Object {}}
          />
        </h3>
      </div>
      <CustomPageFields />
      <div
        className="box-header pt-0"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.project.published_at"
            values={Object {}}
          />
        </h3>
      </div>
      <Field
        component={[Function]}
        id="event_enabled"
        label={
          <FormattedMessage
            id="proposal.state.published"
            values={Object {}}
          />
        }
        name="enabled"
        type="checkbox"
      />
    </div>
  </div>
</form>
`;

exports[`<EventForm /> it renders correctly with initialValue 1`] = `
<form
  className="eventForm"
>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="proposal.admin.general"
        values={Object {}}
      />
    </h3>
  </div>
  <div
    className="box-body"
  >
    <Field
      component={[Function]}
      id="event_title"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.group.title"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="title"
      type="text"
    />
    <UserListField
      ariaControls="EventForm-filter-user-listbox"
      authorOfEvent={false}
      autoload={true}
      className=""
      clearable={false}
      debounce={false}
      disabled={false}
      id="event_author"
      inputClassName="fake-inputClassName"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.argument_vote.voter"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      labelClassName={null}
      multi={false}
      name="author"
      placeholder={null}
      selectFieldIsObject={true}
    />
    <Field
      component={[Function]}
      formName="EventForm"
      id="event_address"
      label={
        <FormattedMessage
          id="admin.fields.proposal.address"
          values={Object {}}
        />
      }
      name="addressText"
      placeholder="proposal.map.form.placeholder"
      type="address"
    />
    <Field
      component={[Function]}
      id="event_body"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.proposal_form.description"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="body"
      type="editor"
    />
    <div
      className="datePickContainer"
    >
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        dateTimeInputProps={
          Object {
            "id": "event_input_startAt",
          }
        }
        formName="EventForm"
        id="event_startAt"
        label={
          <span>
            <FormattedMessage
              id="start-date"
              values={Object {}}
            />
             
            <span
              className="excerpt"
            >
              <FormattedMessage
                id="global.mandatory"
                values={Object {}}
              />
            </span>
          </span>
        }
        name="startAt"
        timeFormat={false}
        type="datetime"
      />
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        dateTimeInputProps={
          Object {
            "id": "event_input_endAt",
          }
        }
        formName="EventForm"
        id="event_endAt"
        label={
          <FormattedMessage
            id="ending-date"
            values={Object {}}
          />
        }
        name="endAt"
        type="datetime"
      />
    </div>
    <Field
      component={[Function]}
      id="event_media"
      label={
        <FormattedMessage
          id="admin.fields.proposal.media"
          values={Object {}}
        />
      }
      name="media"
      type="image"
    />
  </div>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="form.label_category"
        values={Object {}}
      />
    </h3>
  </div>
  <ForwardRef(Relay(InjectIntl(SelectProject)))
    clearable={true}
    label="admin.group.project"
    multi={true}
    name="projects"
    object={
      Object {
        "$refType": null,
        "author": Object {
          "displayName": "my name is toto",
          "id": "user1",
        },
        "body": "<p>My body</p>",
        "commentable": true,
        "customCode": "custom code",
        "enabled": true,
        "fullAddress": "",
        "googleMapsAddress": Object {
          "formatted": "111 Avenue Jean Jaurès, 69007 Lyon, France",
          "json": "[{\\"address_components\\":[{\\"long_name\\":\\"111\\",\\"short_name\\":\\"111\\",\\"types\\":[\\"street_number\\"]},{\\"long_name\\":\\"Avenue Jean Jaurès\\",\\"short_name\\":\\"Avenue Jean Jaurès\\",\\"types\\":[\\"route\\"]},{\\"long_name\\":\\"Lyon\\",\\"short_name\\":\\"Lyon\\",\\"types\\":[\\"locality\\",\\"political\\"]},{\\"long_name\\":\\"Rhône\\",\\"short_name\\":\\"Rhône\\",\\"types\\":[\\"administrative_area_level_2\\",\\"political\\"]},{\\"long_name\\":\\"Auvergne-Rhône-Alpes\\",\\"short_name\\":\\"Auvergne-Rhône-Alpes\\",\\"types\\":[\\"administrative_area_level_1\\",\\"political\\"]},{\\"long_name\\":\\"France\\",\\"short_name\\":\\"FR\\",\\"types\\":[\\"country\\",\\"political\\"]},{\\"long_name\\":\\"69007\\",\\"short_name\\":\\"69007\\",\\"types\\":[\\"postal_code\\"]}],\\"formatted_address\\":\\"111 Avenue Jean Jaurès, 69007 Lyon, France\\",\\"geometry\\":{\\"location\\":{\\"lat\\":45.742842,\\"lng\\":4.84068000000002},\\"location_type\\":\\"ROOFTOP\\",\\"viewport\\":{\\"south\\":45.7414930197085,\\"west\\":4.839331019708538,\\"north\\":45.74419098029149,\\"east\\":4.842028980291502}},\\"place_id\\":\\"ChIJHyD85zjq9EcR8Yaae-eQdeQ\\",\\"plus_code\\":{\\"compound_code\\":\\"PRVR+47 Lyon, France\\",\\"global_code\\":\\"8FQ6PRVR+47\\"},\\"types\\":[\\"street_address\\"]}]",
          "lat": 45.742842,
          "lng": 4.84068000000002,
        },
        "guestListEnabled": true,
        "id": "event1",
        "lat": 45.749842,
        "link": "http://weezevent.com",
        "lng": 4.94068000000002,
        "media": Object {
          "id": "media1",
          "url": "http://capco.dev",
        },
        "metaDescription": "meta description",
        "projects": Array [
          Object {
            "id": "1",
            "title": "project-1",
          },
        ],
        "themes": Array [
          Object {
            "id": "1",
            "title": "theme-1",
          },
        ],
        "timeRange": Object {
          "endAt": "2019-09-09",
          "startAt": "2019-04-21",
        },
        "title": "my event",
      }
    }
    query={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "viewer": Object {
          "isAdmin": true,
          "isSuperAdmin": false,
        },
      }
    }
  />
  <div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="proposal_form.admin.settings.options"
            values={Object {}}
          />
        </h3>
      </div>
      <div
        className="ml-10 pl-10"
      >
        <Field
          component={[Function]}
          id="event_registrable"
          name="guestListEnabled"
          type="checkbox"
        >
          <FormattedMessage
            id="authorize-registration"
            values={Object {}}
          />
        </Field>
      </div>
      <div
        className="clearfix"
      >
        <Field
          component={[Function]}
          id="event_link"
          label={
            <FormattedMessage
              id="admin.fields.event.link"
              values={Object {}}
            />
          }
          name="link"
          placeholder="http://"
          type="text"
        />
      </div>
      <div
        className="ml-10 pl-10"
      >
        <Field
          component={[Function]}
          id="event_commentable"
          name="commentable"
          type="checkbox"
        >
          <FormattedMessage
            id="admin.fields.blog_post.is_commentable"
            values={Object {}}
          />
        </Field>
      </div>
    </div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.page.advanced"
            values={Object {}}
          />
        </h3>
      </div>
      <CustomPageFields />
      <div
        className="box-header pt-0"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.project.published_at"
            values={Object {}}
          />
        </h3>
      </div>
      <Field
        component={[Function]}
        id="event_enabled"
        label={
          <FormattedMessage
            id="proposal.state.published"
            values={Object {}}
          />
        }
        name="enabled"
        type="checkbox"
      />
    </div>
  </div>
</form>
`;

exports[`<EventForm /> it renders correctly without default props 1`] = `
<form
  className="eventForm"
>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="proposal.admin.general"
        values={Object {}}
      />
    </h3>
  </div>
  <div
    className="box-body"
  >
    <Field
      component={[Function]}
      id="event_title"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.group.title"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="title"
      type="text"
    />
    <UserListField
      ariaControls="EventForm-filter-user-listbox"
      authorOfEvent={false}
      autoload={true}
      className=""
      clearable={false}
      debounce={false}
      disabled={false}
      id="event_author"
      inputClassName="fake-inputClassName"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.argument_vote.voter"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      labelClassName={null}
      multi={false}
      name="author"
      placeholder={null}
      selectFieldIsObject={true}
    />
    <Field
      component={[Function]}
      formName="EventForm"
      id="event_address"
      label={
        <FormattedMessage
          id="admin.fields.proposal.address"
          values={Object {}}
        />
      }
      name="addressText"
      placeholder="proposal.map.form.placeholder"
      type="address"
    />
    <Field
      component={[Function]}
      id="event_body"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.proposal_form.description"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="body"
      type="editor"
    />
    <div
      className="datePickContainer"
    >
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        dateTimeInputProps={
          Object {
            "id": "event_input_startAt",
          }
        }
        formName="EventForm"
        id="event_startAt"
        label={
          <span>
            <FormattedMessage
              id="start-date"
              values={Object {}}
            />
             
            <span
              className="excerpt"
            >
              <FormattedMessage
                id="global.mandatory"
                values={Object {}}
              />
            </span>
          </span>
        }
        name="startAt"
        timeFormat={false}
        type="datetime"
      />
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        dateTimeInputProps={
          Object {
            "id": "event_input_endAt",
          }
        }
        formName="EventForm"
        id="event_endAt"
        label={
          <FormattedMessage
            id="ending-date"
            values={Object {}}
          />
        }
        name="endAt"
        type="datetime"
      />
    </div>
    <Field
      component={[Function]}
      id="event_media"
      label={
        <FormattedMessage
          id="admin.fields.proposal.media"
          values={Object {}}
        />
      }
      name="media"
      type="image"
    />
  </div>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="form.label_category"
        values={Object {}}
      />
    </h3>
  </div>
  <ForwardRef(Relay(InjectIntl(SelectProject)))
    clearable={true}
    label="admin.group.project"
    multi={true}
    name="projects"
    object={
      Object {
        "$refType": null,
        "author": Object {
          "displayName": "my name is toto",
          "id": "user1",
        },
        "body": "<p>My body</p>",
        "commentable": true,
        "customCode": "",
        "enabled": true,
        "fullAddress": "",
        "googleMapsAddress": null,
        "guestListEnabled": true,
        "id": "event1",
        "lat": null,
        "link": "http://weezevent.com",
        "lng": null,
        "media": Object {
          "id": "media1",
          "url": "http://capco.dev",
        },
        "metaDescription": "",
        "projects": Array [],
        "themes": Array [],
        "timeRange": Object {
          "endAt": "",
          "startAt": "2019-04-21",
        },
        "title": "my event",
      }
    }
    query={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "viewer": Object {
          "isAdmin": true,
          "isSuperAdmin": false,
        },
      }
    }
  />
  <div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="proposal_form.admin.settings.options"
            values={Object {}}
          />
        </h3>
      </div>
      <div
        className="ml-10 pl-10"
      >
        <Field
          component={[Function]}
          id="event_registrable"
          name="guestListEnabled"
          type="checkbox"
        >
          <FormattedMessage
            id="authorize-registration"
            values={Object {}}
          />
        </Field>
      </div>
      <div
        className="clearfix"
      >
        <Field
          component={[Function]}
          id="event_link"
          label={
            <FormattedMessage
              id="admin.fields.event.link"
              values={Object {}}
            />
          }
          name="link"
          placeholder="http://"
          type="text"
        />
      </div>
      <div
        className="ml-10 pl-10"
      >
        <Field
          component={[Function]}
          id="event_commentable"
          name="commentable"
          type="checkbox"
        >
          <FormattedMessage
            id="admin.fields.blog_post.is_commentable"
            values={Object {}}
          />
        </Field>
      </div>
    </div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.page.advanced"
            values={Object {}}
          />
        </h3>
      </div>
      <CustomPageFields />
      <div
        className="box-header pt-0"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.project.published_at"
            values={Object {}}
          />
        </h3>
      </div>
      <Field
        component={[Function]}
        id="event_enabled"
        label={
          <FormattedMessage
            id="proposal.state.published"
            values={Object {}}
          />
        }
        name="enabled"
        type="checkbox"
      />
    </div>
  </div>
</form>
`;
