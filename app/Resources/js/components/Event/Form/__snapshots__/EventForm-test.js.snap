// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventForm /> it renders correctly with event complete 1`] = `
<form>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="proposal.admin.general"
        values={Object {}}
      />
    </h3>
  </div>
  <div
    className="box-body"
  >
    <Field
      component={[Function]}
      id="event_title"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.group.title"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="title"
      type="text"
    />
    <UserListField
      ariaControls="EventForm-filter-user-listbox"
      authorOfEvent={false}
      autoload={true}
      className=""
      clearable={false}
      debounce={false}
      disabled={false}
      id="event_author"
      inputClassName="fake-inputClassName"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.argument_vote.voter"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      labelClassName={null}
      multi={false}
      name="author"
      placeholder={null}
      selectFieldIsObject={true}
    />
    <Field
      component={[Function]}
      formName="EventForm"
      id="event_address"
      label={
        <FormattedMessage
          id="admin.fields.proposal.address"
          values={Object {}}
        />
      }
      name="addressText"
      placeholder="proposal.map.form.placeholder"
      type="address"
    />
    <Field
      component={[Function]}
      id="event_body"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.proposal_form.description"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="body"
      type="editor"
    />
    <div
      className="d-flex justify-content-between w-23"
    >
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        formName="EventForm"
        id="event_startAt"
        label={
          <span>
            <FormattedMessage
              id="start-date"
              values={Object {}}
            />
             
            <span
              className="excerpt"
            >
              <FormattedMessage
                id="global.mandatory"
                values={Object {}}
              />
            </span>
          </span>
        }
        name="startAt"
        timeFormat={false}
        type="datetime"
      />
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        formName="EventForm"
        id="event_endAt"
        label={
          <FormattedMessage
            id="ending-date"
            values={Object {}}
          />
        }
        name="endAt"
        type="datetime"
      />
    </div>
    <Field
      component={[Function]}
      id="event_media"
      label={
        <FormattedMessage
          id="admin.fields.proposal.media"
          values={Object {}}
        />
      }
      name="media"
      type="image"
    />
  </div>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="form.label_category"
        values={Object {}}
      />
    </h3>
  </div>
  <ReactRelayQueryRenderer
    environment={"RelayModernEnvironment()"}
    query={[Function]}
    render={[Function]}
    variables={
      Object {
        "withEventOnly": false,
      }
    }
  />
  <div>
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="proposal_form.admin.settings.options"
          values={Object {}}
        />
      </h3>
    </div>
    <div
      className="box-body ml-10"
    >
      <Field
        component={[Function]}
        id="event_registrable"
        name="guestListEnabled"
        type="checkbox"
      >
        <FormattedMessage
          id="authorize-registration"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="event_commentable"
        name="commentable"
        type="checkbox"
      >
        <FormattedMessage
          id="admin.fields.blog_post.is_commentable"
          values={Object {}}
        />
      </Field>
    </div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.page.advanced"
            values={Object {}}
          />
        </h3>
      </div>
      <CustomPageFields />
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.project.published_at"
            values={Object {}}
          />
        </h3>
      </div>
      <div
        className="box-body ml-10"
      >
        <Field
          component={[Function]}
          id="event_enabled"
          name="enabled"
          type="checkbox"
        >
          <FormattedMessage
            id="proposal.state.published"
            values={Object {}}
          />
        </Field>
      </div>
    </div>
  </div>
</form>
`;

exports[`<EventForm /> it renders correctly with initialValue 1`] = `
<form>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="proposal.admin.general"
        values={Object {}}
      />
    </h3>
  </div>
  <div
    className="box-body"
  >
    <Field
      component={[Function]}
      id="event_title"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.group.title"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="title"
      type="text"
    />
    <UserListField
      ariaControls="EventForm-filter-user-listbox"
      authorOfEvent={false}
      autoload={true}
      className=""
      clearable={false}
      debounce={false}
      disabled={false}
      id="event_author"
      inputClassName="fake-inputClassName"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.argument_vote.voter"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      labelClassName={null}
      multi={false}
      name="author"
      placeholder={null}
      selectFieldIsObject={true}
    />
    <Field
      component={[Function]}
      formName="EventForm"
      id="event_address"
      label={
        <FormattedMessage
          id="admin.fields.proposal.address"
          values={Object {}}
        />
      }
      name="addressText"
      placeholder="proposal.map.form.placeholder"
      type="address"
    />
    <Field
      component={[Function]}
      id="event_body"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.proposal_form.description"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="body"
      type="editor"
    />
    <div
      className="d-flex justify-content-between w-23"
    >
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        formName="EventForm"
        id="event_startAt"
        label={
          <span>
            <FormattedMessage
              id="start-date"
              values={Object {}}
            />
             
            <span
              className="excerpt"
            >
              <FormattedMessage
                id="global.mandatory"
                values={Object {}}
              />
            </span>
          </span>
        }
        name="startAt"
        timeFormat={false}
        type="datetime"
      />
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        formName="EventForm"
        id="event_endAt"
        label={
          <FormattedMessage
            id="ending-date"
            values={Object {}}
          />
        }
        name="endAt"
        type="datetime"
      />
    </div>
    <Field
      component={[Function]}
      id="event_media"
      label={
        <FormattedMessage
          id="admin.fields.proposal.media"
          values={Object {}}
        />
      }
      name="media"
      type="image"
    />
  </div>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="form.label_category"
        values={Object {}}
      />
    </h3>
  </div>
  <ReactRelayQueryRenderer
    environment={"RelayModernEnvironment()"}
    query={[Function]}
    render={[Function]}
    variables={
      Object {
        "withEventOnly": false,
      }
    }
  />
  <div>
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="proposal_form.admin.settings.options"
          values={Object {}}
        />
      </h3>
    </div>
    <div
      className="box-body ml-10"
    >
      <Field
        component={[Function]}
        id="event_registrable"
        name="guestListEnabled"
        type="checkbox"
      >
        <FormattedMessage
          id="authorize-registration"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="event_commentable"
        name="commentable"
        type="checkbox"
      >
        <FormattedMessage
          id="admin.fields.blog_post.is_commentable"
          values={Object {}}
        />
      </Field>
    </div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.page.advanced"
            values={Object {}}
          />
        </h3>
      </div>
      <CustomPageFields />
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.project.published_at"
            values={Object {}}
          />
        </h3>
      </div>
      <div
        className="box-body ml-10"
      >
        <Field
          component={[Function]}
          id="event_enabled"
          name="enabled"
          type="checkbox"
        >
          <FormattedMessage
            id="proposal.state.published"
            values={Object {}}
          />
        </Field>
      </div>
    </div>
  </div>
</form>
`;

exports[`<EventForm /> it renders correctly without default props 1`] = `
<form>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="proposal.admin.general"
        values={Object {}}
      />
    </h3>
  </div>
  <div
    className="box-body"
  >
    <Field
      component={[Function]}
      id="event_title"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.group.title"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="title"
      type="text"
    />
    <UserListField
      ariaControls="EventForm-filter-user-listbox"
      authorOfEvent={false}
      autoload={true}
      className=""
      clearable={false}
      debounce={false}
      disabled={false}
      id="event_author"
      inputClassName="fake-inputClassName"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.argument_vote.voter"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      labelClassName={null}
      multi={false}
      name="author"
      placeholder={null}
      selectFieldIsObject={true}
    />
    <Field
      component={[Function]}
      formName="EventForm"
      id="event_address"
      label={
        <FormattedMessage
          id="admin.fields.proposal.address"
          values={Object {}}
        />
      }
      name="addressText"
      placeholder="proposal.map.form.placeholder"
      type="address"
    />
    <Field
      component={[Function]}
      id="event_body"
      label={
        <span>
          <FormattedMessage
            id="admin.fields.proposal_form.description"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="body"
      type="editor"
    />
    <div
      className="d-flex justify-content-between w-23"
    >
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        formName="EventForm"
        id="event_startAt"
        label={
          <span>
            <FormattedMessage
              id="start-date"
              values={Object {}}
            />
             
            <span
              className="excerpt"
            >
              <FormattedMessage
                id="global.mandatory"
                values={Object {}}
              />
            </span>
          </span>
        }
        name="startAt"
        timeFormat={false}
        type="datetime"
      />
      <Field
        addonAfter={
          <i
            className="cap-calendar-2"
          />
        }
        component={[Function]}
        formName="EventForm"
        id="event_endAt"
        label={
          <FormattedMessage
            id="ending-date"
            values={Object {}}
          />
        }
        name="endAt"
        type="datetime"
      />
    </div>
    <Field
      component={[Function]}
      id="event_media"
      label={
        <FormattedMessage
          id="admin.fields.proposal.media"
          values={Object {}}
        />
      }
      name="media"
      type="image"
    />
  </div>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="form.label_category"
        values={Object {}}
      />
    </h3>
  </div>
  <ReactRelayQueryRenderer
    environment={"RelayModernEnvironment()"}
    query={[Function]}
    render={[Function]}
    variables={
      Object {
        "withEventOnly": false,
      }
    }
  />
  <div>
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="proposal_form.admin.settings.options"
          values={Object {}}
        />
      </h3>
    </div>
    <div
      className="box-body ml-10"
    >
      <Field
        component={[Function]}
        id="event_registrable"
        name="guestListEnabled"
        type="checkbox"
      >
        <FormattedMessage
          id="authorize-registration"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="event_commentable"
        name="commentable"
        type="checkbox"
      >
        <FormattedMessage
          id="admin.fields.blog_post.is_commentable"
          values={Object {}}
        />
      </Field>
    </div>
    <div>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.page.advanced"
            values={Object {}}
          />
        </h3>
      </div>
      <CustomPageFields />
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="admin.fields.project.published_at"
            values={Object {}}
          />
        </h3>
      </div>
      <div
        className="box-body ml-10"
      >
        <Field
          component={[Function]}
          id="event_enabled"
          name="enabled"
          type="checkbox"
        >
          <FormattedMessage
            id="proposal.state.published"
            values={Object {}}
          />
        </Field>
      </div>
    </div>
  </div>
</form>
`;
