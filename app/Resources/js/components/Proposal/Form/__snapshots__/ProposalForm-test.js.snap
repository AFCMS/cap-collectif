// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalForm /> should render a create form 1`] = `
<form
  id="proposal-form"
>
  <div
    className="mb-15"
  >
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "Description 1",
        }
      }
    />
  </div>
  <Field
    addonAfter={
      <Glyphicon
        bsClass="glyphicon"
        className=""
        glyph="refresh"
      />
    }
    autoComplete="off"
    component={[Function]}
    help="Title help"
    id="proposal_title"
    label={
      <FormattedMessage
        id="proposal.title"
        values={Object {}}
      />
    }
    name="title"
    type="text"
  />
  <Collapse
    appear={false}
    dimension="height"
    getDimensionValue={[Function]}
    in={false}
    mountOnEnter={false}
    timeout={300}
    unmountOnExit={false}
  >
    <Uncontrolled(Panel)>
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <PanelTitle
          bsClass="panel"
          componentClass="div"
        >
          <FormattedMessage
            id="proposal.suggest_header"
            values={
              Object {
                "matches": 0,
                "terms": 2,
              }
            }
          />
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="pull-right"
            disabled={false}
            onClick={[Function]}
            style={
              Object {
                "marginTop": -5,
              }
            }
          >
            <FormattedMessage
              id="global.close"
              values={Object {}}
            />
          </Button>
        </PanelTitle>
      </PanelHeading>
      <ListGroup
        bsClass="list-group"
      />
    </Uncontrolled(Panel)>
  </Collapse>
  <Field
    autoComplete="off"
    component={[Function]}
    help="Summary help"
    id="proposal_summary"
    label={
      <span>
        <FormattedMessage
          id="proposal.summary"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.form.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    maxLength="140"
    name="summary"
    type="textarea"
  />
  <Field
    component={[Function]}
    help="Theme help"
    id="proposal_theme"
    label={
      <span>
        <FormattedMessage
          id="proposal.theme"
          values={Object {}}
        />
      </span>
    }
    name="theme"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.theme"
      values={Object {}}
    />
    <option
      key="theme1"
      value="theme1"
    >
      Theme 1
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Category help"
    id="proposal_category"
    label={
      <span>
        <FormattedMessage
          id="proposal.category"
          values={Object {}}
        />
      </span>
    }
    name="category"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.category"
      values={Object {}}
    />
    <option
      key="category1"
      value="category1"
    >
      Category 1
    </option>
    <option
      key="category2"
      value="category2"
    >
      Category 2
    </option>
  </Field>
  <Field
    component={[Function]}
    formName="proposal-form"
    help="Address help"
    id="proposal_address"
    label={
      <FormattedMessage
        id="proposal.map.form.field"
        values={Object {}}
      />
    }
    name="addressText"
    placeholder="proposal.map.form.placeholder"
    type="address"
  />
  <Field
    component={[Function]}
    help="District help"
    id="proposal_district"
    label={
      <span>
        <FormattedMessage
          id="proposal.district"
          values={Object {}}
        />
      </span>
    }
    name="district"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.district"
      values={Object {}}
    />
    <option
      key="district1"
      value="district1"
    >
      District 1
    </option>
    <option
      key="district2"
      value="district2"
    >
      District 2
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Description help"
    id="proposal_body"
    label={
      <FormattedMessage
        id="proposal.body"
        values={Object {}}
      />
    }
    name="body"
    type="editor"
  />
  <FieldArray
    component={[Function]}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    name="responses"
    questions={
      Array [
        Object {
          "choices": Array [],
          "description": null,
          "helpText": "Question 1",
          "id": "question1",
          "isOtherAllowed": false,
          "position": 1,
          "private": true,
          "required": true,
          "title": "Lol",
          "type": "text",
          "validationRule": null,
        },
      ]
    }
  />
  <Field
    component={[Function]}
    help="Illustration help"
    id="proposal_media"
    label={
      <span>
        <FormattedMessage
          id="proposal.media"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.form.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    name="media"
    type="image"
  />
</form>
`;

exports[`<ProposalForm /> should render an edit form 1`] = `
<form
  id="proposal-form"
>
  <div
    className="mb-15"
  >
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "Description 1",
        }
      }
    />
  </div>
  <Field
    addonAfter={
      <Glyphicon
        bsClass="glyphicon"
        className=""
        glyph="refresh"
      />
    }
    autoComplete="off"
    component={[Function]}
    help="Title help"
    id="proposal_title"
    label={
      <FormattedMessage
        id="proposal.title"
        values={Object {}}
      />
    }
    name="title"
    type="text"
  />
  <Collapse
    appear={false}
    dimension="height"
    getDimensionValue={[Function]}
    in={false}
    mountOnEnter={false}
    timeout={300}
    unmountOnExit={false}
  >
    <Uncontrolled(Panel)>
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <PanelTitle
          bsClass="panel"
          componentClass="div"
        >
          <FormattedMessage
            id="proposal.suggest_header"
            values={
              Object {
                "matches": 0,
                "terms": 2,
              }
            }
          />
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="pull-right"
            disabled={false}
            onClick={[Function]}
            style={
              Object {
                "marginTop": -5,
              }
            }
          >
            <FormattedMessage
              id="global.close"
              values={Object {}}
            />
          </Button>
        </PanelTitle>
      </PanelHeading>
      <ListGroup
        bsClass="list-group"
      />
    </Uncontrolled(Panel)>
  </Collapse>
  <Field
    autoComplete="off"
    component={[Function]}
    help="Summary help"
    id="proposal_summary"
    label={
      <span>
        <FormattedMessage
          id="proposal.summary"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.form.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    maxLength="140"
    name="summary"
    type="textarea"
  />
  <Field
    component={[Function]}
    help="Theme help"
    id="proposal_theme"
    label={
      <span>
        <FormattedMessage
          id="proposal.theme"
          values={Object {}}
        />
      </span>
    }
    name="theme"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.theme"
      values={Object {}}
    />
    <option
      key="theme1"
      value="theme1"
    >
      Theme 1
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Category help"
    id="proposal_category"
    label={
      <span>
        <FormattedMessage
          id="proposal.category"
          values={Object {}}
        />
      </span>
    }
    name="category"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.category"
      values={Object {}}
    />
    <option
      key="category1"
      value="category1"
    >
      Category 1
    </option>
    <option
      key="category2"
      value="category2"
    >
      Category 2
    </option>
  </Field>
  <Field
    component={[Function]}
    formName="proposal-form"
    help="Address help"
    id="proposal_address"
    label={
      <FormattedMessage
        id="proposal.map.form.field"
        values={Object {}}
      />
    }
    name="addressText"
    placeholder="proposal.map.form.placeholder"
    type="address"
  />
  <Field
    component={[Function]}
    help="District help"
    id="proposal_district"
    label={
      <span>
        <FormattedMessage
          id="proposal.district"
          values={Object {}}
        />
      </span>
    }
    name="district"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.district"
      values={Object {}}
    />
    <option
      key="district1"
      value="district1"
    >
      District 1
    </option>
    <option
      key="district2"
      value="district2"
    >
      District 2
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Description help"
    id="proposal_body"
    label={
      <FormattedMessage
        id="proposal.body"
        values={Object {}}
      />
    }
    name="body"
    type="editor"
  />
  <FieldArray
    component={[Function]}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    name="responses"
    questions={
      Array [
        Object {
          "choices": Array [],
          "description": null,
          "helpText": "Question 1",
          "id": "question1",
          "isOtherAllowed": false,
          "position": 1,
          "private": true,
          "required": true,
          "title": "Lol",
          "type": "text",
          "validationRule": null,
        },
      ]
    }
  />
  <Field
    component={[Function]}
    help="Illustration help"
    id="proposal_media"
    label={
      <span>
        <FormattedMessage
          id="proposal.media"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.form.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    name="media"
    type="image"
  />
</form>
`;
