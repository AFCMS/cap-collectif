// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LeafletMap /> should not render a map with visible = false 1`] = `""`;

exports[`<LeafletMap /> should render a map with markers 1`] = `
<Map
  center={
    Object {
      "lat": 48.8586047,
      "lng": 2.3137325,
    }
  }
  maxZoom={18}
  style={
    Object {
      "height": "50vw",
      "width": "100%",
    }
  }
  zoom={12}
>
  <ForwardRef(Leaflet(TileLayer))
    attribution="© <a href=\\"https://www.mapbox.com/about/maps/\\">Mapbox</a> © <a href=\\"http://osm.org/copyright\\">OpenStreetMap</a> <a href=\\"https://www.mapbox.com/map-feedback/#/-74.5/40/10\\">Improve this map</a>"
    url="https://api.mapbox.com/styles/v1/capcollectif/***REMOVED***/tiles/256/{z}/{x}/{y}?access_token=***REMOVED***"
  />
  <ForwardRef(Leaflet(t))
    maxClusterRadius={30}
    showCoverageOnHover={false}
    spiderfyOnMaxZoom={true}
    zoomToBoundsOnClick={true}
  >
    <ForwardRef(Leaflet(Marker))
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "iconAnchor": Array [
              20,
              40,
            ],
            "iconSize": Array [
              40,
              40,
            ],
            "iconUrl": "/svg/marker.svg",
            "popupAnchor": Array [
              0,
              -40,
            ],
          },
        }
      }
      key="0"
      position={
        Array [
          49.8397,
          24.0297,
        ]
      }
    >
      <ForwardRef(Leaflet(Popup))>
        <div>
          <h2
            className="h4 proposal__title"
          >
            <a
              href="http://test"
            >
              test
            </a>
          </h2>
           
          Par : 
          <a
            href="http://test"
          >
            test
          </a>
        </div>
      </ForwardRef(Leaflet(Popup))>
    </ForwardRef(Leaflet(Marker))>
    <ForwardRef(Leaflet(Marker))
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "iconAnchor": Array [
              20,
              40,
            ],
            "iconSize": Array [
              40,
              40,
            ],
            "iconUrl": "/svg/marker.svg",
            "popupAnchor": Array [
              0,
              -40,
            ],
          },
        }
      }
      key="1"
      position={
        Array [
          52.2297,
          21.0122,
        ]
      }
    >
      <ForwardRef(Leaflet(Popup))>
        <div>
          <h2
            className="h4 proposal__title"
          >
            <a
              href="http://test"
            >
              test
            </a>
          </h2>
           
          Par : 
          <a
            href="http://test"
          >
            test
          </a>
        </div>
      </ForwardRef(Leaflet(Popup))>
    </ForwardRef(Leaflet(Marker))>
    <ForwardRef(Leaflet(Marker))
      icon={
        NewClass {
          "_initHooksCalled": true,
          "options": Object {
            "iconAnchor": Array [
              20,
              40,
            ],
            "iconSize": Array [
              40,
              40,
            ],
            "iconUrl": "/svg/marker.svg",
            "popupAnchor": Array [
              0,
              -40,
            ],
          },
        }
      }
      key="2"
      position={
        Array [
          51.5074,
          -0.0901,
        ]
      }
    >
      <ForwardRef(Leaflet(Popup))>
        <div>
          <h2
            className="h4 proposal__title"
          >
            <a
              href="http://test"
            >
              test
            </a>
          </h2>
           
          Par : 
          <a
            href="http://test"
          >
            test
          </a>
        </div>
      </ForwardRef(Leaflet(Popup))>
    </ForwardRef(Leaflet(Marker))>
  </ForwardRef(Leaflet(t))>
  <ForwardRef(Leaflet(injectIntl(LocateControl))) />
  <ForwardRef(Leaflet(injectIntl(LeafletSearch))) />
</Map>
`;
