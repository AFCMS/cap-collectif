// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalPage /> should render a proposal page 1`] = `
<div>
  <ProposalDraftAlert
    proposal={
      Object {
        "commentsCount": 5,
        "id": 41,
        "referer": "http://capco.test",
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 0,
        },
      }
    }
  />
  <ProposalPageAlert
    proposal={
      Object {
        "commentsCount": 5,
        "id": 41,
        "referer": "http://capco.test",
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 0,
        },
      }
    }
  />
  <Connect(ProposalPageHeader)
    className="container container--custom"
    proposal={
      Object {
        "commentsCount": 5,
        "id": 41,
        "referer": "http://capco.test",
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 0,
        },
      }
    }
  />
  <Uncontrolled(TabContainer)
    className="tabs__container container--custom"
    defaultActiveKey="content"
    id="proposal-page-tabs"
  >
    <div>
      <div
        className="tabs"
      >
        <div
          className="container"
        >
          <Nav
            bsClass="nav"
            bsStyle="tabs"
            justified={false}
            pullLeft={false}
            pullRight={false}
            stacked={false}
          >
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="content"
            >
              <FormattedMessage
                id="proposal.tabs.content"
                values={Object {}}
              />
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="blog"
            >
              <FormattedMessage
                id="proposal.tabs.blog"
                values={Object {}}
              />
              <span
                className="badge"
              />
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="votes"
            >
              <FormattedMessage
                id="proposal.tabs.votes"
                values={Object {}}
              />
              <span
                className="badge"
              >
                0
              </span>
            </NavItem>
          </Nav>
        </div>
      </div>
      <div
        className="container"
      >
        <TabContent
          animation={false}
          bsClass="tab"
          componentClass="div"
          mountOnEnter={false}
          unmountOnExit={false}
        >
          <TabPane
            bsClass="tab-pane"
            eventKey="content"
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={8}
                xs={12}
              >
                <ProposalFusionList
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                  type="From"
                />
                <ProposalFusionList
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                  type="Into"
                />
                <Connect(ProposalPageLastNews)
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                />
                <Connect(ProposalPageContent)
                  categories={Array []}
                  form={
                    Object {
                      "usingCategories": false,
                      "usingThemes": true,
                    }
                  }
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                />
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
                xs={12}
              >
                <ProposalPageMetadata
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                  showCategories={false}
                  showDistricts={false}
                  showNullEstimation={false}
                  showThemes={true}
                />
                <br />
                <ProposalPageAdvancement
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                />
              </Col>
            </Row>
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="votes"
          >
            <Uncontrolled(TabContainer)
              defaultActiveKey={0}
              id="tab-votesByStep"
            >
              <Row
                bsClass="row"
                className="clearfix"
                componentClass="div"
              >
                <Nav
                  bsClass="nav"
                  bsStyle="pills"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                />
                <TabContent
                  animation={false}
                  bsClass="tab"
                  componentClass="div"
                  mountOnEnter={false}
                  unmountOnExit={false}
                />
              </Row>
            </Uncontrolled(TabContainer)>
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="blog"
          >
            <Connect(ProposalPageBlog) />
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="evaluation"
          >
            <ReactRelayQueryRenderer
              environment={
                RelayModernEnvironment {
                  "__setNet": [Function],
                  "_debugger": EnvironmentDebugger {
                    "_envIsDirty": false,
                    "_environment": [Circular],
                    "_id": "RelayModernEnvironment1",
                    "_isRecordingMutationEvents": false,
                    "_recordedMutationEvents": Array [],
                  },
                  "_network": Object {
                    "execute": [Function],
                  },
                  "_publishQueue": RelayPublishQueue {
                    "_appliedOptimisticUpdates": Array [],
                    "_backup": Object {},
                    "_handlerProvider": [Function],
                    "_pendingBackupRebase": false,
                    "_pendingData": Array [],
                    "_pendingOptimisticUpdates": Array [],
                    "_pendingUpdaters": Array [],
                    "_store": RelayMarkSweepStore {
                      "_hasScheduledGC": false,
                      "_index": 0,
                      "_recordSource": Object {},
                      "_roots": Array [],
                      "_subscriptions": Array [],
                      "_updatedRecordIDs": Object {},
                    },
                  },
                  "_store": RelayMarkSweepStore {
                    "_hasScheduledGC": false,
                    "_index": 0,
                    "_recordSource": Object {},
                    "_roots": Array [],
                    "_subscriptions": Array [],
                    "_updatedRecordIDs": Object {},
                  },
                  "configName": undefined,
                  "unstable_internal": Object {
                    "areEqualSelectors": [Function],
                    "createFragmentSpecResolver": [Function],
                    "createOperationSelector": [Function],
                    "getDataIDsFromObject": [Function],
                    "getFragment": [Function],
                    "getOperation": [Function],
                    "getSelector": [Function],
                    "getSelectorList": [Function],
                    "getSelectorsFromObject": [Function],
                    "getVariablesFromObject": [Function],
                  },
                }
              }
              query={[Function]}
              render={[Function]}
              variables={
                Object {
                  "proposalId": 41,
                }
              }
            />
          </TabPane>
        </TabContent>
      </div>
      <Connect(ProposalVoteModal)
        proposal={
          Object {
            "commentsCount": 5,
            "id": 41,
            "referer": "http://capco.test",
            "votableStepId": "2",
            "votesCountByStepId": Object {
              "2": 0,
            },
          }
        }
      />
    </div>
  </Uncontrolled(TabContainer)>
</div>
`;

exports[`<ProposalPage /> should render a proposal page with evaluation tab 1`] = `
<div>
  <ProposalDraftAlert
    proposal={
      Object {
        "commentsCount": 5,
        "id": 41,
        "referer": "http://capco.test",
        "viewerCanSeeEvaluation": true,
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 0,
        },
      }
    }
  />
  <ProposalPageAlert
    proposal={
      Object {
        "commentsCount": 5,
        "id": 41,
        "referer": "http://capco.test",
        "viewerCanSeeEvaluation": true,
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 0,
        },
      }
    }
  />
  <Connect(ProposalPageHeader)
    className="container container--custom"
    proposal={
      Object {
        "commentsCount": 5,
        "id": 41,
        "referer": "http://capco.test",
        "viewerCanSeeEvaluation": true,
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 0,
        },
      }
    }
  />
  <Uncontrolled(TabContainer)
    className="tabs__container container--custom"
    defaultActiveKey="content"
    id="proposal-page-tabs"
  >
    <div>
      <div
        className="tabs"
      >
        <div
          className="container"
        >
          <Nav
            bsClass="nav"
            bsStyle="tabs"
            justified={false}
            pullLeft={false}
            pullRight={false}
            stacked={false}
          >
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="content"
            >
              <FormattedMessage
                id="proposal.tabs.content"
                values={Object {}}
              />
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="blog"
            >
              <FormattedMessage
                id="proposal.tabs.blog"
                values={Object {}}
              />
              <span
                className="badge"
              />
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="evaluation"
            >
              <FormattedMessage
                id="proposal.tabs.evaluation"
                values={Object {}}
              />
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="votes"
            >
              <FormattedMessage
                id="proposal.tabs.votes"
                values={Object {}}
              />
              <span
                className="badge"
              >
                0
              </span>
            </NavItem>
          </Nav>
        </div>
      </div>
      <div
        className="container"
      >
        <TabContent
          animation={false}
          bsClass="tab"
          componentClass="div"
          mountOnEnter={false}
          unmountOnExit={false}
        >
          <TabPane
            bsClass="tab-pane"
            eventKey="content"
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={8}
                xs={12}
              >
                <ProposalFusionList
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "viewerCanSeeEvaluation": true,
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                  type="From"
                />
                <ProposalFusionList
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "viewerCanSeeEvaluation": true,
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                  type="Into"
                />
                <Connect(ProposalPageLastNews)
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "viewerCanSeeEvaluation": true,
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                />
                <Connect(ProposalPageContent)
                  categories={Array []}
                  form={
                    Object {
                      "usingCategories": false,
                      "usingThemes": true,
                    }
                  }
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "viewerCanSeeEvaluation": true,
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                />
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
                xs={12}
              >
                <ProposalPageMetadata
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "viewerCanSeeEvaluation": true,
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                  showCategories={false}
                  showDistricts={false}
                  showNullEstimation={false}
                  showThemes={true}
                />
                <br />
                <ProposalPageAdvancement
                  proposal={
                    Object {
                      "commentsCount": 5,
                      "id": 41,
                      "referer": "http://capco.test",
                      "viewerCanSeeEvaluation": true,
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 0,
                      },
                    }
                  }
                />
              </Col>
            </Row>
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="votes"
          >
            <Uncontrolled(TabContainer)
              defaultActiveKey={0}
              id="tab-votesByStep"
            >
              <Row
                bsClass="row"
                className="clearfix"
                componentClass="div"
              >
                <Nav
                  bsClass="nav"
                  bsStyle="pills"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                />
                <TabContent
                  animation={false}
                  bsClass="tab"
                  componentClass="div"
                  mountOnEnter={false}
                  unmountOnExit={false}
                />
              </Row>
            </Uncontrolled(TabContainer)>
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="blog"
          >
            <Connect(ProposalPageBlog) />
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="evaluation"
          >
            <ReactRelayQueryRenderer
              environment={
                RelayModernEnvironment {
                  "__setNet": [Function],
                  "_debugger": EnvironmentDebugger {
                    "_envIsDirty": false,
                    "_environment": [Circular],
                    "_id": "RelayModernEnvironment1",
                    "_isRecordingMutationEvents": false,
                    "_recordedMutationEvents": Array [],
                  },
                  "_network": Object {
                    "execute": [Function],
                  },
                  "_publishQueue": RelayPublishQueue {
                    "_appliedOptimisticUpdates": Array [],
                    "_backup": Object {},
                    "_handlerProvider": [Function],
                    "_pendingBackupRebase": false,
                    "_pendingData": Array [],
                    "_pendingOptimisticUpdates": Array [],
                    "_pendingUpdaters": Array [],
                    "_store": RelayMarkSweepStore {
                      "_hasScheduledGC": false,
                      "_index": 0,
                      "_recordSource": Object {},
                      "_roots": Array [],
                      "_subscriptions": Array [],
                      "_updatedRecordIDs": Object {},
                    },
                  },
                  "_store": RelayMarkSweepStore {
                    "_hasScheduledGC": false,
                    "_index": 0,
                    "_recordSource": Object {},
                    "_roots": Array [],
                    "_subscriptions": Array [],
                    "_updatedRecordIDs": Object {},
                  },
                  "configName": undefined,
                  "unstable_internal": Object {
                    "areEqualSelectors": [Function],
                    "createFragmentSpecResolver": [Function],
                    "createOperationSelector": [Function],
                    "getDataIDsFromObject": [Function],
                    "getFragment": [Function],
                    "getOperation": [Function],
                    "getSelector": [Function],
                    "getSelectorList": [Function],
                    "getSelectorsFromObject": [Function],
                    "getVariablesFromObject": [Function],
                  },
                }
              }
              query={[Function]}
              render={[Function]}
              variables={
                Object {
                  "proposalId": 41,
                }
              }
            />
          </TabPane>
        </TabContent>
      </div>
      <Connect(ProposalVoteModal)
        proposal={
          Object {
            "commentsCount": 5,
            "id": 41,
            "referer": "http://capco.test",
            "viewerCanSeeEvaluation": true,
            "votableStepId": "2",
            "votesCountByStepId": Object {
              "2": 0,
            },
          }
        }
      />
    </div>
  </Uncontrolled(TabContainer)>
</div>
`;

exports[`<ProposalPage /> should render a vote tab and a vote modal if votable step is specified 1`] = `
<div>
  <ProposalDraftAlert
    proposal={
      Object {
        "id": 42,
        "referer": "http://capco.test",
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 5,
        },
      }
    }
  />
  <ProposalPageAlert
    proposal={
      Object {
        "id": 42,
        "referer": "http://capco.test",
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 5,
        },
      }
    }
  />
  <Connect(ProposalPageHeader)
    className="container container--custom"
    proposal={
      Object {
        "id": 42,
        "referer": "http://capco.test",
        "votableStepId": "2",
        "votesCountByStepId": Object {
          "2": 5,
        },
      }
    }
  />
  <Uncontrolled(TabContainer)
    className="tabs__container container--custom"
    defaultActiveKey="content"
    id="proposal-page-tabs"
  >
    <div>
      <div
        className="tabs"
      >
        <div
          className="container"
        >
          <Nav
            bsClass="nav"
            bsStyle="tabs"
            justified={false}
            pullLeft={false}
            pullRight={false}
            stacked={false}
          >
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="content"
            >
              <FormattedMessage
                id="proposal.tabs.content"
                values={Object {}}
              />
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="blog"
            >
              <FormattedMessage
                id="proposal.tabs.blog"
                values={Object {}}
              />
              <span
                className="badge"
              />
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="votes"
            >
              <FormattedMessage
                id="proposal.tabs.votes"
                values={Object {}}
              />
              <span
                className="badge"
              >
                5
              </span>
            </NavItem>
          </Nav>
        </div>
      </div>
      <div
        className="container"
      >
        <TabContent
          animation={false}
          bsClass="tab"
          componentClass="div"
          mountOnEnter={false}
          unmountOnExit={false}
        >
          <TabPane
            bsClass="tab-pane"
            eventKey="content"
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={8}
                xs={12}
              >
                <ProposalFusionList
                  proposal={
                    Object {
                      "id": 42,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 5,
                      },
                    }
                  }
                  type="From"
                />
                <ProposalFusionList
                  proposal={
                    Object {
                      "id": 42,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 5,
                      },
                    }
                  }
                  type="Into"
                />
                <Connect(ProposalPageLastNews)
                  proposal={
                    Object {
                      "id": 42,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 5,
                      },
                    }
                  }
                />
                <Connect(ProposalPageContent)
                  categories={Array []}
                  form={
                    Object {
                      "usingCategories": false,
                      "usingThemes": true,
                    }
                  }
                  proposal={
                    Object {
                      "id": 42,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 5,
                      },
                    }
                  }
                />
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
                xs={12}
              >
                <ProposalPageMetadata
                  proposal={
                    Object {
                      "id": 42,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 5,
                      },
                    }
                  }
                  showCategories={false}
                  showDistricts={false}
                  showNullEstimation={false}
                  showThemes={true}
                />
                <br />
                <ProposalPageAdvancement
                  proposal={
                    Object {
                      "id": 42,
                      "referer": "http://capco.test",
                      "votableStepId": "2",
                      "votesCountByStepId": Object {
                        "2": 5,
                      },
                    }
                  }
                />
              </Col>
            </Row>
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="votes"
          >
            <Uncontrolled(TabContainer)
              defaultActiveKey={0}
              id="tab-votesByStep"
            >
              <Row
                bsClass="row"
                className="clearfix"
                componentClass="div"
              >
                <Nav
                  bsClass="nav"
                  bsStyle="pills"
                  justified={false}
                  pullLeft={false}
                  pullRight={false}
                  stacked={false}
                />
                <TabContent
                  animation={false}
                  bsClass="tab"
                  componentClass="div"
                  mountOnEnter={false}
                  unmountOnExit={false}
                />
              </Row>
            </Uncontrolled(TabContainer)>
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="blog"
          >
            <Connect(ProposalPageBlog) />
          </TabPane>
          <TabPane
            bsClass="tab-pane"
            eventKey="evaluation"
          >
            <ReactRelayQueryRenderer
              environment={
                RelayModernEnvironment {
                  "__setNet": [Function],
                  "_debugger": EnvironmentDebugger {
                    "_envIsDirty": false,
                    "_environment": [Circular],
                    "_id": "RelayModernEnvironment1",
                    "_isRecordingMutationEvents": false,
                    "_recordedMutationEvents": Array [],
                  },
                  "_network": Object {
                    "execute": [Function],
                  },
                  "_publishQueue": RelayPublishQueue {
                    "_appliedOptimisticUpdates": Array [],
                    "_backup": Object {},
                    "_handlerProvider": [Function],
                    "_pendingBackupRebase": false,
                    "_pendingData": Array [],
                    "_pendingOptimisticUpdates": Array [],
                    "_pendingUpdaters": Array [],
                    "_store": RelayMarkSweepStore {
                      "_hasScheduledGC": false,
                      "_index": 0,
                      "_recordSource": Object {},
                      "_roots": Array [],
                      "_subscriptions": Array [],
                      "_updatedRecordIDs": Object {},
                    },
                  },
                  "_store": RelayMarkSweepStore {
                    "_hasScheduledGC": false,
                    "_index": 0,
                    "_recordSource": Object {},
                    "_roots": Array [],
                    "_subscriptions": Array [],
                    "_updatedRecordIDs": Object {},
                  },
                  "configName": undefined,
                  "unstable_internal": Object {
                    "areEqualSelectors": [Function],
                    "createFragmentSpecResolver": [Function],
                    "createOperationSelector": [Function],
                    "getDataIDsFromObject": [Function],
                    "getFragment": [Function],
                    "getOperation": [Function],
                    "getSelector": [Function],
                    "getSelectorList": [Function],
                    "getSelectorsFromObject": [Function],
                    "getVariablesFromObject": [Function],
                  },
                }
              }
              query={[Function]}
              render={[Function]}
              variables={
                Object {
                  "proposalId": 42,
                }
              }
            />
          </TabPane>
        </TabContent>
      </div>
      <Connect(ProposalVoteModal)
        proposal={
          Object {
            "id": 42,
            "referer": "http://capco.test",
            "votableStepId": "2",
            "votesCountByStepId": Object {
              "2": 5,
            },
          }
        }
      />
    </div>
  </Uncontrolled(TabContainer)>
</div>
`;
