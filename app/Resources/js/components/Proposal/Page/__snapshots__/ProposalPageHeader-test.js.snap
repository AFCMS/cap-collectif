// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalPageHeader /> should not render theme if proposal has none 1`] = `
<div
  className="proposal__header "
>
  <div>
    <a
      href="http://capco.test"
      style={
        Object {
          "textDecoration": "none",
        }
      }
    >
      <i
        className="cap cap-arrow-65-1 icon--black"
      />
       
      <FormattedMessage
        id="proposal.back"
        values={Object {}}
      />
    </a>
  </div>
  <h1
    className="consultation__header__title h1"
  >
    Titre
  </h1>
  <div
    className="media"
  >
    <UserAvatar
      anchor={true}
      className="pull-left"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      size={45}
      style={Object {}}
      user={Object {}}
    />
    <div
      className="media-body"
    >
      <p
        className="media--aligned excerpt"
      >
        <FormattedMessage
          id="proposal.infos.header"
          values={
            Object {
              "createdDate": <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2018-01-31T15:13:21.252Z"}
                year="numeric"
              />,
              "user": <UserLink
                className=""
                user={Object {}}
              />,
            }
          }
        />
      </p>
    </div>
    <Connect(ProposalVoteButtonWrapper)
      className="btn-lg"
      id="proposal-vote-btn-undefined"
      proposal={
        Object {
          "author": Object {},
          "referer": "http://capco.test",
          "title": "Titre",
        }
      }
    />
  </div>
</div>
`;

exports[`<ProposalPageHeader /> should not render theme if specified not to 1`] = `
<div
  className="proposal__header "
>
  <div>
    <a
      href="http://capco.test"
      style={
        Object {
          "textDecoration": "none",
        }
      }
    >
      <i
        className="cap cap-arrow-65-1 icon--black"
      />
       
      <FormattedMessage
        id="proposal.back"
        values={Object {}}
      />
    </a>
  </div>
  <h1
    className="consultation__header__title h1"
  >
    Titre
  </h1>
  <div
    className="media"
  >
    <UserAvatar
      anchor={true}
      className="pull-left"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      size={45}
      style={Object {}}
      user={Object {}}
    />
    <div
      className="media-body"
    >
      <p
        className="media--aligned excerpt"
      >
        <FormattedMessage
          id="proposal.infos.header"
          values={
            Object {
              "createdDate": <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2018-01-31T15:13:21.252Z"}
                year="numeric"
              />,
              "user": <UserLink
                className=""
                user={Object {}}
              />,
            }
          }
        />
      </p>
    </div>
    <Connect(ProposalVoteButtonWrapper)
      className="btn-lg"
      id="proposal-vote-btn-undefined"
      proposal={
        Object {
          "author": Object {},
          "theme": Object {
            "title": "Titre du thème",
          },
          "title": "Titre",
        }
      }
    />
  </div>
</div>
`;

exports[`<ProposalPageHeader /> should render a div with specified classes 1`] = `
<div
  className="proposal__header css-class"
>
  <div>
    <a
      href="http://capco.test"
      style={
        Object {
          "textDecoration": "none",
        }
      }
    >
      <i
        className="cap cap-arrow-65-1 icon--black"
      />
       
      <FormattedMessage
        id="proposal.back"
        values={Object {}}
      />
    </a>
  </div>
  <h1
    className="consultation__header__title h1"
  >
    Titre
  </h1>
  <div
    className="media"
  >
    <UserAvatar
      anchor={true}
      className="pull-left"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      size={45}
      style={Object {}}
      user={Object {}}
    />
    <div
      className="media-body"
    >
      <p
        className="media--aligned excerpt"
      >
        <FormattedMessage
          id="proposal.infos.header"
          values={
            Object {
              "createdDate": <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2018-01-31T15:13:21.252Z"}
                year="numeric"
              />,
              "user": <UserLink
                className=""
                user={Object {}}
              />,
            }
          }
        />
      </p>
    </div>
    <Connect(ProposalVoteButtonWrapper)
      className="btn-lg"
      id="proposal-vote-btn-undefined"
      proposal={
        Object {
          "author": Object {},
          "theme": Object {
            "title": "Titre du thème",
          },
          "title": "Titre",
        }
      }
    />
  </div>
</div>
`;

exports[`<ProposalPageHeader /> should render a proposal header 1`] = `
<div
  className="proposal__header "
>
  <div>
    <a
      href="http://capco.test"
      style={
        Object {
          "textDecoration": "none",
        }
      }
    >
      <i
        className="cap cap-arrow-65-1 icon--black"
      />
       
      <FormattedMessage
        id="proposal.back"
        values={Object {}}
      />
    </a>
  </div>
  <h1
    className="consultation__header__title h1"
  >
    Titre
  </h1>
  <div
    className="media"
  >
    <UserAvatar
      anchor={true}
      className="pull-left"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      size={45}
      style={Object {}}
      user={Object {}}
    />
    <div
      className="media-body"
    >
      <p
        className="media--aligned excerpt"
      >
        <FormattedMessage
          id="proposal.infos.header"
          values={
            Object {
              "createdDate": <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2018-01-31T15:13:21.252Z"}
                year="numeric"
              />,
              "user": <UserLink
                className=""
                user={Object {}}
              />,
            }
          }
        />
      </p>
    </div>
    <Connect(ProposalVoteButtonWrapper)
      className="btn-lg"
      id="proposal-vote-btn-undefined"
      proposal={
        Object {
          "author": Object {},
          "theme": Object {
            "title": "Titre du thème",
          },
          "title": "Titre",
        }
      }
    />
  </div>
</div>
`;
