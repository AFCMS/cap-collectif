// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalPageTabs /> should render Tabs with correct DOM structure 1`] = `
<Uncontrolled(TabContainer)
  className="tabs__container container--custom"
  defaultActiveKey="content"
  id="proposal-page-tabs"
>
  <div>
    <div
      className="tabs"
    >
      <div
        className="container"
      >
        <Nav
          bsClass="nav"
          bsStyle="tabs"
          justified={false}
          pullLeft={false}
          pullRight={false}
          stacked={false}
        >
          <NavItem
            active={false}
            className="tab"
            disabled={false}
            eventKey="content"
          >
            <FormattedMessage
              id="proposal.tabs.content"
              values={Object {}}
            />
          </NavItem>
          <NavItem
            active={false}
            className="tab"
            disabled={false}
            eventKey="blog"
          >
            <FormattedMessage
              id="proposal.tabs.blog"
              values={Object {}}
            />
            <span
              className="badge"
            >
              1
            </span>
          </NavItem>
          <NavItem
            active={false}
            className="tab"
            disabled={false}
            eventKey="evaluation"
          >
            <FormattedMessage
              id="proposal.tabs.evaluation"
              values={Object {}}
            />
          </NavItem>
          <NavItem
            active={false}
            className="tab"
            disabled={false}
            eventKey="votes"
          >
            <FormattedMessage
              id="proposal.tabs.votes"
              values={Object {}}
            />
            <span
              className="badge"
            >
              1
            </span>
          </NavItem>
          <NavItem
            active={false}
            className="tab"
            disabled={false}
            eventKey="followers"
          >
            <FormattedMessage
              id="proposal.tabs.followers"
              values={Object {}}
            />
            <span
              className="badge"
            >
              169
            </span>
          </NavItem>
        </Nav>
      </div>
    </div>
    <div
      className="container"
    >
      <TabContent
        animation={false}
        bsClass="tab"
        componentClass="div"
        mountOnEnter={false}
        unmountOnExit={false}
      >
        <TabPane
          bsClass="tab-pane"
          eventKey="content"
        >
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              sm={8}
              xs={12}
            >
              <Relay(ProposalFusionList)
                proposal={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                    "allFollowers": Object {
                      "totalCount": 169,
                    },
                    "currentVotableStep": null,
                    "id": "1",
                    "news": Object {
                      "totalCount": 1,
                    },
                    "viewerCanSeeEvaluation": true,
                    "votableSteps": Array [],
                    "votes": Object {
                      "totalCount": 1,
                    },
                  }
                }
              />
              <Relay(ProposalPageLastNews)
                proposal={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                    "allFollowers": Object {
                      "totalCount": 169,
                    },
                    "currentVotableStep": null,
                    "id": "1",
                    "news": Object {
                      "totalCount": 1,
                    },
                    "viewerCanSeeEvaluation": true,
                    "votableSteps": Array [],
                    "votes": Object {
                      "totalCount": 1,
                    },
                  }
                }
              />
              <Relay(Connect(ProposalPageContent))
                categories={Array []}
                form={
                  Object {
                    "$refType": null,
                    "usingCategories": true,
                    "usingThemes": true,
                  }
                }
                proposal={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                    "allFollowers": Object {
                      "totalCount": 169,
                    },
                    "currentVotableStep": null,
                    "id": "1",
                    "news": Object {
                      "totalCount": 1,
                    },
                    "viewerCanSeeEvaluation": true,
                    "votableSteps": Array [],
                    "votes": Object {
                      "totalCount": 1,
                    },
                  }
                }
                step={null}
                viewer={null}
              />
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              sm={4}
              xs={12}
            >
              <Relay(ProposalPageMetadata)
                proposal={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                    "allFollowers": Object {
                      "totalCount": 169,
                    },
                    "currentVotableStep": null,
                    "id": "1",
                    "news": Object {
                      "totalCount": 1,
                    },
                    "viewerCanSeeEvaluation": true,
                    "votableSteps": Array [],
                    "votes": Object {
                      "totalCount": 1,
                    },
                  }
                }
                showCategories={true}
                showDistricts={true}
                showNullEstimation={false}
                showThemes={true}
              />
              <br />
              <Relay(ProposalPageAdvancement)
                proposal={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                    "allFollowers": Object {
                      "totalCount": 169,
                    },
                    "currentVotableStep": null,
                    "id": "1",
                    "news": Object {
                      "totalCount": 1,
                    },
                    "viewerCanSeeEvaluation": true,
                    "votableSteps": Array [],
                    "votes": Object {
                      "totalCount": 1,
                    },
                  }
                }
              />
            </Col>
          </Row>
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="votes"
        >
          <Uncontrolled(TabContainer)
            defaultActiveKey={0}
            id="tab-votesByStep"
          >
            <Row
              bsClass="row"
              className="clearfix"
              componentClass="div"
            >
              <Nav
                bsClass="nav"
                bsStyle="pills"
                justified={false}
                pullLeft={false}
                pullRight={false}
                stacked={false}
              />
              <TabContent
                animation={false}
                bsClass="tab"
                componentClass="div"
                mountOnEnter={false}
                unmountOnExit={false}
              />
            </Row>
          </Uncontrolled(TabContainer)>
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="blog"
        >
          <Relay(ProposalPageBlog)
            proposal={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
                "allFollowers": Object {
                  "totalCount": 169,
                },
                "currentVotableStep": null,
                "id": "1",
                "news": Object {
                  "totalCount": 1,
                },
                "viewerCanSeeEvaluation": true,
                "votableSteps": Array [],
                "votes": Object {
                  "totalCount": 1,
                },
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="evaluation"
        >
          <Relay(Connect(InjectIntl(ReduxForm)))
            proposal={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
                "allFollowers": Object {
                  "totalCount": 169,
                },
                "currentVotableStep": null,
                "id": "1",
                "news": Object {
                  "totalCount": 1,
                },
                "viewerCanSeeEvaluation": true,
                "votableSteps": Array [],
                "votes": Object {
                  "totalCount": 1,
                },
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="followers"
        >
          <Relay(ProposalPageFollowers)
            pageAdmin={false}
            proposal={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
                "allFollowers": Object {
                  "totalCount": 169,
                },
                "currentVotableStep": null,
                "id": "1",
                "news": Object {
                  "totalCount": 1,
                },
                "viewerCanSeeEvaluation": true,
                "votableSteps": Array [],
                "votes": Object {
                  "totalCount": 1,
                },
              }
            }
          />
        </TabPane>
      </TabContent>
    </div>
  </div>
</Uncontrolled(TabContainer)>
`;
