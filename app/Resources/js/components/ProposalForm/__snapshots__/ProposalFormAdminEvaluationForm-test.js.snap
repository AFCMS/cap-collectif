// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalFormAdminEvaluationForm /> render correctly 1`] = `
<div
  className="box box-primary container-fluid"
>
  <div
    className="box-header"
  >
    <h3
      className="box-title"
    >
      <FormattedMessage
        id="proposal_form.evaluation"
        values={Object {}}
      />
    </h3>
    <a
      className="pull-right link"
      href="admin.help.link.form.evaluation"
      rel="noopener noreferrer"
    >
      <i
        className="fa fa-info-circle"
      />
       Aide
    </a>
  </div>
  <div
    className="box-content"
  >
    <form
      onSubmit={[MockFunction]}
    >
      <ReactRelayQueryRenderer
        environment={
          RelayModernEnvironment {
            "__setNet": [Function],
            "_deferrableSelections": Array [],
            "_network": Object {
              "execute": [Function],
            },
            "_publishQueue": RelayPublishQueue {
              "_appliedOptimisticUpdates": Array [],
              "_backup": Object {},
              "_handlerProvider": [Function],
              "_pendingBackupRebase": false,
              "_pendingData": Array [],
              "_pendingOptimisticUpdates": Array [],
              "_pendingUpdaters": Array [],
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Array [],
                "_subscriptions": Array [],
                "_updatedRecordIDs": Object {},
              },
            },
            "_store": RelayMarkSweepStore {
              "_gcEnabled": true,
              "_hasScheduledGC": false,
              "_index": 0,
              "_recordSource": Object {},
              "_roots": Array [],
              "_subscriptions": Array [],
              "_updatedRecordIDs": Object {},
            },
            "configName": undefined,
            "unstable_internal": Object {
              "areEqualSelectors": [Function],
              "createFragmentSpecResolver": [Function],
              "createOperationSelector": [Function],
              "getDataIDsFromObject": [Function],
              "getFragment": [Function],
              "getRequest": [Function],
              "getSelector": [Function],
              "getSelectorList": [Function],
              "getSelectorsFromObject": [Function],
              "getVariablesFromObject": [Function],
            },
          }
        }
        query={[Function]}
        render={[Function]}
        variables={Object {}}
      />
      <ButtonToolbar
        bsClass="btn-toolbar"
        className="box-content__toolbar"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={true}
          id="evaluation-submit"
          type="submit"
        >
          <FormattedMessage
            id="global.save"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          disabled={true}
        >
          <FormattedMessage
            id="global.delete"
            values={Object {}}
          />
        </Button>
        <AlertForm
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </ButtonToolbar>
    </form>
  </div>
</div>
`;
