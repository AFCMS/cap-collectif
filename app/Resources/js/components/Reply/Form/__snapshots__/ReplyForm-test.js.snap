// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReplyForm /> should render correctly with equal required and facultative fields 1`] = `
<div
  id="create-reply-form"
>
<<<<<<< HEAD
<<<<<<< HEAD
  <InjectIntl(ReactBootstrapInput)
    disabled={false}
    errors={null}
    groupClassName=""
    help=""
    id="reply-10"
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
          }
        }
      />
    }
    placeholder="reply.your_response"
    type="text"
    valueLink={
      Object {
        "requestChange": [Function],
        "value": "",
      }
    }
  />
  <Radio
    disabled={false}
    field={
=======
  <FieldArray
    component={[Function]}
    disabled={true}
    intl={
>>>>>>> [ADD] good jest test & [RMV] flow error
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    name="responses"
    questions={
      Array [
        Object {
          "helpText": "",
          "id": 10,
          "question": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
          "required": true,
          "slug": "etes-vous-satisfait-que-la-ville-de-paris-soit-candidate-a-l-organisation-des-jo-de-2024",
          "type": "text",
        },
        Object {
          "choices": Array [
            Object {
              "id": 24,
              "label": "Maxime Arrouard",
            },
            Object {
              "id": 25,
              "label": "Spylou Super Sayen",
            },
            Object {
              "id": 26,
              "label": "Cyril Lage",
            },
            Object {
              "id": 27,
              "label": "Superman",
            },
          ],
          "helpText": "Un seul choix possible",
          "id": 12,
          "isOtherAllowed": true,
          "question": "Quel est ton athlète favori ?",
          "required": true,
          "slug": "quel-est-ton-athlete-favori",
          "type": "radio",
        },
        Object {
          "choices": Array [
            Object {
              "id": 28,
              "label": "Pas assez fort (Mon sonotone est en panne)",
            },
            Object {
              "id": 29,
              "label": "Assez fort (Mon sonotone est mal réglé)",
            },
            Object {
              "id": 30,
              "label": "Trop fort (Mon sonotone est tout neuf)",
            },
          ],
          "helpText": "Merci de répondre sincèrement",
          "id": 13,
          "question": "Nelson Monfort parle-t-il:",
          "required": false,
          "slug": "nelson-monfort-parle-t-il",
          "type": "select",
        },
        Object {
          "choices": Array [
            Object {
              "id": 28,
              "label": "Pas assez fort (Mon sonotone est en panne)",
            },
            Object {
              "id": 29,
              "label": "Assez fort (Mon sonotone est mal réglé)",
            },
            Object {
              "id": 30,
              "label": "Trop fort (Mon sonotone est tout neuf)",
            },
          ],
          "helpText": "Merci de répondre sincèrement",
          "id": 14,
          "question": "Nelson Monfort parle-t-il:",
          "required": false,
          "slug": "nelson-monfort-parle-t-il",
          "type": "ranking",
        },
      ]
    }
<<<<<<< HEAD
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
  />
  <InjectIntl(ReactBootstrapInput)
    defaultValue=""
    disabled={false}
    errors={null}
    groupClassName=""
    help="Merci de répondre sincèrement"
    id="reply-13"
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Nelson Monfort parle-t-il: <span class=\\"small excerpt\\">Facultatif</span>",
          }
        }
      />
    }
    type="select"
    valueLink={
      Object {
        "requestChange": [Function],
        "value": "",
      }
    }
  >
    <option
      disabled={true}
      value=""
    >
      <FormattedMessage
        id="global.select"
        values={Object {}}
      />
    </option>
    <option
      value="Pas assez fort (Mon sonotone est en panne)"
    >
      Pas assez fort (Mon sonotone est en panne)
    </option>
    <option
      value="Assez fort (Mon sonotone est mal réglé)"
    >
      Assez fort (Mon sonotone est mal réglé)
    </option>
    <option
      value="Trop fort (Mon sonotone est tout neuf)"
    >
      Trop fort (Mon sonotone est tout neuf)
    </option>
  </InjectIntl(ReactBootstrapInput)>
  <Ranking
    disabled={false}
    field={
      Object {
        "choices": Array [
          Object {
            "id": 28,
            "label": "Pas assez fort (Mon sonotone est en panne)",
          },
          Object {
            "id": 29,
            "label": "Assez fort (Mon sonotone est mal réglé)",
          },
          Object {
            "id": 30,
            "label": "Trop fort (Mon sonotone est tout neuf)",
          },
        ],
        "helpText": "Merci de répondre sincèrement",
        "id": 14,
        "question": "Nelson Monfort parle-t-il:",
        "required": false,
        "slug": "nelson-monfort-parle-t-il",
        "type": "ranking",
      }
    }
    getGroupStyle={[Function]}
    id="reply-14"
    isReduxForm={false}
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Nelson Monfort parle-t-il: <span class=\\"small excerpt\\">Facultatif</span>",
          }
        }
      />
    }
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
  />
=======
  />
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="primary"
    disabled={true}
    id="proposal_admin_content_save"
    type="submit"
=======
  <form
    id="reply-form"
    onSubmit={[MockFunction]}
>>>>>>> [ADD] children fragment for container's fragment & [CHG] jest test
  >
    <FieldArray
      change={[MockFunction]}
      component={[Function]}
      disabled={true}
      intl={
        Object {
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "locale": "fr-FR",
          "messages": Object {},
          "now": [Function],
        }
      }
      name="responses"
      questions={
        Array [
          Object {
            "helpText": "",
            "id": 10,
            "question": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
            "required": true,
            "slug": "etes-vous-satisfait-que-la-ville-de-paris-soit-candidate-a-l-organisation-des-jo-de-2024",
            "type": "text",
          },
          Object {
            "choices": Array [
              Object {
                "id": 24,
                "label": "Maxime Arrouard",
              },
              Object {
                "id": 25,
                "label": "Spylou Super Sayen",
              },
              Object {
                "id": 26,
                "label": "Cyril Lage",
              },
              Object {
                "id": 27,
                "label": "Superman",
              },
            ],
            "helpText": "Un seul choix possible",
            "id": 12,
            "isOtherAllowed": true,
            "question": "Quel est ton athlète favori ?",
            "required": true,
            "slug": "quel-est-ton-athlete-favori",
            "type": "radio",
          },
          Object {
            "choices": Array [
              Object {
                "id": 28,
                "label": "Pas assez fort (Mon sonotone est en panne)",
              },
              Object {
                "id": 29,
                "label": "Assez fort (Mon sonotone est mal réglé)",
              },
              Object {
                "id": 30,
                "label": "Trop fort (Mon sonotone est tout neuf)",
              },
            ],
            "helpText": "Merci de répondre sincèrement",
            "id": 13,
            "question": "Nelson Monfort parle-t-il:",
            "required": false,
            "slug": "nelson-monfort-parle-t-il",
            "type": "select",
          },
          Object {
            "choices": Array [
              Object {
                "id": 28,
                "label": "Pas assez fort (Mon sonotone est en panne)",
              },
              Object {
                "id": 29,
                "label": "Assez fort (Mon sonotone est mal réglé)",
              },
              Object {
                "id": 30,
                "label": "Trop fort (Mon sonotone est tout neuf)",
              },
            ],
            "helpText": "Merci de répondre sincèrement",
            "id": 14,
            "question": "Nelson Monfort parle-t-il:",
            "required": false,
            "slug": "nelson-monfort-parle-t-il",
            "type": "ranking",
          },
        ]
      }
    />
<<<<<<< HEAD
  </Button>
>>>>>>> [ADD] good jest test & [RMV] flow error
</form>
=======
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={true}
      id="proposal_admin_content_save"
      type="submit"
    >
      <FormattedMessage
        id="global.save"
        values={Object {}}
      />
    </Button>
  </form>
</div>
>>>>>>> [ADD] children fragment for container's fragment & [CHG] jest test
`;

exports[`<ReplyForm /> should render correctly with majority of required fields 1`] = `
<div
  id="create-reply-form"
>
<<<<<<< HEAD
<<<<<<< HEAD
  <InjectIntl(ReactBootstrapInput)
    disabled={false}
    errors={null}
    groupClassName=""
    help=""
    id="reply-10"
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
          }
        }
      />
    }
    placeholder="reply.your_response"
    type="text"
    valueLink={
=======
  <FieldArray
    component={[Function]}
    disabled={true}
    intl={
>>>>>>> [ADD] good jest test & [RMV] flow error
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
<<<<<<< HEAD
  />
  <Radio
    disabled={false}
    field={
      Object {
        "choices": Array [
          Object {
            "id": 24,
            "label": "Maxime Arrouard",
          },
          Object {
            "id": 25,
            "label": "Spylou Super Sayen",
          },
          Object {
            "id": 26,
            "label": "Cyril Lage",
          },
          Object {
            "id": 27,
            "label": "Superman",
          },
        ],
        "helpText": "Un seul choix possible",
        "id": 12,
        "isOtherAllowed": true,
        "question": "Quel est ton athlète favori ?",
        "required": true,
        "slug": "quel-est-ton-athlete-favori",
        "type": "radio",
      }
    }
    getGroupStyle={[Function]}
    id="reply-12"
    isReduxForm={false}
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Quel est ton athlète favori ?",
          }
        }
      />
    }
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
  />
  <Ranking
    disabled={false}
    field={
      Object {
        "choices": Array [
          Object {
            "id": 28,
            "label": "Pas assez fort (Mon sonotone est en panne)",
          },
          Object {
            "id": 29,
            "label": "Assez fort (Mon sonotone est mal réglé)",
          },
          Object {
            "id": 30,
            "label": "Trop fort (Mon sonotone est tout neuf)",
          },
        ],
        "helpText": "Merci de répondre sincèrement",
        "id": 14,
        "question": "Nelson Monfort parle-t-il:",
        "required": false,
        "slug": "nelson-monfort-parle-t-il",
        "type": "ranking",
      }
    }
    getGroupStyle={[Function]}
    id="reply-14"
    isReduxForm={false}
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Nelson Monfort parle-t-il: <span class=\\"small excerpt\\">Facultatif</span>",
          }
        }
      />
    }
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
=======
    name="responses"
    questions={
      Array [
        Object {
          "helpText": "",
          "id": 10,
          "question": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
          "required": true,
          "slug": "etes-vous-satisfait-que-la-ville-de-paris-soit-candidate-a-l-organisation-des-jo-de-2024",
          "type": "text",
        },
        Object {
          "choices": Array [
            Object {
              "id": 24,
              "label": "Maxime Arrouard",
            },
            Object {
              "id": 25,
              "label": "Spylou Super Sayen",
            },
            Object {
              "id": 26,
              "label": "Cyril Lage",
            },
            Object {
              "id": 27,
              "label": "Superman",
            },
          ],
          "helpText": "Un seul choix possible",
          "id": 12,
          "isOtherAllowed": true,
          "question": "Quel est ton athlète favori ?",
          "required": true,
          "slug": "quel-est-ton-athlete-favori",
          "type": "radio",
        },
        Object {
          "choices": Array [
            Object {
              "id": 28,
              "label": "Pas assez fort (Mon sonotone est en panne)",
            },
            Object {
              "id": 29,
              "label": "Assez fort (Mon sonotone est mal réglé)",
            },
            Object {
              "id": 30,
              "label": "Trop fort (Mon sonotone est tout neuf)",
            },
          ],
          "helpText": "Merci de répondre sincèrement",
          "id": 14,
          "question": "Nelson Monfort parle-t-il:",
          "required": false,
          "slug": "nelson-monfort-parle-t-il",
          "type": "ranking",
        },
      ]
    }
>>>>>>> [ADD] good jest test & [RMV] flow error
  />
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="primary"
    disabled={true}
    id="proposal_admin_content_save"
    type="submit"
=======
  <form
    id="reply-form"
    onSubmit={[MockFunction]}
>>>>>>> [ADD] children fragment for container's fragment & [CHG] jest test
  >
    <FieldArray
      change={[MockFunction]}
      component={[Function]}
      disabled={true}
      intl={
        Object {
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "locale": "fr-FR",
          "messages": Object {},
          "now": [Function],
        }
      }
      name="responses"
      questions={
        Array [
          Object {
            "helpText": "",
            "id": 10,
            "question": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
            "required": true,
            "slug": "etes-vous-satisfait-que-la-ville-de-paris-soit-candidate-a-l-organisation-des-jo-de-2024",
            "type": "text",
          },
          Object {
            "choices": Array [
              Object {
                "id": 24,
                "label": "Maxime Arrouard",
              },
              Object {
                "id": 25,
                "label": "Spylou Super Sayen",
              },
              Object {
                "id": 26,
                "label": "Cyril Lage",
              },
              Object {
                "id": 27,
                "label": "Superman",
              },
            ],
            "helpText": "Un seul choix possible",
            "id": 12,
            "isOtherAllowed": true,
            "question": "Quel est ton athlète favori ?",
            "required": true,
            "slug": "quel-est-ton-athlete-favori",
            "type": "radio",
          },
          Object {
            "choices": Array [
              Object {
                "id": 28,
                "label": "Pas assez fort (Mon sonotone est en panne)",
              },
              Object {
                "id": 29,
                "label": "Assez fort (Mon sonotone est mal réglé)",
              },
              Object {
                "id": 30,
                "label": "Trop fort (Mon sonotone est tout neuf)",
              },
            ],
            "helpText": "Merci de répondre sincèrement",
            "id": 14,
            "question": "Nelson Monfort parle-t-il:",
            "required": false,
            "slug": "nelson-monfort-parle-t-il",
            "type": "ranking",
          },
        ]
      }
    />
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={true}
      id="proposal_admin_content_save"
      type="submit"
    >
      <FormattedMessage
        id="global.save"
        values={Object {}}
      />
    </Button>
  </form>
</div>
`;

exports[`<ReplyForm /> should render correctly with minority of required fields 1`] = `
<div
  id="create-reply-form"
>
<<<<<<< HEAD
<<<<<<< HEAD
  <InjectIntl(ReactBootstrapInput)
    disabled={false}
    errors={null}
    groupClassName=""
    help=""
    id="reply-10"
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ? <span class=\\"small warning\\">Obligatoire</span>",
          }
        }
      />
    }
    placeholder="reply.your_response"
    type="text"
    valueLink={
      Object {
        "requestChange": [Function],
        "value": "",
      }
    }
  />
  <Checkbox
    disabled={false}
    field={
      Object {
        "choices": Array [
          Object {
            "id": 20,
            "label": "Athlétisme",
          },
          Object {
            "id": 21,
            "label": "Natation",
          },
          Object {
            "id": 22,
            "label": "Sports collectifs",
          },
          Object {
            "id": 23,
            "label": "Sports individuels",
          },
        ],
        "helpText": "Plusieurs choix sont possibles",
        "id": 11,
        "isOtherAllowed": true,
        "question": "Pour quel type d'épreuve êtes vous prêt à acheter des places",
        "required": false,
        "slug": "pour-quel-type-d-epreuve-etes-vous-pret-a-acheter-des-places",
        "type": "checkbox",
      }
    }
    getGroupStyle={[Function]}
    id="reply-11"
    isReduxForm={false}
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Pour quel type d'épreuve êtes vous prêt à acheter des places",
          }
        }
      />
    }
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
    value={Object {}}
    values={
      Object {
        "10": "",
        "11": Array [],
        "12": "",
        "13": "",
        "14": "",
      }
    }
  />
  <Radio
    disabled={false}
    field={
=======
  <FieldArray
    component={[Function]}
    disabled={true}
    intl={
>>>>>>> [ADD] good jest test & [RMV] flow error
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    name="responses"
    questions={
      Array [
        Object {
          "helpText": "",
          "id": 10,
          "question": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
          "required": true,
          "slug": "etes-vous-satisfait-que-la-ville-de-paris-soit-candidate-a-l-organisation-des-jo-de-2024",
          "type": "text",
        },
        Object {
          "choices": Array [
            Object {
              "id": 20,
              "label": "Athlétisme",
            },
            Object {
              "id": 21,
              "label": "Natation",
            },
            Object {
              "id": 22,
              "label": "Sports collectifs",
            },
            Object {
              "id": 23,
              "label": "Sports individuels",
            },
          ],
          "helpText": "Plusieurs choix sont possibles",
          "id": 11,
          "isOtherAllowed": true,
          "question": "Pour quel type d'épreuve êtes vous prêt à acheter des places",
          "required": false,
          "slug": "pour-quel-type-d-epreuve-etes-vous-pret-a-acheter-des-places",
          "type": "checkbox",
        },
        Object {
          "choices": Array [
            Object {
              "id": 24,
              "label": "Maxime Arrouard",
            },
            Object {
              "id": 25,
              "label": "Spylou Super Sayen",
            },
            Object {
              "id": 26,
              "label": "Cyril Lage",
            },
            Object {
              "id": 27,
              "label": "Superman",
            },
          ],
          "helpText": "Un seul choix possible",
          "id": 12,
          "isOtherAllowed": true,
          "question": "Quel est ton athlète favori ?",
          "required": true,
          "slug": "quel-est-ton-athlete-favori",
          "type": "radio",
        },
        Object {
          "choices": Array [
            Object {
              "id": 28,
              "label": "Pas assez fort (Mon sonotone est en panne)",
            },
            Object {
              "id": 29,
              "label": "Assez fort (Mon sonotone est mal réglé)",
            },
            Object {
              "id": 30,
              "label": "Trop fort (Mon sonotone est tout neuf)",
            },
          ],
          "helpText": "Merci de répondre sincèrement",
          "id": 13,
          "question": "Nelson Monfort parle-t-il:",
          "required": false,
          "slug": "nelson-monfort-parle-t-il",
          "type": "select",
        },
        Object {
          "choices": Array [
            Object {
              "id": 28,
              "label": "Pas assez fort (Mon sonotone est en panne)",
            },
            Object {
              "id": 29,
              "label": "Assez fort (Mon sonotone est mal réglé)",
            },
            Object {
              "id": 30,
              "label": "Trop fort (Mon sonotone est tout neuf)",
            },
          ],
          "helpText": "Merci de répondre sincèrement",
          "id": 14,
          "question": "Nelson Monfort parle-t-il:",
          "required": false,
          "slug": "nelson-monfort-parle-t-il",
          "type": "ranking",
        },
      ]
    }
<<<<<<< HEAD
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
  />
  <InjectIntl(ReactBootstrapInput)
    defaultValue=""
    disabled={false}
    errors={null}
    groupClassName=""
    help="Merci de répondre sincèrement"
    id="reply-13"
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Nelson Monfort parle-t-il:",
          }
        }
      />
    }
    type="select"
    valueLink={
      Object {
        "requestChange": [Function],
        "value": "",
      }
    }
  >
    <option
      disabled={true}
      value=""
    >
      <FormattedMessage
        id="global.select"
        values={Object {}}
      />
    </option>
    <option
      value="Pas assez fort (Mon sonotone est en panne)"
    >
      Pas assez fort (Mon sonotone est en panne)
    </option>
    <option
      value="Assez fort (Mon sonotone est mal réglé)"
    >
      Assez fort (Mon sonotone est mal réglé)
    </option>
    <option
      value="Trop fort (Mon sonotone est tout neuf)"
    >
      Trop fort (Mon sonotone est tout neuf)
    </option>
  </InjectIntl(ReactBootstrapInput)>
  <Ranking
    disabled={false}
    field={
      Object {
        "choices": Array [
          Object {
            "id": 28,
            "label": "Pas assez fort (Mon sonotone est en panne)",
          },
          Object {
            "id": 29,
            "label": "Assez fort (Mon sonotone est mal réglé)",
          },
          Object {
            "id": 30,
            "label": "Trop fort (Mon sonotone est tout neuf)",
          },
        ],
        "helpText": "Merci de répondre sincèrement",
        "id": 14,
        "question": "Nelson Monfort parle-t-il:",
        "required": false,
        "slug": "nelson-monfort-parle-t-il",
        "type": "ranking",
      }
    }
    getGroupStyle={[Function]}
    id="reply-14"
    isReduxForm={false}
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Nelson Monfort parle-t-il:",
          }
        }
      />
    }
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
  />
=======
  />
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="primary"
    disabled={true}
    id="proposal_admin_content_save"
    type="submit"
=======
  <form
    id="reply-form"
    onSubmit={[MockFunction]}
>>>>>>> [ADD] children fragment for container's fragment & [CHG] jest test
  >
    <FieldArray
      change={[MockFunction]}
      component={[Function]}
      disabled={true}
      intl={
        Object {
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "locale": "fr-FR",
          "messages": Object {},
          "now": [Function],
        }
      }
      name="responses"
      questions={
        Array [
          Object {
            "helpText": "",
            "id": 10,
            "question": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
            "required": true,
            "slug": "etes-vous-satisfait-que-la-ville-de-paris-soit-candidate-a-l-organisation-des-jo-de-2024",
            "type": "text",
          },
          Object {
            "choices": Array [
              Object {
                "id": 20,
                "label": "Athlétisme",
              },
              Object {
                "id": 21,
                "label": "Natation",
              },
              Object {
                "id": 22,
                "label": "Sports collectifs",
              },
              Object {
                "id": 23,
                "label": "Sports individuels",
              },
            ],
            "helpText": "Plusieurs choix sont possibles",
            "id": 11,
            "isOtherAllowed": true,
            "question": "Pour quel type d'épreuve êtes vous prêt à acheter des places",
            "required": false,
            "slug": "pour-quel-type-d-epreuve-etes-vous-pret-a-acheter-des-places",
            "type": "checkbox",
          },
          Object {
            "choices": Array [
              Object {
                "id": 24,
                "label": "Maxime Arrouard",
              },
              Object {
                "id": 25,
                "label": "Spylou Super Sayen",
              },
              Object {
                "id": 26,
                "label": "Cyril Lage",
              },
              Object {
                "id": 27,
                "label": "Superman",
              },
            ],
            "helpText": "Un seul choix possible",
            "id": 12,
            "isOtherAllowed": true,
            "question": "Quel est ton athlète favori ?",
            "required": true,
            "slug": "quel-est-ton-athlete-favori",
            "type": "radio",
          },
          Object {
            "choices": Array [
              Object {
                "id": 28,
                "label": "Pas assez fort (Mon sonotone est en panne)",
              },
              Object {
                "id": 29,
                "label": "Assez fort (Mon sonotone est mal réglé)",
              },
              Object {
                "id": 30,
                "label": "Trop fort (Mon sonotone est tout neuf)",
              },
            ],
            "helpText": "Merci de répondre sincèrement",
            "id": 13,
            "question": "Nelson Monfort parle-t-il:",
            "required": false,
            "slug": "nelson-monfort-parle-t-il",
            "type": "select",
          },
          Object {
            "choices": Array [
              Object {
                "id": 28,
                "label": "Pas assez fort (Mon sonotone est en panne)",
              },
              Object {
                "id": 29,
                "label": "Assez fort (Mon sonotone est mal réglé)",
              },
              Object {
                "id": 30,
                "label": "Trop fort (Mon sonotone est tout neuf)",
              },
            ],
            "helpText": "Merci de répondre sincèrement",
            "id": 14,
            "question": "Nelson Monfort parle-t-il:",
            "required": false,
            "slug": "nelson-monfort-parle-t-il",
            "type": "ranking",
          },
        ]
      }
    />
<<<<<<< HEAD
  </Button>
>>>>>>> [ADD] good jest test & [RMV] flow error
</form>
=======
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={true}
      id="proposal_admin_content_save"
      type="submit"
    >
      <FormattedMessage
        id="global.save"
        values={Object {}}
      />
    </Button>
  </form>
</div>
>>>>>>> [ADD] children fragment for container's fragment & [CHG] jest test
`;

exports[`<ReplyForm /> should render correctly with only facultatives fields 1`] = `
<div
  id="create-reply-form"
>
<<<<<<< HEAD
  <FieldArray
    component={[Function]}
    disabled={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
<<<<<<< HEAD
    getGroupStyle={[Function]}
    id="reply-11"
    isReduxForm={false}
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Pour quel type d'épreuve êtes vous prêt à acheter des places",
          }
        }
      />
    }
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
    value={Object {}}
    values={
      Object {
        "11": Array [],
        "13": "",
        "14": "",
      }
    }
  />
  <InjectIntl(ReactBootstrapInput)
    defaultValue=""
    disabled={false}
    errors={null}
    groupClassName=""
    help="Merci de répondre sincèrement"
    id="reply-13"
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Nelson Monfort parle-t-il:",
          }
        }
      />
    }
    type="select"
    valueLink={
      Object {
        "requestChange": [Function],
        "value": "",
      }
    }
  >
    <option
      disabled={true}
      value=""
    >
      <FormattedMessage
        id="global.select"
        values={Object {}}
      />
    </option>
    <option
      value="Pas assez fort (Mon sonotone est en panne)"
    >
      Pas assez fort (Mon sonotone est en panne)
    </option>
    <option
      value="Assez fort (Mon sonotone est mal réglé)"
    >
      Assez fort (Mon sonotone est mal réglé)
    </option>
    <option
      value="Trop fort (Mon sonotone est tout neuf)"
    >
      Trop fort (Mon sonotone est tout neuf)
    </option>
  </InjectIntl(ReactBootstrapInput)>
  <Ranking
    disabled={false}
    field={
      Object {
        "choices": Array [
          Object {
            "id": 28,
            "label": "Pas assez fort (Mon sonotone est en panne)",
          },
          Object {
            "id": 29,
            "label": "Assez fort (Mon sonotone est mal réglé)",
          },
          Object {
            "id": 30,
            "label": "Trop fort (Mon sonotone est tout neuf)",
          },
        ],
        "helpText": "Merci de répondre sincèrement",
        "id": 14,
        "question": "Nelson Monfort parle-t-il:",
        "required": false,
        "slug": "nelson-monfort-parle-t-il",
        "type": "ranking",
      }
    }
    getGroupStyle={[Function]}
    id="reply-14"
    isReduxForm={false}
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Nelson Monfort parle-t-il:",
          }
        }
      />
    }
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
  />
=======
    name="responses"
    questions={
      Array [
        Object {
          "choices": Array [
            Object {
              "id": 20,
              "label": "Athlétisme",
            },
            Object {
              "id": 21,
              "label": "Natation",
            },
            Object {
              "id": 22,
              "label": "Sports collectifs",
            },
            Object {
              "id": 23,
              "label": "Sports individuels",
            },
          ],
          "helpText": "Plusieurs choix sont possibles",
          "id": 11,
          "isOtherAllowed": true,
          "question": "Pour quel type d'épreuve êtes vous prêt à acheter des places",
          "required": false,
          "slug": "pour-quel-type-d-epreuve-etes-vous-pret-a-acheter-des-places",
          "type": "checkbox",
        },
        Object {
          "choices": Array [
            Object {
              "id": 28,
              "label": "Pas assez fort (Mon sonotone est en panne)",
            },
            Object {
              "id": 29,
              "label": "Assez fort (Mon sonotone est mal réglé)",
            },
            Object {
              "id": 30,
              "label": "Trop fort (Mon sonotone est tout neuf)",
            },
          ],
          "helpText": "Merci de répondre sincèrement",
          "id": 13,
          "question": "Nelson Monfort parle-t-il:",
          "required": false,
          "slug": "nelson-monfort-parle-t-il",
          "type": "select",
        },
        Object {
          "choices": Array [
            Object {
              "id": 28,
              "label": "Pas assez fort (Mon sonotone est en panne)",
            },
            Object {
              "id": 29,
              "label": "Assez fort (Mon sonotone est mal réglé)",
            },
            Object {
              "id": 30,
              "label": "Trop fort (Mon sonotone est tout neuf)",
            },
          ],
          "helpText": "Merci de répondre sincèrement",
          "id": 14,
          "question": "Nelson Monfort parle-t-il:",
          "required": false,
          "slug": "nelson-monfort-parle-t-il",
          "type": "ranking",
        },
      ]
    }
  />
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="primary"
    disabled={true}
    id="proposal_admin_content_save"
    type="submit"
=======
  <form
    id="reply-form"
    onSubmit={[MockFunction]}
>>>>>>> [ADD] children fragment for container's fragment & [CHG] jest test
  >
    <FieldArray
      change={[MockFunction]}
      component={[Function]}
      disabled={true}
      intl={
        Object {
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "locale": "fr-FR",
          "messages": Object {},
          "now": [Function],
        }
      }
      name="responses"
      questions={
        Array [
          Object {
            "choices": Array [
              Object {
                "id": 20,
                "label": "Athlétisme",
              },
              Object {
                "id": 21,
                "label": "Natation",
              },
              Object {
                "id": 22,
                "label": "Sports collectifs",
              },
              Object {
                "id": 23,
                "label": "Sports individuels",
              },
            ],
            "helpText": "Plusieurs choix sont possibles",
            "id": 11,
            "isOtherAllowed": true,
            "question": "Pour quel type d'épreuve êtes vous prêt à acheter des places",
            "required": false,
            "slug": "pour-quel-type-d-epreuve-etes-vous-pret-a-acheter-des-places",
            "type": "checkbox",
          },
          Object {
            "choices": Array [
              Object {
                "id": 28,
                "label": "Pas assez fort (Mon sonotone est en panne)",
              },
              Object {
                "id": 29,
                "label": "Assez fort (Mon sonotone est mal réglé)",
              },
              Object {
                "id": 30,
                "label": "Trop fort (Mon sonotone est tout neuf)",
              },
            ],
            "helpText": "Merci de répondre sincèrement",
            "id": 13,
            "question": "Nelson Monfort parle-t-il:",
            "required": false,
            "slug": "nelson-monfort-parle-t-il",
            "type": "select",
          },
          Object {
            "choices": Array [
              Object {
                "id": 28,
                "label": "Pas assez fort (Mon sonotone est en panne)",
              },
              Object {
                "id": 29,
                "label": "Assez fort (Mon sonotone est mal réglé)",
              },
              Object {
                "id": 30,
                "label": "Trop fort (Mon sonotone est tout neuf)",
              },
            ],
            "helpText": "Merci de répondre sincèrement",
            "id": 14,
            "question": "Nelson Monfort parle-t-il:",
            "required": false,
            "slug": "nelson-monfort-parle-t-il",
            "type": "ranking",
          },
        ]
      }
    />
<<<<<<< HEAD
  </Button>
>>>>>>> [ADD] good jest test & [RMV] flow error
</form>
=======
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={true}
      id="proposal_admin_content_save"
      type="submit"
    >
      <FormattedMessage
        id="global.save"
        values={Object {}}
      />
    </Button>
  </form>
</div>
>>>>>>> [ADD] children fragment for container's fragment & [CHG] jest test
`;

exports[`<ReplyForm /> should render correctly with only required fields 1`] = `
<div
  id="create-reply-form"
>
<<<<<<< HEAD
<<<<<<< HEAD
  <Alert
    bsClass="alert"
    bsStyle="warning"
    closeLabel="Close alert"
  >
    Tous les champs sont obligatoires
  </Alert>
  <InjectIntl(ReactBootstrapInput)
    disabled={false}
    errors={null}
    groupClassName=""
    help=""
    id="reply-10"
    label={
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
          }
        }
      />
    }
    placeholder="reply.your_response"
    type="text"
    valueLink={
      Object {
        "requestChange": [Function],
        "value": "",
      }
    }
  />
  <Radio
    disabled={false}
    field={
=======
  <FieldArray
    component={[Function]}
    disabled={true}
    intl={
>>>>>>> [ADD] good jest test & [RMV] flow error
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    name="responses"
    questions={
      Array [
        Object {
          "helpText": "",
          "id": 10,
          "question": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
          "required": true,
          "slug": "etes-vous-satisfait-que-la-ville-de-paris-soit-candidate-a-l-organisation-des-jo-de-2024",
          "type": "text",
        },
        Object {
          "choices": Array [
            Object {
              "id": 24,
              "label": "Maxime Arrouard",
            },
            Object {
              "id": 25,
              "label": "Spylou Super Sayen",
            },
            Object {
              "id": 26,
              "label": "Cyril Lage",
            },
            Object {
              "id": 27,
              "label": "Superman",
            },
          ],
          "helpText": "Un seul choix possible",
          "id": 12,
          "isOtherAllowed": true,
          "question": "Quel est ton athlète favori ?",
          "required": true,
          "slug": "quel-est-ton-athlete-favori",
          "type": "radio",
        },
      ]
    }
<<<<<<< HEAD
    labelClassName="h5"
    onChange={[Function]}
    renderFormErrors={[Function]}
=======
>>>>>>> [ADD] good jest test & [RMV] flow error
  />
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="primary"
    disabled={true}
    id="proposal_admin_content_save"
    type="submit"
=======
  <form
    id="reply-form"
    onSubmit={[MockFunction]}
>>>>>>> [ADD] children fragment for container's fragment & [CHG] jest test
  >
    <FieldArray
      change={[MockFunction]}
      component={[Function]}
      disabled={true}
      intl={
        Object {
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "locale": "fr-FR",
          "messages": Object {},
          "now": [Function],
        }
      }
      name="responses"
      questions={
        Array [
          Object {
            "helpText": "",
            "id": 10,
            "question": "Êtes-vous satisfait que la ville de Paris soit candidate à l'organisation des JO de 2024 ?",
            "required": true,
            "slug": "etes-vous-satisfait-que-la-ville-de-paris-soit-candidate-a-l-organisation-des-jo-de-2024",
            "type": "text",
          },
          Object {
            "choices": Array [
              Object {
                "id": 24,
                "label": "Maxime Arrouard",
              },
              Object {
                "id": 25,
                "label": "Spylou Super Sayen",
              },
              Object {
                "id": 26,
                "label": "Cyril Lage",
              },
              Object {
                "id": 27,
                "label": "Superman",
              },
            ],
            "helpText": "Un seul choix possible",
            "id": 12,
            "isOtherAllowed": true,
            "question": "Quel est ton athlète favori ?",
            "required": true,
            "slug": "quel-est-ton-athlete-favori",
            "type": "radio",
          },
        ]
      }
    />
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={true}
      id="proposal_admin_content_save"
      type="submit"
    >
      <FormattedMessage
        id="global.save"
        values={Object {}}
      />
    </Button>
  </form>
</div>
`;
