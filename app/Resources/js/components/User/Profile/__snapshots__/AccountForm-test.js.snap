// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AccountForm /> should render a form 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
>
  <Field
    component={[Function]}
    id="account__email"
    label={
      <FormattedMessage
        id="proposal.vote.form.email"
        values={Object {}}
      />
    }
    labelClassName="col-sm-4"
    name="email"
    type="email"
    wrapperClassName="col-sm-6"
  />
  <p
    className="small excerpt col-sm-6 col-sm-offset-4"
  >
    <FormattedMessage
      id="account.your_email_is_not_public"
      values={Object {}}
    />
  </p>
</form>
`;

exports[`<AccountForm /> should render a form with an alert if submitted password is wrong 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
>
  <Alert
    bsClass="alert"
    bsStyle="danger"
    closeLabel="Close alert"
  >
    <p>
      <FormattedHTMLMessage
        id="user.confirm.wrong_password"
        values={Object {}}
      />
    </p>
  </Alert>
  <Field
    component={[Function]}
    id="account__email"
    label={
      <FormattedMessage
        id="proposal.vote.form.email"
        values={Object {}}
      />
    }
    labelClassName="col-sm-4"
    name="email"
    type="email"
    wrapperClassName="col-sm-6"
  />
  <p
    className="small excerpt col-sm-6 col-sm-offset-4"
  >
    <FormattedMessage
      id="account.your_email_is_not_public"
      values={Object {}}
    />
  </p>
</form>
`;

exports[`<AccountForm /> should render a form with an info if a confirmation email has been resent 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
>
  <Alert
    bsClass="alert"
    bsStyle="warning"
    closeLabel="Close alert"
  >
    <FormattedMessage
      id="account.email_confirmation_sent"
      values={Object {}}
    />
  </Alert>
  <Field
    component={[Function]}
    id="account__email"
    label={
      <FormattedMessage
        id="proposal.vote.form.email"
        values={Object {}}
      />
    }
    labelClassName="col-sm-4"
    name="email"
    type="email"
    wrapperClassName="col-sm-6"
  />
  <p
    className="small excerpt col-sm-6 col-sm-offset-4"
  >
    <FormattedMessage
      id="account.your_email_is_not_public"
      values={Object {}}
    />
  </p>
  <div
    className="col-sm-6 col-sm-offset-4"
  >
    <p
      className="small excerpt"
    >
      <FormattedHTMLMessage
        id="user.confirm.profile_help"
        values={
          Object {
            "email": "new-email@test.com",
          }
        }
      />
    </p>
    <p
      className="small excerpt"
    >
      <a
        href="#resend"
        onClick={[Function]}
      >
        <FormattedMessage
          id="user.confirm.resend"
          values={Object {}}
        />
      </a>
       · 
      <a
        href="#cancel"
        onClick={[Function]}
      >
        <FormattedMessage
          id="user.confirm.cancel"
          values={Object {}}
        />
      </a>
    </p>
  </div>
</form>
`;

exports[`<AccountForm /> should render a form with information about new email 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
>
  <Field
    component={[Function]}
    id="account__email"
    label={
      <FormattedMessage
        id="proposal.vote.form.email"
        values={Object {}}
      />
    }
    labelClassName="col-sm-4"
    name="email"
    type="email"
    wrapperClassName="col-sm-6"
  />
  <p
    className="small excerpt col-sm-6 col-sm-offset-4"
  >
    <FormattedMessage
      id="account.your_email_is_not_public"
      values={Object {}}
    />
  </p>
  <div
    className="col-sm-6 col-sm-offset-4"
  >
    <p
      className="small excerpt"
    >
      <FormattedHTMLMessage
        id="user.confirm.profile_help"
        values={
          Object {
            "email": "new-email@test.com",
          }
        }
      />
    </p>
    <p
      className="small excerpt"
    >
      <a
        href="#resend"
        onClick={[Function]}
      >
        <FormattedMessage
          id="user.confirm.resend"
          values={Object {}}
        />
      </a>
       · 
      <a
        href="#cancel"
        onClick={[Function]}
      >
        <FormattedMessage
          id="user.confirm.cancel"
          values={Object {}}
        />
      </a>
    </p>
  </div>
</form>
`;
