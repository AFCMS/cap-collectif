// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RegistrationForm /> renders a form with dynamic fields 1`] = `
<form
  id="registration-form"
  onSubmit={[MockFunction]}
>
  <Field
    ariaRequired={true}
    autoComplete="username"
    component={[Function]}
    id="username"
    label={
      <FormattedMessage
        id="registration.username"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="username"
    type="text"
  />
  <Field
    ariaRequired={true}
    autoComplete="email"
    component={[Function]}
    id="email"
    label={
      <FormattedMessage
        id="global.email"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="email"
    popover={
      Object {
        "id": "registration-email-tooltip",
        "message": <FormattedMessage
          id="registration.tooltip.email"
          values={Object {}}
        />,
      }
    }
    type="email"
  />
  <Field
    ariaRequired={true}
    autoComplete="new-password"
    component={[Function]}
    id="password"
    label={
      <FormattedMessage
        id="registration.password"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="plainPassword"
    popover={
      Object {
        "id": "registration-password-tooltip",
        "message": <FormattedMessage
          id="registration.tooltip.password"
          values={Object {}}
        />,
      }
    }
    type="password"
  />
  <ReactRelayQueryRenderer
    environment={
      RelayModernEnvironment {
        "__setNet": [Function],
        "_deferrableSelections": Array [],
        "_network": Object {
          "execute": [Function],
          "executeWithEvents": [Function],
        },
        "_publishQueue": RelayPublishQueue {
          "_appliedOptimisticUpdates": Array [],
          "_backup": Object {},
          "_handlerProvider": [Function],
          "_pendingBackupRebase": false,
          "_pendingData": Array [],
          "_pendingOptimisticUpdates": Array [],
          "_pendingUpdaters": Array [],
          "_store": RelayMarkSweepStore {
            "_gcEnabled": true,
            "_hasScheduledGC": false,
            "_index": 0,
            "_recordSource": Object {},
            "_roots": Array [],
            "_subscriptions": Array [],
            "_updatedRecordIDs": Object {},
          },
        },
        "_store": RelayMarkSweepStore {
          "_gcEnabled": true,
          "_hasScheduledGC": false,
          "_index": 0,
          "_recordSource": Object {},
          "_roots": Array [],
          "_subscriptions": Array [],
          "_updatedRecordIDs": Object {},
        },
        "configName": undefined,
        "unstable_internal": Object {
          "areEqualSelectors": [Function],
          "createFragmentSpecResolver": [Function],
          "createOperationSelector": [Function],
          "getDataIDsFromObject": [Function],
          "getFragment": [Function],
          "getRequest": [Function],
          "getSelector": [Function],
          "getSelectorList": [Function],
          "getSelectorsFromObject": [Function],
          "getVariablesFromObject": [Function],
        },
      }
    }
    query={[Function]}
    render={[Function]}
    variables={Object {}}
  />
  <Field
    ariaRequired={true}
    component={[Function]}
    id="charte"
    labelClassName="font-weight-normal"
    name="charte"
    type="checkbox"
  >
    <span>
      <FormattedMessage
        id="registration.charte"
        values={
          Object {
            "link": <a
              className="external-link"
              href="/charte"
            >
              la charte
            </a>,
          }
        }
      />
       
      <FormattedHTMLMessage
        id="and-the-privacy-policy"
        values={
          Object {
            "url": "http://localhost/pages/politique-de-confidentialite",
          }
        }
      />
    </span>
  </Field>
  <Field
    component={[Function]}
    id="consent-internal-communication"
    labelClassName="font-weight-normal"
    name="consentInternalCommunication"
    type="checkbox"
  >
    <FormattedMessage
      id="receive-news-and-results-of-the-consultations"
      values={
        Object {
          "from": "de Cap Collectif",
        }
      }
    />
  </Field>
  <Field
    component={[Function]}
    id="consent-external-communication"
    labelClassName="font-weight-normal"
    name="consentExternalCommunication"
    type="checkbox"
  >
    <FormattedMessage
      id="registration.consent_external_communication"
      values={
        Object {
          "organization_name": "Cap Collectif",
        }
      }
    />
  </Field>
  <Field
    component={[Function]}
    id="captcha"
    name="captcha"
    type="captcha"
  />
</form>
`;

exports[`<RegistrationForm /> renders a form with inputs and a captcha 1`] = `
<form
  id="registration-form"
  onSubmit={[MockFunction]}
>
  <Field
    ariaRequired={true}
    autoComplete="username"
    component={[Function]}
    id="username"
    label={
      <FormattedMessage
        id="registration.username"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="username"
    type="text"
  />
  <Field
    ariaRequired={true}
    autoComplete="email"
    component={[Function]}
    id="email"
    label={
      <FormattedMessage
        id="global.email"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="email"
    popover={
      Object {
        "id": "registration-email-tooltip",
        "message": <FormattedMessage
          id="registration.tooltip.email"
          values={Object {}}
        />,
      }
    }
    type="email"
  />
  <Field
    ariaRequired={true}
    autoComplete="new-password"
    component={[Function]}
    id="password"
    label={
      <FormattedMessage
        id="registration.password"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="plainPassword"
    popover={
      Object {
        "id": "registration-password-tooltip",
        "message": <FormattedMessage
          id="registration.tooltip.password"
          values={Object {}}
        />,
      }
    }
    type="password"
  />
  <Field
    ariaRequired={true}
    component={[Function]}
    id="charte"
    labelClassName="font-weight-normal"
    name="charte"
    type="checkbox"
  >
    <span>
      <FormattedMessage
        id="registration.charte"
        values={
          Object {
            "link": <a
              className="external-link"
              href="/charte"
            >
              la charte
            </a>,
          }
        }
      />
       
      <FormattedHTMLMessage
        id="and-the-privacy-policy"
        values={
          Object {
            "url": "http://localhost/pages/politique-de-confidentialite",
          }
        }
      />
    </span>
  </Field>
  <Field
    component={[Function]}
    id="consent-internal-communication"
    labelClassName="font-weight-normal"
    name="consentInternalCommunication"
    type="checkbox"
  >
    <FormattedMessage
      id="receive-news-and-results-of-the-consultations"
      values={
        Object {
          "from": "de Cap Collectif",
        }
      }
    />
  </Field>
  <Field
    component={[Function]}
    id="consent-external-communication"
    labelClassName="font-weight-normal"
    name="consentExternalCommunication"
    type="checkbox"
  >
    <FormattedMessage
      id="registration.consent_external_communication"
      values={
        Object {
          "organization_name": "Cap Collectif",
        }
      }
    />
  </Field>
  <Field
    component={[Function]}
    id="captcha"
    name="captcha"
    type="captcha"
  />
</form>
`;

exports[`<RegistrationForm /> renders a form with user_type select if enabled 1`] = `
<form
  id="registration-form"
  onSubmit={[MockFunction]}
>
  <Field
    ariaRequired={true}
    autoComplete="username"
    component={[Function]}
    id="username"
    label={
      <FormattedMessage
        id="registration.username"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="username"
    type="text"
  />
  <Field
    ariaRequired={true}
    autoComplete="email"
    component={[Function]}
    id="email"
    label={
      <FormattedMessage
        id="global.email"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="email"
    popover={
      Object {
        "id": "registration-email-tooltip",
        "message": <FormattedMessage
          id="registration.tooltip.email"
          values={Object {}}
        />,
      }
    }
    type="email"
  />
  <Field
    ariaRequired={true}
    autoComplete="new-password"
    component={[Function]}
    id="password"
    label={
      <FormattedMessage
        id="registration.password"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="plainPassword"
    popover={
      Object {
        "id": "registration-password-tooltip",
        "message": <FormattedMessage
          id="registration.tooltip.password"
          values={Object {}}
        />,
      }
    }
    type="password"
  />
  <Field
    component={[Function]}
    id="user_type"
    label={
      <span>
        <FormattedMessage
          id="registration.type"
          values={Object {}}
        />
         
        <span
          className="excerpt"
        >
          <FormattedMessage
            id="global.form.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    labelClassName="font-weight-normal"
    name="userType"
    type="select"
  >
    <FormattedMessage
      id="registration.select.type"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="1"
      value={1}
    >
      type_1
    </option>
  </Field>
  <Field
    ariaRequired={true}
    component={[Function]}
    id="charte"
    labelClassName="font-weight-normal"
    name="charte"
    type="checkbox"
  >
    <span>
      <FormattedMessage
        id="registration.charte"
        values={
          Object {
            "link": <a
              className="external-link"
              href="/charte"
            >
              la charte
            </a>,
          }
        }
      />
       
      <FormattedHTMLMessage
        id="and-the-privacy-policy"
        values={
          Object {
            "url": "http://localhost/pages/politique-de-confidentialite",
          }
        }
      />
    </span>
  </Field>
  <Field
    component={[Function]}
    id="consent-internal-communication"
    labelClassName="font-weight-normal"
    name="consentInternalCommunication"
    type="checkbox"
  >
    <FormattedMessage
      id="receive-news-and-results-of-the-consultations"
      values={
        Object {
          "from": "de Cap Collectif",
        }
      }
    />
  </Field>
  <Field
    component={[Function]}
    id="consent-external-communication"
    labelClassName="font-weight-normal"
    name="consentExternalCommunication"
    type="checkbox"
  >
    <FormattedMessage
      id="registration.consent_external_communication"
      values={
        Object {
          "organization_name": "Cap Collectif",
        }
      }
    />
  </Field>
  <Field
    component={[Function]}
    id="captcha"
    name="captcha"
    type="captcha"
  />
</form>
`;

exports[`<RegistrationForm /> renders a form with zipcode if enabled 1`] = `
<form
  id="registration-form"
  onSubmit={[MockFunction]}
>
  <Field
    ariaRequired={true}
    autoComplete="username"
    component={[Function]}
    id="username"
    label={
      <FormattedMessage
        id="registration.username"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="username"
    type="text"
  />
  <Field
    ariaRequired={true}
    autoComplete="email"
    component={[Function]}
    id="email"
    label={
      <FormattedMessage
        id="global.email"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="email"
    popover={
      Object {
        "id": "registration-email-tooltip",
        "message": <FormattedMessage
          id="registration.tooltip.email"
          values={Object {}}
        />,
      }
    }
    type="email"
  />
  <Field
    ariaRequired={true}
    autoComplete="new-password"
    component={[Function]}
    id="password"
    label={
      <FormattedMessage
        id="registration.password"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="plainPassword"
    popover={
      Object {
        "id": "registration-password-tooltip",
        "message": <FormattedMessage
          id="registration.tooltip.password"
          values={Object {}}
        />,
      }
    }
    type="password"
  />
  <Field
    autoComplete="postal-code"
    component={[Function]}
    id="zipcode"
    label={
      <span>
        <FormattedMessage
          id="registration.zipcode"
          values={Object {}}
        />
         
        <span
          className="excerpt"
        >
          <FormattedMessage
            id="global.form.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    labelClassName="font-weight-normal"
    name="zipcode"
    type="text"
  />
  <Field
    ariaRequired={true}
    component={[Function]}
    id="charte"
    labelClassName="font-weight-normal"
    name="charte"
    type="checkbox"
  >
    <span>
      <FormattedMessage
        id="registration.charte"
        values={
          Object {
            "link": <a
              className="external-link"
              href="/charte"
            >
              la charte
            </a>,
          }
        }
      />
       
      <FormattedHTMLMessage
        id="and-the-privacy-policy"
        values={
          Object {
            "url": "http://localhost/pages/politique-de-confidentialite",
          }
        }
      />
    </span>
  </Field>
  <Field
    component={[Function]}
    id="consent-internal-communication"
    labelClassName="font-weight-normal"
    name="consentInternalCommunication"
    type="checkbox"
  >
    <FormattedMessage
      id="receive-news-and-results-of-the-consultations"
      values={
        Object {
          "from": "de Cap Collectif",
        }
      }
    />
  </Field>
  <Field
    component={[Function]}
    id="consent-external-communication"
    labelClassName="font-weight-normal"
    name="consentExternalCommunication"
    type="checkbox"
  >
    <FormattedMessage
      id="registration.consent_external_communication"
      values={
        Object {
          "organization_name": "Cap Collectif",
        }
      }
    />
  </Field>
  <Field
    component={[Function]}
    id="captcha"
    name="captcha"
    type="captcha"
  />
</form>
`;
