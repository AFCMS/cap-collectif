imports:
  - { resource: ../../config/packages/security.yaml }
  - { resource: ../../config/packages/sonata_admin.yaml }
  - { resource: ../../config/packages/sonata.yaml }
  - { resource: ../../config/packages/liip_imagine.yaml }
  - { resource: ../../config/packages/swarrot.yaml }
  - { resource: ../../config/packages/jolitypo.yaml }
  - { resource: ../../config/packages/cors.yaml }
  - { resource: ../../config/packages/cache.yaml }
  - { resource: ../../config/packages/newrelic.yaml }
  - { resource: ../../config/packages/redis.yaml }
  - { resource: ../../config/packages/twig.yaml }
  - { resource: ../../config/packages/jms.yaml }
  - { resource: ../../config/packages/doctrine.yaml }
  - { resource: ../../config/packages/translation.yaml }
  - { resource: ../../config/packages/swiftmailer.yaml }
  - { resource: ../../config/packages/doctrine_extensions.yaml }
  - { resource: ../../config/packages/doctrine_migrations.yaml }
  - { resource: ../../config/packages/hautelook_alice.yaml }
  - { resource: ../../config/packages/fos_user.yaml }
  - { resource: ../../config/packages/http_plug.yaml }
  - { resource: ../../config/packages/hwi_oauth.yaml }
  - { resource: ../../config/packages/fos_rest.yaml }
  - { resource: ../../config/packages/toggle.yaml }
  - { resource: ../../config/packages/ivory_ck_editor.yaml }
  - { resource: ../../config/packages/graphql.yaml }
  - { resource: ../../config/packages/html_purifier.yaml }
  - { resource: ../../config/packages/limenius_react.yaml }
  - { resource: ../../config/packages/saml.yaml }

parameters:
  database_driver: '%env(SYMFONY_DATABASE_DRIVER)%'
  database_host: '%env(SYMFONY_DATABASE_HOST)%'
  database_port: '%env(SYMFONY_DATABASE_PORT)%'
  database_name: '%env(SYMFONY_DATABASE_NAME)%'
  database_user: '%env(SYMFONY_DATABASE_USER)%'
  database_password: '%env(SYMFONY_DATABASE_PASSWORD)%'
  rabbitmq_host: '%env(SYMFONY_RABBITMQ_HOST)%'
  rabbitmq_login: '%env(SYMFONY_RABBITMQ_LOGIN)%'
  rabbitmq_password: '%env(SYMFONY_RABBITMQ_PASSWORD)%'
  saml_sp: '%env(SYMFONY_SAML_SP)%'
  elasticsearch_host: '%env(SYMFONY_ELASTICSEARCH_HOST)%'
  redis_host: '%env(SYMFONY_REDIS_HOST)%'
  app_version: '%env(SYMFONY_APP_VERSION)%'
  locale: '%env(SYMFONY_LOCALE)%'
  secret: '%env(SYMFONY_SECRET)%'
  use_assetic_controller: '%env(SYMFONY_USE_ASSETIC_CONTROLLER)%'
  facebook_app_id: '%env(SYMFONY_FACEBOOK_APP_ID)%'
  facebook_app_secret: '%env(SYMFONY_FACEBOOK_APP_SECRET)%'
  google_app_id: '%env(SYMFONY_GOOGLE_APP_ID)%'
  google_app_secret: '%env(SYMFONY_GOOGLE_APP_SECRET)%'
  real_favicon_secret: '%env(SYMFONY_REAL_FAVICON_SECRET)%'
  language_analyzer: '%env(SYMFONY_LANGUAGE_ANALYZER)%'
  remember_secret: '%env(SYMFONY_REMEMBER_SECRET)%'
  router.request_context.host: '%env(SYMFONY_ROUTER__REQUEST_CONTEXT__HOST)%'
  router.request_context.scheme: '%env(SYMFONY_ROUTER__REQUEST_CONTEXT__SCHEME)%'
  assets_version: '%env(SYMFONY_ASSETS_VERSION)%'
  assets_host: '%env(SYMFONY_ASSETS_HOST)%'
  recaptcha_private_key: '%env(SYMFONY_RECAPTCHA_PRIVATE_KEY)%'
  twilio_sid: '%env(SYMFONY_TWILIO_SID)%'
  twilio_token: '%env(SYMFONY_TWILIO_TOKEN)%'
  twilio_number: '%env(SYMFONY_TWILIO_NUMBER)%'
  disable_mail_delivery: '%env(SYMFONY_DISABLE_MAIL_DELIVERY)%'
  sentry_dsn: '%env(SYMFONY_SENTRY_DSN)%'
  google_maps_key: ***REMOVED***
  mapbox_secret_key: '%env(SYMFONY_MAPBOX_SECRET_KEY)%'
  locales: ['en-GB', 'fr-FR', 'es-ES', 'de-DE', 'nl-NL']
  google_maps_key_server: '***REMOVED***'
  jms_serializer.serialized_name_annotation_strategy.class: Capco\AppBundle\Utils\IdenticalUnlessSpecifiedPropertyNamingStrategy
  mandrill_api_key: '%env(SYMFONY_MANDRILL_API_KEY)%'
  instance_name: '%env(SYMFONY_INSTANCE_NAME)%'
  #
  # This will ensure we get the same data between two fixtures loadings.
  #
  # See https://github.com/nelmio/alice/blob/master/doc/customizing-data-generation.md
  nelmio_alice.seed: 1

framework:
  secret: '%secret%'
  serializer:
    enabled: true
  cache:
    app: cache.adapter.redis
    default_redis_provider: "redis://%redis_host%"
  router:
    resource: '%kernel.project_dir%/app/config/routing.yml'
    strict_requirements: null
  form: null
  csrf_protection: null
  validation:
    enabled: true
    enable_annotations: true
  templating:
    engines:
      - twig
  assets:
    version: '%assets_version%'
  default_locale: '%locale%'
  trusted_hosts: null
  session:
    handler_id: snc_redis.session.handler
    cookie_httponly: true
    cookie_secure: true
  fragments: null
  http_method_override: true
  translator:
    paths:
      - '%kernel.project_dir%/translations'
    fallback: fr-FR

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
    bind:
      Psr\Log\LoggerInterface: '@monolog.logger.request'

  Http\Client\Common\HttpMethodsClient: '@httplug.client.default.http_methods'
  twig.extension.text:
    class: Twig_Extensions_Extension_Text
    tags:
      - { name: twig.extension }

  twig.extension.intl: '@Twig_Extensions_Extension_Intl'

  Twig_Extensions_Extension_Intl:
    class: Twig_Extensions_Extension_Intl
    tags:
      - { name: twig.extension }

  authentication_failure_handler: '@Capco\AppBundle\EventListener\AuthenticationHandler'

  Capco\AppBundle\EventListener\AuthenticationHandler:
    autowire: true
    autoconfigure: false

  Capco\AppBundle\EventListener\AuthenticationListener:
    arguments: ['@doctrine.orm.entity_manager', '@request_stack']
    autoconfigure: false
    tags:
      - { name: kernel.event_listener, event: security.authentication.failure, method: onAuthenticationFailure }
      - { name: kernel.event_listener, event: security.interactive_login, method: onAuthenticationSuccess }

nelmio_api_doc: ~

sensio_framework_extra:
    router:      { annotations: true }
    request:     { converters: true, auto_convert: true }
    view:        { annotations: true }
    security:    { annotations: true }
    psr_message: { enabled: false }
