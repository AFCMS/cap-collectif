imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: sonata.yml }
    - { resource: liip_imagine.yml }

framework:
    secret: "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: null
    form: null
    csrf_protection: null
    validation:
        enabled: true
        enable_annotations: true
    templating:
        engines:
            - twig
    default_locale: "%locale%"
    trusted_hosts: null
    trusted_proxies: null
    session:
        handler_id: null
    fragments: null
    http_method_override: true
    translator: { fallback: fr }

twig:
    debug: "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'CapcoAppBundle:Form:fields.html.twig'
            - 'bootstrap_3_layout.html.twig'

doctrine:
    dbal:
        driver: "%database_driver%"
        host: "%database_host%"
        port: "%database_port%"
        dbname: "%database_name%"
        user: "%database_user%"
        password: "%database_password%"
        charset: UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

swiftmailer:
    transport: "%mailer_transport%"
    host: "%mailer_host%"
    username: "%mailer_user%"
    password: "%mailer_password%"

# Stof\DoctrineExtensionBundle configuration
stof_doctrine_extensions:
    default_locale: fr_FR
    orm:
        default:
            timestampable: true
            translatable: true
            sluggable : true

hautelook_alice:
    locale: fr_FR   # default
    seed: 1         # default

fos_user:
    db_driver:      orm
    firewall_name:  main
    user_class:     Capco\UserBundle\Entity\User
    group:
        group_class:   Capco\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)
    service:
        user_manager: sonata.user.orm.user_manager
        mailer: fos_user.mailer.default
    registration:
        confirmation:
            enabled:    true
            from_email:
                address: lbrunet@jolicode.com
                sender_name: lbrunet
services:
    twig.extension.text:
       class: Twig_Extensions_Extension_Text
       tags:
            - { name: twig.extension }
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

hwi_oauth:
    #this is my custom user provider, created from FOSUBUserProvider - will manage the
    #automatic user registration on your site, with data from the provider (facebook. google, etc.)
    #and also, the connecting part (get the token and the user_id)
    connect:
        account_connector: my_user_provider
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_name: main
    fosub:
        username_iterations: 30
        properties:
            # these properties will be used/redefined later in the custom FOSUBUserProvider service.
            facebook: facebook_id
            google: google_id
    resource_owners:
        facebook:
            type: facebook
            client_id: "%facebook_app_id%"
            client_secret: "%facebook_app_secret%"
            scope: "email"
            options:
                display: page
        google:
            type: google
            client_id: "%google_app_id%"
            client_secret: "%google_app_secret%"
            scope: "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
            options:
                access_type: offline
                approval_prompt: auto
                display: page
                login_hint: email address
