services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            Psr\Log\LoggerInterface: '@monolog.logger.request'
            Caxy\HtmlDiffBundle\Service\HtmlDiffService: '@caxy.html_diff'
            $samlIdp: '%simplesamlphp.sp%'
            $logger: '@logger'
            $projectDir: '%kernel.project_dir%'

    Capco\AppBundle\Import\:
        resource: '%kernel.project_dir%/src/Capco/AppBundle/Import/*'

    Capco\AppBundle\EventListener\ToggleSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    Http\Client\Common\HttpMethodsClient: '@httplug.client.default.http_methods'
    authentication_failure_handler: '@Capco\AppBundle\EventListener\AuthenticationHandler'

    Capco\AppBundle\Helper\ConvertCsvToArray:
        public: true

    Capco\AppBundle\SiteImage\SiteFaviconProcessor:
        arguments:
            $webDir: '%kernel.project_dir%/public/'

    Capco\AppBundle\Mailer\MailerService: ~
    Capco\AppBundle\Generator\DiffGenerator: ~

    Geocoder\Provider\GoogleMaps\GoogleMaps:
        arguments:
            $apiKey: '%google_maps_key_server%'
    Capco\AppBundle\Utils\Canonicalizer: null
    Box\Spout\Writer\CSV\Writer: null

    Capco\AppBundle\PublicApi\PublicApiKeyUserProvider:
        public: true
    Capco\AppBundle\PublicApi\PublicApiKeyAuthenticator:
        public: true
    Capco\AppBundle\NewRelic\CapcoNamingStrategy:
        public: true
    Overblog\PromiseAdapter\Adapter\WebonyxGraphQLSyncPromiseAdapter:
        arguments:
            - '@webonyx_graphql.sync_promise_adapter'

    Capco\AppBundle\DataFixtures\ORM\CustomOrderFilesLocator:
        arguments:
            - '@hautelook_alice.locator.environmentless'
            - '%kernel.project_dir%/fixtures/'

    ZxcvbnPhp\Zxcvbn: null
    hautelook_alice.locator: '@Capco\AppBundle\DataFixtures\ORM\CustomOrderFilesLocator'
    capco.fidry_alice_data_fixtures.loader.simple:
        class: Fidry\AliceDataFixtures\Loader\SimpleLoader
        arguments:
            - '@nelmio_alice.files_loader'
    Capco\AppBundle\EventListener\PriorAuthenticationHandler:
        tags:
            - {
                  name: kernel.event_listener,
                  event: kernel.request,
                  class: Capco\AppBundle\EventListener\PriorAuthenticationHandler,
                  priority: 14,
              }
        arguments:
            $apiKey: '%recaptcha_private_key%'
    fidry_alice_data_fixtures.loader.simple: '@Capco\AppBundle\DataFixtures\ORM\CustomOrderLoader'
    Capco\AppBundle\DataFixtures\ORM\CustomOrderLoader:
        arguments:
            - '@capco.fidry_alice_data_fixtures.loader.simple'

    #### USER

    Capco\UserBundle\Authenticator\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/Authenticator/*'

    Capco\UserBundle\Form\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/Form/*'

    Capco\UserBundle\Listener\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/Listener/*'

    Capco\UserBundle\MonCompteParis\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/MonCompteParis/*'

    Capco\UserBundle\Security\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/Security/*'
        exclude: '%kernel.project_dir%/src/Capco/UserBundle/Security/Exception/*'

    Capco\UserBundle\Security\Core\User\OauthUserProvider:
        autowire: true
        arguments:
            $properties: { facebook: facebook_id }

    Capco\UserBundle\Security\Core\User\SamlUserProvider:
        arguments:
            $samlIdp: '%simplesamlphp.sp%'

    Capco\UserBundle\Listener\UserNotificationsListener:
        autowire: true
        tags:
            - { name: doctrine.orm.entity_listener, event: prePersist }

    Capco\UserBundle\Security\Core\User\UserEmailProvider:
        arguments: ['@fos_user.user_manager', {}]

    Capco\AppBundle\Locale\PublishedLocalesDataloader:
        autowire: true

    Capco\AppBundle\Locale\DefaultLocaleCodeDataloader: ~

    Capco\UserBundle\Doctrine\UserManager:
        public: true
        arguments:
            $class: '%fos_user.model.user.class%'

    Capco\UserBundle\Security\Http\Logout\LogoutSuccessHandler:
        autowire: true
        arguments:
            # Order of handlers matter here!
            $handlers:
                - '@Capco\UserBundle\Security\Http\Logout\Handler\FranceConnectLogoutHandler'
                - '@Capco\UserBundle\Security\Http\Logout\Handler\BasicAuthLogoutHandler'
                - '@Capco\UserBundle\Security\Http\Logout\Handler\SAMLLogoutHandler'
                - '@Capco\UserBundle\Security\Http\Logout\Handler\ParisLogoutHandler'
                - '@Capco\UserBundle\Security\Http\Logout\Handler\OpenIDLogoutHandler'

    Capco\UserBundle\OpenID\OptionsModifier\OpenIDOptionsModifier: ~

    Capco\UserBundle\FranceConnect\FranceConnectOptionsModifier: ~

    Capco\UserBundle\OpenID\OpenIDExtraMapper:
        arguments:
            $instanceName: '%instance_name%'
    Capco\UserBundle\OpenID\OpenIDReferrerResolver:
        arguments:
            $instanceName: '%instance_name%'

    # Logout Handlers
    Capco\UserBundle\Security\Http\Logout\Handler\BasicAuthLogoutHandler: ~

    Capco\UserBundle\Security\Http\Logout\Handler\ParisLogoutHandler: ~

    Capco\UserBundle\Security\Http\Logout\Handler\SAMLLogoutHandler: ~

    Capco\UserBundle\Security\Http\Logout\Handler\OpenIDLogoutHandler:
        arguments:
            $resourceOwner: '@hwi_oauth.resource_owner.openid'

    Capco\UserBundle\Security\Http\Logout\Handler\FranceConnectLogoutHandler:
        lazy: true
        arguments:
            $resourceOwner: '@hwi_oauth.resource_owner.franceconnect'
            $environment: '%kernel.environment%'
            $tokenStorage: '@security.token_storage'

    Capco\AppBundle\Client\:
        autowire: true
        resource: '%kernel.project_dir%/src/Capco/AppBundle/Client/*'

    Capco\AppBundle\Client\OccitanieClient:
        autowire: true
        arguments:
            $username: '%occitanie_username%'
            $password: '%occitanie_password%'
            $clientId: '%occitanie_client_id%'
            $clientSecret: '%occitanie_client_secret%'

    Capco\AppBundle\Client\TipsmeeeClient:
        autowire: true
        arguments:
            $apiKey: '%tipsmeee_api_key%'

    Capco\AppBundle\Client\CloudflareElasticClient:
        autowire: true
        arguments:
            $hostname: '%router.request_context.host%'
            $username: '%cloudflare_elastic_username%'
            $password: '%cloudflare_elastic_password%'
            $clientId: '%cloudflare_elastic_id%'
            $environment: '%kernel.environment%'
            $elasticsearchHost: '%elasticsearch_host%'

    Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolverInterface: '@security.authentication.trust_resolver'

    Sonata\AdminBundle\Templating\TemplateRegistry:
        public: true

    simplesamlphp.auth: '@SimpleSAML\Auth\Simple'

    SimpleSAML\Auth\Simple:
        arguments: ['%simplesamlphp.sp%']

    Capco\UserBundle\Authenticator\SamlAuthenticator:
        autowire: true
        arguments:
            $samlAuth: '@simplesamlphp.auth'
            $samlIdp: '%simplesamlphp.sp%'

    swiftmailer.mailer.transport.mandrill:
        class: Capco\AppBundle\Mailer\Transport\MandrillTransport
        arguments:
            - '@swiftmailer.mailer.mandrill.transport.eventdispatcher'

    swiftmailer.mailer.transport.mailjet:
        class: Capco\AppBundle\Mailer\Transport\MailjetTransport
        arguments:
            - '@swiftmailer.mailer.mailjet.transport.eventdispatcher'

    swiftmailer.mailer.transport.api:
        class: Capco\AppBundle\Mailer\Transport\Transport
        arguments:
            - '@swiftmailer.mailer.transport.mandrill'
            - '@swiftmailer.mailer.transport.mailjet'
            - '@swiftmailer.mailer.api.transport.eventdispatcher'

    Capco\AppBundle\Font\FontProcessor:
        public: true

    Capco\AppBundle\Font\FontManager:
        public: true

    Capco\AppBundle\Router\DefaultPatternGenerationStrategy:
        arguments:
            $strategy: prefix
            $translator: '@translator.default'
            $locales: '%locales%'
            $cacheDir: '%kernel.cache_dir%'
            $translationDomain: 'routes'
            $defaultLocale: 'fr-FR'

    webfactory_icu_translation.translator: '@Capco\AppBundle\Translator\FormatterDecorator'

    Capco\AppBundle\Translator\FormatterDecorator:
        arguments:
            $formatter: '@Webfactory\IcuTranslationBundle\Translator\Formatting\IntlFormatter'

    Capco\AppBundle\Router\I18nRouter:
        autowire: true
        arguments:
            $resource: '%kernel.project_dir%/config/routes/routing.yaml'
            $logger: '@logger'
            $jmsLocaleResolver: '@jms_i18n_routing.locale_resolver.default'
        calls:
            - [setLocaleResolver, ['@jms_i18n_routing.locale_resolver']]
            - [setI18nLoaderId, ['jms_i18n_routing.loader']]
            - [setDefaultLocale, ['%jms_i18n_routing.default_locale%']]
            - [setRedirectToHost, ['%jms_i18n_routing.redirect_to_host%']]
            - [setOption, ['cache_dir', '%kernel.cache_dir%']]
            - [setOption, ['debug', '%kernel.debug%']]

    jms_i18n_routing.router: '@Capco\AppBundle\Router\I18nRouter'

    Capco\AppBundle\Security\CaptchaChecker:
        arguments:
            $apiKey: '%recaptcha_private_key%'

    Capco\AppBundle\RedirectionIO\ProjectKeyDataloader:
        autowire: true
        class: 'Capco\AppBundle\RedirectionIO\ProjectKeyDataloader'

    Capco\AppBundle\RedirectionIO\RequestResponseListener:
        decorates: 'RedirectionIO\Client\ProxySymfony\EventListener\RequestResponseListener'
        arguments:
            - '@Capco\AppBundle\Toggle\Manager'
            - '@Capco\AppBundle\RedirectionIO\Client'

    Capco\AppBundle\RedirectionIO\Client:
        decorates: 'RedirectionIO\Client\Sdk\Client'
        arguments:
            - '@Capco\AppBundle\RedirectionIO\ProjectKeyDataloader'
            - '@logger'
            - '@Capco\AppBundle\Toggle\Manager'
            - 20000
            - '%agent_tcp%'
            - '%agent_unix%'

    Capco\AppBundle\Manager\AnalysisConfigurationManager:
        bind:
            Swarrot\SwarrotBundle\Broker\Publisher: '@swarrot.publisher'

    Egulias\EmailValidator\EmailValidator:
        autowire: true
        class: 'Egulias\EmailValidator\EmailValidator'

    Overblog\PromiseAdapter\PromiseAdapterInterface:
        alias: overblog_dataloader.webonyx_graphql_sync_promise_adapter

    Capco\AppBundle\Command\RemindUserAccountConfirmationCommand:
        bind:
            Swarrot\SwarrotBundle\Broker\Publisher: '@swarrot.publisher'

    Symfony\Component\Cache\Adapter\ApcuAdapter:
        public: true

    Capco\AppBundle\Cache\SessionListener:
        decorates: session_listener

    Capco\AppBundle\Mailer\EmailingCampaignSender: ~

    Liuggio\ExcelBundle\Factory:
        public: true

    Doctrine\Migrations\Version\DbalMigrationFactory: ~

    Capco\AppBundle\MigrationHelper\MigrationFactoryDecorator:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        arguments:
            [
                '@Capco\AppBundle\MigrationHelper\MigrationFactoryDecorator.inner',
                '@service_container',
            ]

    Capco\AppBundle\Mailer\SenderEmailDomains\MailjetClient:
        arguments:
            $publicKey: '%mailjet_public_key%'
            $privateKey: '%mailjet_private_key%'
    Capco\AppBundle\Mailer\SenderEmailDomains\MandrillClient:
        arguments:
            $key: '%mandrill_api_key%'

    Capco\AppBundle\Mailer\SenderEmailDomains\SenderEmailDomainsManager:
        arguments:
            $environment: '%kernel.environment%'

    Capco\UserBundle\Handler\UserInvitationHandler:
        autowire: true


    Capco\UserBundle\Security\SessionWithJsonHandler:
        arguments:
            $redis: '@snc_redis.default'
            $prefix: '%redis_prefix%session_json_new_%kernel.environment%_' # We add env in prefix to allow multi environments sessions in dev
