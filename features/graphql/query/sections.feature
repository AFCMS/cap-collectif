@opinions @sections @read-only
Feature: Sections

Scenario: GraphQL client wants to list sections
  Given I send a GraphQL POST request:
  """
  {
    "query": "{
        sections {
          id
        }
    }"
  }
  """
  Then the JSON response should match:
  """
  {
     "data":{
        "sections":[
           {
              "id":"opinionTyp2ndIn2ndMultiConsultation"
           },
           {
              "id":"opinionType1"
           },
           {
              "id":"opinionType10"
           },
           {
              "id":"opinionType11"
           },
           {
              "id":"opinionType12"
           },
           {
              "id":"opinionType13"
           },
           {
              "id":"opinionType17"
           },
           {
              "id":"opinionType18"
           },
           {
              "id":"opinionType19"
           },
           {
              "id":"opinionType1stIn1stMultiConsultation"
           },
           {
              "id":"opinionType1stIn2ndMultiConsultation"
           },
           {
              "id":"opinionType2"
           },
           {
              "id":"opinionType20"
           },
           {
              "id":"opinionType21"
           },
           {
              "id":"opinionType22"
           },
           {
              "id":"opinionType23"
           },
           {
              "id":"opinionType24"
           },
           {
              "id":"opinionType25"
           },
           {
              "id":"opinionType26"
           },
           {
              "id":"opinionType27"
           },
           {
              "id":"opinionType28"
           },
           {
              "id":"opinionType28ter"
           },
           {
              "id":"opinionType29"
           },
           {
              "id":"opinionType29ter"
           },
           {
              "id":"opinionType2ndIn1stMultiConsultation"
           },
           {
              "id":"opinionType3"
           },
           {
              "id":"opinionType4"
           },
           {
              "id":"opinionType5"
           },
           {
              "id":"opinionType5bis"
           },
           {
              "id":"opinionType5ter"
           },
           {
              "id":"opinionType6"
           },
           {
              "id":"opinionType7"
           },
           {
              "id":"opinionType8"
           },
           {
              "id":"opinionType9"
           },
           {
              "id":"opinionTypeCustomAccess"
           },
           {
              "id":"opinionTypeEndless"
           },
           {
              "id":"opinionTypeFirstInMultiForExport"
           },
           {
              "id":"opinionTypeManyOptions"
           },
           {
              "id":"opinionTypePrivate"
           },
           {
              "id":"opinionTypeSecondInMultiForExport"
           }
        ]
     }
  }
  """

Scenario: GraphQL client wants to list sections by user
  Given I send a GraphQL POST request:
  """
  {
    "query": "query sections($user: ID!){
      sections(user: $user ) {
          id
        }
    }",
    "variables": {
      "user": "VXNlcjp1c2VyNQ=="
    }
  }
  """
  Then the JSON response should match:
  """
  {
     "data":{
        "sections":[
           {
              "id":"opinionTypeFirstInMultiForExport"
           },
           {
              "id":"opinionType6"
           },
           {
              "id":"opinionTypeManyOptions"
           },
           {
              "id":"opinionType1stIn1stMultiConsultation"
           },
           {
              "id":"opinionType5"
           },
           {
              "id":"opinionType8"
           },
           {
              "id":"opinionType2ndIn1stMultiConsultation"
           },
           {
              "id":"opinionType12"
           },
           {
              "id":"opinionType10"
           }
        ]
     }
  }
  """
