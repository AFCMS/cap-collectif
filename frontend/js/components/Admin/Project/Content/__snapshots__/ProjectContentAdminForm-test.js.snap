// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectContentAdminForm /> renders correctly empty 1`] = `
<div
  className="col-md-12"
>
  <ProjectAdminFormstyle__ProjectBoxContainer
    className="box container-fluid"
  >
    <ProjectAdminFormstyle__ProjectBoxHeader>
      <h4>
        <FormattedMessage
          id="global.general"
          values={Object {}}
        />
      </h4>
    </ProjectAdminFormstyle__ProjectBoxHeader>
    <div
      className="box-content"
    >
      <Field
        component={[Function]}
        label={
          <FormattedMessage
            id="global.title"
            values={Object {}}
          />
        }
        name="title"
        type="text"
      />
      <UserListField
        ariaControls="EventListFilters-filter-author-listbox"
        authorOfEvent={false}
        autoload={false}
        className=""
        clearable={true}
        debounce={true}
        id="project-author"
        inputClassName="fake-inputClassName"
        label={
          <FormattedMessage
            id="admin.fields.project.authors"
            values={Object {}}
          />
        }
        labelClassName="control-label"
        multi={true}
        name="authors"
        placeholder=" "
        selectFieldIsObject={true}
      />
      <ProjectAdminFormstyle__ProjectSmallInput>
        <injectIntl(ProjectTypeListField)
          optional={true}
          placeholder=" "
        />
      </ProjectAdminFormstyle__ProjectSmallInput>
      <div
        className="row mr-0 ml-0"
      >
        <Field
          component={[Function]}
          id="cover"
          label={
            <div>
              proposal.media
              <span
                className="excerpt inline"
              >
                global.optional
                 
              </span>
            </div>
          }
          name="Cover"
          type="image"
        />
      </div>
      <Field
        component={[Function]}
        id="video"
        label={
          <div>
            admin.fields.project.video
            <span
              className="excerpt inline"
            >
              global.optional
               
              <OverlayTrigger
                defaultOverlayShown={false}
                overlay={
                  <_default
                    className="text-left"
                    id="tooltip-top"
                    style={
                      Object {
                        "wordBreak": "break-word",
                      }
                    }
                  >
                    <FormattedHTMLMessage
                      id="admin.help.project.video"
                      tagName="span"
                      values={Object {}}
                    />
                  </_default>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <ForwardRef(ProjectContentAdminForm__InformationIcon) />
              </OverlayTrigger>
            </span>
          </div>
        }
        name="video"
        placeholder="admin-project-video-placeholder"
        type="text"
      />
      <Field
        aria-autocomplete="list"
        aria-haspopup="true"
        autoload={true}
        clearable={true}
        component={[Function]}
        debounce={true}
        id="themes"
        inputClassName="fake-inputClassName"
        label={
          <div>
            global.themes
            <span
              className="excerpt inline"
            >
              global.optional
               
            </span>
          </div>
        }
        labelClassName="control-label"
        loadOptions={[Function]}
        multi={true}
        name="themes"
        placeholder=" "
        role="combobox"
        selectFieldIsObject={true}
      />
      <Field
        aria-autocomplete="list"
        aria-haspopup="true"
        autoload={true}
        clearable={true}
        component={[Function]}
        debounce={true}
        id="districts"
        inputClassName="fake-inputClassName"
        label={
          <div>
            proposal_form.districts
            <span
              className="excerpt inline"
            >
              global.optional
               
            </span>
          </div>
        }
        labelClassName="control-label"
        loadOptions={[Function]}
        multi={true}
        name="districts"
        placeholder=" "
        role="combobox"
        selectFieldIsObject={true}
      />
      <Field
        component={[Function]}
        label={
          <div>
            global.meta.description
            <span
              className="excerpt inline"
            >
              global.optional
               
              <OverlayTrigger
                defaultOverlayShown={false}
                overlay={
                  <_default
                    className="text-left"
                    id="tooltip-top"
                    style={
                      Object {
                        "wordBreak": "break-word",
                      }
                    }
                  >
                    <FormattedHTMLMessage
                      id="admin.help.metadescription"
                      tagName="span"
                      values={Object {}}
                    />
                  </_default>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <ForwardRef(ProjectContentAdminForm__InformationIcon) />
              </OverlayTrigger>
            </span>
          </div>
        }
        name="metaDescription"
        type="textarea"
      />
    </div>
  </ProjectAdminFormstyle__ProjectBoxContainer>
</div>
`;

exports[`<ProjectContentAdminForm /> renders correctly with a project 1`] = `
<div
  className="col-md-12"
>
  <ProjectAdminFormstyle__ProjectBoxContainer
    className="box container-fluid"
  >
    <ProjectAdminFormstyle__ProjectBoxHeader>
      <h4>
        <FormattedMessage
          id="global.general"
          values={Object {}}
        />
      </h4>
    </ProjectAdminFormstyle__ProjectBoxHeader>
    <div
      className="box-content"
    >
      <Field
        component={[Function]}
        label={
          <FormattedMessage
            id="global.title"
            values={Object {}}
          />
        }
        name="title"
        type="text"
      />
      <UserListField
        ariaControls="EventListFilters-filter-author-listbox"
        authorOfEvent={false}
        autoload={false}
        className=""
        clearable={true}
        debounce={true}
        id="project-author"
        inputClassName="fake-inputClassName"
        label={
          <FormattedMessage
            id="admin.fields.project.authors"
            values={Object {}}
          />
        }
        labelClassName="control-label"
        multi={true}
        name="authors"
        placeholder=" "
        selectFieldIsObject={true}
      />
      <ProjectAdminFormstyle__ProjectSmallInput>
        <injectIntl(ProjectTypeListField)
          optional={true}
          placeholder=" "
        />
      </ProjectAdminFormstyle__ProjectSmallInput>
      <div
        className="row mr-0 ml-0"
      >
        <Field
          component={[Function]}
          id="cover"
          label={
            <div>
              proposal.media
              <span
                className="excerpt inline"
              >
                global.optional
                 
              </span>
            </div>
          }
          name="Cover"
          type="image"
        />
      </div>
      <Field
        component={[Function]}
        id="video"
        label={
          <div>
            admin.fields.project.video
            <span
              className="excerpt inline"
            >
              global.optional
               
              <OverlayTrigger
                defaultOverlayShown={false}
                overlay={
                  <_default
                    className="text-left"
                    id="tooltip-top"
                    style={
                      Object {
                        "wordBreak": "break-word",
                      }
                    }
                  >
                    <FormattedHTMLMessage
                      id="admin.help.project.video"
                      tagName="span"
                      values={Object {}}
                    />
                  </_default>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <ForwardRef(ProjectContentAdminForm__InformationIcon) />
              </OverlayTrigger>
            </span>
          </div>
        }
        name="video"
        placeholder="admin-project-video-placeholder"
        type="text"
      />
      <Field
        aria-autocomplete="list"
        aria-haspopup="true"
        autoload={true}
        clearable={true}
        component={[Function]}
        debounce={true}
        id="themes"
        inputClassName="fake-inputClassName"
        label={
          <div>
            global.themes
            <span
              className="excerpt inline"
            >
              global.optional
               
            </span>
          </div>
        }
        labelClassName="control-label"
        loadOptions={[Function]}
        multi={true}
        name="themes"
        placeholder=" "
        role="combobox"
        selectFieldIsObject={true}
      />
      <Field
        aria-autocomplete="list"
        aria-haspopup="true"
        autoload={true}
        clearable={true}
        component={[Function]}
        debounce={true}
        id="districts"
        inputClassName="fake-inputClassName"
        label={
          <div>
            proposal_form.districts
            <span
              className="excerpt inline"
            >
              global.optional
               
            </span>
          </div>
        }
        labelClassName="control-label"
        loadOptions={[Function]}
        multi={true}
        name="districts"
        placeholder=" "
        role="combobox"
        selectFieldIsObject={true}
      />
      <Field
        component={[Function]}
        label={
          <div>
            global.meta.description
            <span
              className="excerpt inline"
            >
              global.optional
               
              <OverlayTrigger
                defaultOverlayShown={false}
                overlay={
                  <_default
                    className="text-left"
                    id="tooltip-top"
                    style={
                      Object {
                        "wordBreak": "break-word",
                      }
                    }
                  >
                    <FormattedHTMLMessage
                      id="admin.help.metadescription"
                      tagName="span"
                      values={Object {}}
                    />
                  </_default>
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <ForwardRef(ProjectContentAdminForm__InformationIcon) />
              </OverlayTrigger>
            </span>
          </div>
        }
        name="metaDescription"
        type="textarea"
      />
    </div>
  </ProjectAdminFormstyle__ProjectBoxContainer>
</div>
`;
