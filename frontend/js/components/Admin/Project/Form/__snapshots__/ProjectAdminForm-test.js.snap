// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectAdminForm /> renders correctly empty 1`] = `
<form
  id="projectAdminForm"
  onSubmit={[MockFunction]}
>
  <Relay(ProjectContentAdminForm)
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    handleSubmit={[MockFunction]}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "archived": false,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "firstCollectStep": Object {
          "form": Object {
            "isGridViewEnabled": true,
            "isListViewEnabled": false,
            "isMapViewEnabled": false,
          },
        },
        "id": "1",
        "isExternal": false,
        "locale": null,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "publishedAt": "22/22/22",
        "restrictedViewers": null,
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    updateSyncErrors={[MockFunction]}
    valid={true}
    warning={null}
  />
  <Relay(Connect(ProjectExternalAdminPage))
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    formName="projectAdminForm"
    handleSubmit={[MockFunction]}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "archived": false,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "firstCollectStep": Object {
          "form": Object {
            "isGridViewEnabled": true,
            "isListViewEnabled": false,
            "isMapViewEnabled": false,
          },
        },
        "id": "1",
        "isExternal": false,
        "locale": null,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "publishedAt": "22/22/22",
        "restrictedViewers": null,
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    updateSyncErrors={[MockFunction]}
    valid={true}
    warning={null}
  />
  <Relay(ProjectStepAdmin)
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    handleSubmit={[MockFunction]}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "archived": false,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "firstCollectStep": Object {
          "form": Object {
            "isGridViewEnabled": true,
            "isListViewEnabled": false,
            "isMapViewEnabled": false,
          },
        },
        "id": "1",
        "isExternal": false,
        "locale": null,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "publishedAt": "22/22/22",
        "restrictedViewers": null,
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    updateSyncErrors={[MockFunction]}
    valid={true}
    viewerIsAdmin={false}
    warning={null}
  />
  <Relay(Connect(ProjectAccessAdminForm))
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    features={
      Object {
        "allow_users_to_propose_events": false,
        "blog": false,
        "calendar": false,
        "captcha": false,
        "consent_external_communication": false,
        "consent_internal_communication": false,
        "consultation_plan": false,
        "disconnect_openid": false,
        "display_map": false,
        "display_pictures_in_depository_proposals_list": false,
        "display_pictures_in_event_list": false,
        "districts": false,
        "export": false,
        "external_project": false,
        "http_redirects": false,
        "import_proposals": false,
        "login_cas": false,
        "login_facebook": false,
        "login_franceconnect": false,
        "login_paris": false,
        "login_saml": false,
        "members_list": false,
        "multilangue": false,
        "new_feature_questionnaire_result": false,
        "new_project_card": false,
        "newsletter": false,
        "noindex_on_profiles": false,
        "phone_confirmation": false,
        "privacy_policy": false,
        "profiles": false,
        "project_trash": false,
        "projects_form": false,
        "proposal_revisions": false,
        "read_more": false,
        "registration": false,
        "report_browers_errors_to_sentry": false,
        "reporting": false,
        "restrict_connection": false,
        "restrict_registration_via_email_domain": false,
        "search": false,
        "secure_password": false,
        "server_side_rendering": false,
        "share_buttons": false,
        "shield_mode": false,
        "sso_by_pass_auth": false,
        "themes": false,
        "twilio": false,
        "unstable__admin_editor": false,
        "unstable__analysis": false,
        "unstable__analytics_page": false,
        "unstable__emailing": false,
        "unstable__emailing_parameters": false,
        "unstable__new_consultation_page": false,
        "unstable__remote_events": false,
        "unstable__tipsmeee": false,
        "unstable_anonymous_questionnaire": false,
        "unstable_project_admin": false,
        "user_type": false,
        "votes_evolution": false,
        "votes_min": false,
        "zipcode_at_register": false,
      }
    }
    form="formName"
    formName="projectAdminForm"
    handleSubmit={[MockFunction]}
    initialGroups={Array []}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    onTitleChange={[MockFunction]}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "archived": false,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "firstCollectStep": Object {
          "form": Object {
            "isGridViewEnabled": true,
            "isListViewEnabled": false,
            "isMapViewEnabled": false,
          },
        },
        "id": "1",
        "isExternal": false,
        "locale": null,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "publishedAt": "22/22/22",
        "restrictedViewers": null,
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    title="testTitle"
    touch={[MockFunction]}
    untouch={[MockFunction]}
    updateSyncErrors={[MockFunction]}
    valid={true}
    viewerIsAdmin={false}
    warning={null}
  />
  <Relay(ProjectProposalsAdminForm)
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    handleSubmit={[MockFunction]}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "archived": false,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "firstCollectStep": Object {
          "form": Object {
            "isGridViewEnabled": true,
            "isListViewEnabled": false,
            "isMapViewEnabled": false,
          },
        },
        "id": "1",
        "isExternal": false,
        "locale": null,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "publishedAt": "22/22/22",
        "restrictedViewers": null,
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    updateSyncErrors={[MockFunction]}
    valid={true}
    warning={null}
  />
  <Relay(ProjectPublishAdminForm)
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    features={
      Object {
        "allow_users_to_propose_events": false,
        "blog": false,
        "calendar": false,
        "captcha": false,
        "consent_external_communication": false,
        "consent_internal_communication": false,
        "consultation_plan": false,
        "disconnect_openid": false,
        "display_map": false,
        "display_pictures_in_depository_proposals_list": false,
        "display_pictures_in_event_list": false,
        "districts": false,
        "export": false,
        "external_project": false,
        "http_redirects": false,
        "import_proposals": false,
        "login_cas": false,
        "login_facebook": false,
        "login_franceconnect": false,
        "login_paris": false,
        "login_saml": false,
        "members_list": false,
        "multilangue": false,
        "new_feature_questionnaire_result": false,
        "new_project_card": false,
        "newsletter": false,
        "noindex_on_profiles": false,
        "phone_confirmation": false,
        "privacy_policy": false,
        "profiles": false,
        "project_trash": false,
        "projects_form": false,
        "proposal_revisions": false,
        "read_more": false,
        "registration": false,
        "report_browers_errors_to_sentry": false,
        "reporting": false,
        "restrict_connection": false,
        "restrict_registration_via_email_domain": false,
        "search": false,
        "secure_password": false,
        "server_side_rendering": false,
        "share_buttons": false,
        "shield_mode": false,
        "sso_by_pass_auth": false,
        "themes": false,
        "twilio": false,
        "unstable__admin_editor": false,
        "unstable__analysis": false,
        "unstable__analytics_page": false,
        "unstable__emailing": false,
        "unstable__emailing_parameters": false,
        "unstable__new_consultation_page": false,
        "unstable__remote_events": false,
        "unstable__tipsmeee": false,
        "unstable_anonymous_questionnaire": false,
        "unstable_project_admin": false,
        "user_type": false,
        "votes_evolution": false,
        "votes_min": false,
        "zipcode_at_register": false,
      }
    }
    form="formName"
    handleSubmit={[MockFunction]}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "archived": false,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "firstCollectStep": Object {
          "form": Object {
            "isGridViewEnabled": true,
            "isListViewEnabled": false,
            "isMapViewEnabled": false,
          },
        },
        "id": "1",
        "isExternal": false,
        "locale": null,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "publishedAt": "22/22/22",
        "restrictedViewers": null,
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    updateSyncErrors={[MockFunction]}
    valid={true}
    warning={null}
  />
  <div
    className="col-md-12"
  >
    <ProjectAdminFormstyle__ProjectBoxContainer
      className="box container-fluid"
    >
      <div
        className="box-content p-15"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={true}
          id="submit-project-content"
          type="submit"
        >
          <FormattedMessage
            id="global.save"
            values={Object {}}
          />
        </Button>
        <AlertForm
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </div>
    </ProjectAdminFormstyle__ProjectBoxContainer>
  </div>
</form>
`;
