// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectAdminForm /> renders correctly empty 1`] = `
<form
  id="projectAdminForm"
  onSubmit={[MockFunction]}
>
  <ForwardRef(Relay(ProjectContentAdminForm))
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    handleSubmit={[MockFunction]}
    initialValues={Object {}}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "id": "1",
        "isExternal": false,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "opinionTerm": 1,
        "publishedAt": "22/22/22",
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    valid={true}
    warning={null}
  />
  <ForwardRef(Relay(ProjectExternalAdminPage))
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    formName="projectAdminForm"
    handleSubmit={[MockFunction]}
    initialValues={Object {}}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "id": "1",
        "isExternal": false,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "opinionTerm": 1,
        "publishedAt": "22/22/22",
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    valid={true}
    warning={null}
  />
  <ProjectStepAdmin
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    handleSubmit={[MockFunction]}
    initialValues={Object {}}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    valid={true}
    warning={null}
  />
  <ForwardRef(Relay(Connect(ProjectAccessAdminForm)))
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    formName="projectAdminForm"
    handleSubmit={[MockFunction]}
    initialValues={Object {}}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    onTitleChange={[MockFunction]}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "id": "1",
        "isExternal": false,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "opinionTerm": 1,
        "publishedAt": "22/22/22",
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    title="testTitle"
    touch={[MockFunction]}
    untouch={[MockFunction]}
    valid={true}
    warning={null}
  />
  <ForwardRef(Relay(ProjectProposalsAdminForm))
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    handleSubmit={[MockFunction]}
    initialValues={Object {}}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "id": "1",
        "isExternal": false,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "opinionTerm": 1,
        "publishedAt": "22/22/22",
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    valid={true}
    warning={null}
  />
  <ForwardRef(Relay(ProjectPublishAdminForm))
    anyTouched={false}
    array={
      Object {
        "insert": [MockFunction],
        "move": [MockFunction],
        "pop": [MockFunction],
        "push": [MockFunction],
        "remove": [MockFunction],
        "removeAll": [MockFunction],
        "shift": [MockFunction],
        "splice": [MockFunction],
        "swap": [MockFunction],
        "unshift": [MockFunction],
      }
    }
    asyncValidate={[MockFunction]}
    asyncValidating={false}
    autofill={[MockFunction]}
    blur={[MockFunction]}
    change={[MockFunction]}
    clearAsyncError={[MockFunction]}
    clearSubmit={[MockFunction]}
    destroy={[MockFunction]}
    dirty={false}
    dispatch={[MockFunction]}
    error={null}
    form="formName"
    handleSubmit={[MockFunction]}
    initialValues={Object {}}
    initialize={[MockFunction]}
    initialized={true}
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    invalid={false}
    pristine={true}
    project={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "Cover": null,
        "authors": Array [],
        "districts": null,
        "externalContributionsCount": null,
        "externalLink": null,
        "externalParticipantsCount": null,
        "externalVotesCount": null,
        "id": "1",
        "isExternal": false,
        "metaDescription": "so meta",
        "opinionCanBeFollowed": true,
        "opinionTerm": 1,
        "publishedAt": "22/22/22",
        "steps": Array [],
        "themes": Array [],
        "title": "testTitle",
        "type": Object {
          "id": "1",
        },
        "url": "/project1",
        "video": "dailymotion.com/issou",
        "visibility": "ADMIN",
      }
    }
    reset={[MockFunction]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[MockFunction]}
    untouch={[MockFunction]}
    valid={true}
    warning={null}
  />
  <div
    className="col-md-12"
  >
    <div
      className="box box-primary"
    >
      <div
        className="box-content p-15"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={true}
          id="submit-project-content"
          type="submit"
        >
          <FormattedMessage
            id="global.save"
            values={Object {}}
          />
        </Button>
        <AlertForm
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </div>
    </div>
  </div>
</form>
`;
