// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Comment /> <Comment /> not shown and focus should render correctly 1`] = `
<Connect(ComponentWithColors)
  as="li"
  useBodyColor={true}
>
  <Relay(Connect(UserAvatarLegacy))
    size={45}
    user={
      Object {
        "$fragmentRefs": null,
        "displayName": "admin",
        "media": null,
        "vip": true,
      }
    }
  />
  <Media
    className="opinion"
  >
    <Comment__MediaBody
      className="opinion__body"
      id="comment_proposalComment1"
    >
      <div
        className="opinion__data"
        style={
          Object {
            "overflow": "visible",
          }
        }
      >
        <Relay(CommentInfos)
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "$fragmentRefs": null,
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
      <Relay(CommentBody)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
    </Comment__MediaBody>
    <Commentstyle__CommentBottom>
      <Relay(CommentVoteButtonLegacy)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <Comment__AnswerButton
        onClick={[Function]}
      >
        <Icon
          color="#707070"
          name="navigationLeft"
          size={15}
        />
        <FormattedMessage
          id="global.answer"
          values={Object {}}
        />
      </Comment__AnswerButton>
      <Relay(Connect(CommentReportButton))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <Relay(CommentEdit)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
       
    </Commentstyle__CommentBottom>
    <div
      className="CommentAnswer"
    >
      <Relay(CommentAnswers)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
        useBodyColor={true}
      />
    </div>
  </Media>
</Connect(ComponentWithColors)>
`;

exports[`<Comment /> <Comment /> not shown and not focus should render correctly 1`] = `
<Connect(ComponentWithColors)
  as="li"
  useBodyColor={true}
>
  <Relay(Connect(UserAvatarLegacy))
    size={45}
    user={
      Object {
        "$fragmentRefs": null,
        "displayName": "admin",
        "media": null,
        "vip": true,
      }
    }
  />
  <Media
    className="opinion"
  >
    <Comment__MediaBody
      className="opinion__body"
      id="comment_proposalComment1"
    >
      <div
        className="opinion__data"
        style={
          Object {
            "overflow": "visible",
          }
        }
      >
        <Relay(CommentInfos)
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "$fragmentRefs": null,
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
      <Relay(CommentBody)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
    </Comment__MediaBody>
    <Commentstyle__CommentBottom>
      <Relay(CommentVoteButtonLegacy)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <Comment__AnswerButton
        onClick={[Function]}
      >
        <Icon
          color="#707070"
          name="navigationLeft"
          size={15}
        />
        <FormattedMessage
          id="global.answer"
          values={Object {}}
        />
      </Comment__AnswerButton>
      <Relay(Connect(CommentReportButton))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <Relay(CommentEdit)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
       
    </Commentstyle__CommentBottom>
    <div
      className="CommentAnswer"
    >
      <Relay(CommentAnswers)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
        useBodyColor={true}
      />
    </div>
  </Media>
</Connect(ComponentWithColors)>
`;

exports[`<Comment /> <Comment /> shown and focus should render correctly 1`] = `
<Connect(ComponentWithColors)
  as="li"
  useBodyColor={true}
>
  <Relay(Connect(UserAvatarLegacy))
    size={45}
    user={
      Object {
        "$fragmentRefs": null,
        "displayName": "admin",
        "media": null,
        "vip": true,
      }
    }
  />
  <Media
    className="opinion"
  >
    <Comment__MediaBody
      className="opinion__body"
      id="comment_proposalComment1"
    >
      <div
        className="opinion__data"
        style={
          Object {
            "overflow": "visible",
          }
        }
      >
        <Relay(CommentInfos)
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "$fragmentRefs": null,
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
      <Relay(CommentBody)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
    </Comment__MediaBody>
    <Commentstyle__CommentBottom>
      <Relay(CommentVoteButtonLegacy)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <Comment__AnswerButton
        onClick={[Function]}
      >
        <Icon
          color="#707070"
          name="navigationLeft"
          size={15}
        />
        <FormattedMessage
          id="global.answer"
          values={Object {}}
        />
      </Comment__AnswerButton>
      <Relay(Connect(CommentReportButton))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <Relay(CommentEdit)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
       
    </Commentstyle__CommentBottom>
    <div
      className="CommentAnswer"
    >
      <Relay(CommentAnswers)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
        useBodyColor={true}
      />
      <Relay(Connect(ReduxForm))
        answerOf="proposalComment1"
        commentable={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
    </div>
  </Media>
</Connect(ComponentWithColors)>
`;

exports[`<Comment /> <Comment /> shown and not focus should render correctly 1`] = `
<Connect(ComponentWithColors)
  as="li"
  useBodyColor={true}
>
  <Relay(Connect(UserAvatarLegacy))
    size={45}
    user={
      Object {
        "$fragmentRefs": null,
        "displayName": "admin",
        "media": null,
        "vip": true,
      }
    }
  />
  <Media
    className="opinion"
  >
    <Comment__MediaBody
      className="opinion__body"
      id="comment_proposalComment1"
    >
      <div
        className="opinion__data"
        style={
          Object {
            "overflow": "visible",
          }
        }
      >
        <Relay(CommentInfos)
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "$fragmentRefs": null,
                "displayName": "admin",
                "media": null,
                "vip": true,
              },
              "id": "proposalComment1",
            }
          }
        />
      </div>
      <Relay(CommentBody)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
    </Comment__MediaBody>
    <Commentstyle__CommentBottom>
      <Relay(CommentVoteButtonLegacy)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <Comment__AnswerButton
        onClick={[Function]}
      >
        <Icon
          color="#707070"
          name="navigationLeft"
          size={15}
        />
        <FormattedMessage
          id="global.answer"
          values={Object {}}
        />
      </Comment__AnswerButton>
      <Relay(Connect(CommentReportButton))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
      <Relay(CommentEdit)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
       
    </Commentstyle__CommentBottom>
    <div
      className="CommentAnswer"
    >
      <Relay(CommentAnswers)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
        useBodyColor={true}
      />
      <Relay(Connect(ReduxForm))
        answerOf="proposalComment1"
        commentable={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "admin",
              "media": null,
              "vip": true,
            },
            "id": "proposalComment1",
          }
        }
      />
    </div>
  </Media>
</Connect(ComponentWithColors)>
`;

exports[`<Comment /> should render correctly highlighted 1`] = `
<Connect(ComponentWithColors)
  as="li"
  isHighlighted={true}
  useBodyColor={true}
>
  <Relay(Connect(UserAvatarLegacy))
    size={45}
    user={
      Object {
        "$fragmentRefs": null,
        "displayName": "jcVandam",
        "media": Object {
          "url": "http://perdu.com/image.jpg",
        },
        "vip": true,
      }
    }
  />
  <Media
    className="opinion"
  >
    <Comment__MediaBody
      className="opinion__body"
      id="comment_comment1"
    >
      <div
        className="opinion__data"
        style={
          Object {
            "overflow": "visible",
          }
        }
      >
        <Relay(CommentInfos)
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "$fragmentRefs": null,
                "displayName": "jcVandam",
                "media": Object {
                  "url": "http://perdu.com/image.jpg",
                },
                "vip": true,
              },
              "id": "comment1",
            }
          }
        />
      </div>
      <Relay(CommentBody)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": Object {
                "url": "http://perdu.com/image.jpg",
              },
              "vip": true,
            },
            "id": "comment1",
          }
        }
      />
    </Comment__MediaBody>
    <Commentstyle__CommentBottom>
      <Relay(CommentVoteButtonLegacy)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": Object {
                "url": "http://perdu.com/image.jpg",
              },
              "vip": true,
            },
            "id": "comment1",
          }
        }
      />
      <Comment__AnswerButton
        onClick={[Function]}
      >
        <Icon
          color="#707070"
          name="navigationLeft"
          size={15}
        />
        <FormattedMessage
          id="global.answer"
          values={Object {}}
        />
      </Comment__AnswerButton>
      <Relay(Connect(CommentReportButton))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": Object {
                "url": "http://perdu.com/image.jpg",
              },
              "vip": true,
            },
            "id": "comment1",
          }
        }
      />
      <Relay(CommentEdit)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": Object {
                "url": "http://perdu.com/image.jpg",
              },
              "vip": true,
            },
            "id": "comment1",
          }
        }
      />
       
    </Commentstyle__CommentBottom>
    <div
      className="CommentAnswer"
    >
      <Relay(CommentAnswers)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": Object {
                "url": "http://perdu.com/image.jpg",
              },
              "vip": true,
            },
            "id": "comment1",
          }
        }
        useBodyColor={true}
      />
    </div>
  </Media>
</Connect(ComponentWithColors)>
`;

exports[`<Comment /> should render correctly not highlighted 1`] = `
<Connect(ComponentWithColors)
  as="li"
  isHighlighted={false}
  useBodyColor={true}
>
  <Relay(Connect(UserAvatarLegacy))
    size={45}
    user={
      Object {
        "$fragmentRefs": null,
        "displayName": "jcVandam",
        "media": null,
        "vip": true,
      }
    }
  />
  <Media
    className="opinion"
  >
    <Comment__MediaBody
      className="opinion__body"
      id="comment_comment2"
    >
      <div
        className="opinion__data"
        style={
          Object {
            "overflow": "visible",
          }
        }
      >
        <Relay(CommentInfos)
          comment={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "author": Object {
                "$fragmentRefs": null,
                "displayName": "jcVandam",
                "media": null,
                "vip": true,
              },
              "id": "comment2",
            }
          }
        />
      </div>
      <Relay(CommentBody)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": null,
              "vip": true,
            },
            "id": "comment2",
          }
        }
      />
    </Comment__MediaBody>
    <Commentstyle__CommentBottom>
      <Relay(CommentVoteButtonLegacy)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": null,
              "vip": true,
            },
            "id": "comment2",
          }
        }
      />
      <Comment__AnswerButton
        onClick={[Function]}
      >
        <Icon
          color="#707070"
          name="navigationLeft"
          size={15}
        />
        <FormattedMessage
          id="global.answer"
          values={Object {}}
        />
      </Comment__AnswerButton>
      <Relay(Connect(CommentReportButton))
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": null,
              "vip": true,
            },
            "id": "comment2",
          }
        }
      />
      <Relay(CommentEdit)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": null,
              "vip": true,
            },
            "id": "comment2",
          }
        }
      />
       
    </Commentstyle__CommentBottom>
    <div
      className="CommentAnswer"
    >
      <Relay(CommentAnswers)
        comment={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": null,
              "vip": true,
            },
            "id": "comment2",
          }
        }
        useBodyColor={true}
      />
      <Relay(Connect(ReduxForm))
        answerOf="comment2"
        commentable={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "author": Object {
              "$fragmentRefs": null,
              "displayName": "jcVandam",
              "media": null,
              "vip": true,
            },
            "id": "comment2",
          }
        }
      />
    </div>
  </Media>
</Connect(ComponentWithColors)>
`;
