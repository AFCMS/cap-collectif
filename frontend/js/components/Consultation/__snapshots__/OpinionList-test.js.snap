// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OpinionList /> renders correcty when not contribuable 1`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 5,
          "cursor": null,
          "orderBy": Object {
            "direction": "ASC",
            "field": "POSITIONS",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;

exports[`<OpinionList /> renders correcty with pagination disabled 1`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
        <ForwardRef(Relay(Connect(NewOpinionButton)))
          className="m-0"
          consultation={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "id": "consultation1",
              "opinionCountShownBySection": 5,
            }
          }
          label="opinion.add_new"
          section={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "color": "red",
              "contribuable": true,
              "defaultOrderBy": "positions",
              "id": "id",
              "opinions": Object {
                "totalCount": 10,
              },
              "slug": "slug",
              "url": "https://capco.dev",
            }
          }
        />
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 5,
          "cursor": null,
          "orderBy": Object {
            "direction": "ASC",
            "field": "POSITIONS",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;

exports[`<OpinionList /> renders correcty with pagination enabled 1`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
        <ForwardRef(Relay(Connect(NewOpinionButton)))
          className="m-0"
          consultation={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "id": "consultation1",
              "opinionCountShownBySection": 5,
            }
          }
          label="opinion.add_new"
          section={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "color": "red",
              "contribuable": true,
              "defaultOrderBy": "positions",
              "id": "id",
              "opinions": Object {
                "totalCount": 10,
              },
              "slug": "slug",
              "url": "https://capco.dev",
            }
          }
        />
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 50,
          "cursor": null,
          "orderBy": Object {
            "direction": "ASC",
            "field": "POSITIONS",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;

exports[`<OpinionList /> renders correcty with pagination enabled 2`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
        <ForwardRef(Relay(Connect(NewOpinionButton)))
          className="m-0"
          consultation={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "id": "consultation1",
              "opinionCountShownBySection": 5,
            }
          }
          label="opinion.add_new"
          section={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "color": "red",
              "contribuable": true,
              "defaultOrderBy": "positions",
              "id": "id",
              "opinions": Object {
                "totalCount": 10,
              },
              "slug": "slug",
              "url": "https://capco.dev",
            }
          }
        />
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 50,
          "cursor": null,
          "orderBy": Object {
            "direction": "ASC",
            "field": "RANDOM",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;

exports[`<OpinionList /> renders correcty with pagination enabled 3`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
        <ForwardRef(Relay(Connect(NewOpinionButton)))
          className="m-0"
          consultation={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "id": "consultation1",
              "opinionCountShownBySection": 5,
            }
          }
          label="opinion.add_new"
          section={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "color": "red",
              "contribuable": true,
              "defaultOrderBy": "positions",
              "id": "id",
              "opinions": Object {
                "totalCount": 10,
              },
              "slug": "slug",
              "url": "https://capco.dev",
            }
          }
        />
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 50,
          "cursor": null,
          "orderBy": Object {
            "direction": "DESC",
            "field": "PUBLISHED_AT",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;

exports[`<OpinionList /> renders correcty with pagination enabled 4`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
        <ForwardRef(Relay(Connect(NewOpinionButton)))
          className="m-0"
          consultation={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "id": "consultation1",
              "opinionCountShownBySection": 5,
            }
          }
          label="opinion.add_new"
          section={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "color": "red",
              "contribuable": true,
              "defaultOrderBy": "positions",
              "id": "id",
              "opinions": Object {
                "totalCount": 10,
              },
              "slug": "slug",
              "url": "https://capco.dev",
            }
          }
        />
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 50,
          "cursor": null,
          "orderBy": Object {
            "direction": "ASC",
            "field": "PUBLISHED_AT",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;

exports[`<OpinionList /> renders correcty with pagination enabled 5`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
        <ForwardRef(Relay(Connect(NewOpinionButton)))
          className="m-0"
          consultation={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "id": "consultation1",
              "opinionCountShownBySection": 5,
            }
          }
          label="opinion.add_new"
          section={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "color": "red",
              "contribuable": true,
              "defaultOrderBy": "positions",
              "id": "id",
              "opinions": Object {
                "totalCount": 10,
              },
              "slug": "slug",
              "url": "https://capco.dev",
            }
          }
        />
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 50,
          "cursor": null,
          "orderBy": Object {
            "direction": "DESC",
            "field": "VOTES_OK",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;

exports[`<OpinionList /> renders correcty with pagination enabled 6`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
        <ForwardRef(Relay(Connect(NewOpinionButton)))
          className="m-0"
          consultation={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "id": "consultation1",
              "opinionCountShownBySection": 5,
            }
          }
          label="opinion.add_new"
          section={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "color": "red",
              "contribuable": true,
              "defaultOrderBy": "positions",
              "id": "id",
              "opinions": Object {
                "totalCount": 10,
              },
              "slug": "slug",
              "url": "https://capco.dev",
            }
          }
        />
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 50,
          "cursor": null,
          "orderBy": Object {
            "direction": "DESC",
            "field": "VOTES",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;

exports[`<OpinionList /> renders correcty with pagination enabled 7`] = `
<Card
  className="anchor-offset"
  id="opinions--test17slug"
  style={
    Object {
      "border": 0,
    }
  }
>
  <Header
    bgColor="red"
  >
    <div
      className="opinion d-flex align-items-center justify-content-between"
    >
      <strong
        className="excerpt_dark ellipsis"
      >
        <FormattedMessage
          id="global.opinionsCount"
          values={
            Object {
              "num": 10,
            }
          }
        />
      </strong>
      <div
        className="d-flex align-items-center justify-content-between"
      >
        <form
          className="form-inline"
        >
          <select
            aria-label="global.filter"
            className="form-control"
            defaultValue="positions"
            id="opinion-ordering-selector"
            onBlur={[Function]}
            onChange={[Function]}
          >
            <option
              value="positions"
            >
              opinion.sort.positions
            </option>
            <option
              value="random"
            >
              global.filter_random
            </option>
            <option
              value="last"
            >
              opinion.sort.last
            </option>
            <option
              value="old"
            >
              opinion.sort.old
            </option>
            <option
              value="favorable"
            >
              opinion.sort.favorable
            </option>
            <option
              value="votes"
            >
              opinion.sort.votes
            </option>
            <option
              value="comments"
            >
              opinion.sort.comments
            </option>
          </select>
        </form>
        <ForwardRef(Relay(Connect(NewOpinionButton)))
          className="m-0"
          consultation={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "id": "consultation1",
              "opinionCountShownBySection": 5,
            }
          }
          label="opinion.add_new"
          section={
            Object {
              "$fragmentRefs": null,
              "$refType": null,
              "color": "red",
              "contribuable": true,
              "defaultOrderBy": "positions",
              "id": "id",
              "opinions": Object {
                "totalCount": 10,
              },
              "slug": "slug",
              "url": "https://capco.dev",
            }
          }
        />
      </div>
    </div>
  </Header>
  <ListGroup
    className="m-0"
  >
    <ReactRelayQueryRenderer
      environment={"RelayModernEnvironment()"}
      query={[Function]}
      render={[Function]}
      variables={
        Object {
          "count": 50,
          "cursor": null,
          "orderBy": Object {
            "direction": "DESC",
            "field": "COMMENTS",
          },
          "sectionId": "id",
        }
      }
    />
  </ListGroup>
</Card>
`;
