// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DebateStepPageVoteForm/> should renders correctly 1`] = `
<ForwardRef(MotionComponent)
  animate={
    Object {
      "opacity": 1,
    }
  }
  exit={
    Object {
      "opacity": 0,
    }
  }
  initial={
    Object {
      "opacity": 0,
    }
  }
  style={
    Object {
      "width": "100%",
    }
  }
  transition={
    Object {
      "delay": 0.75,
      "duration": 0.5,
    }
  }
>
  <ForwardRef
    alignItems="center"
    direction={
      Array [
        "column",
        "row",
      ]
    }
    fontWeight={
      Array [
        500,
      ]
    }
    justifyContent="center"
  >
    <DebateStepPageVoteForm___StyledSpan2
      aria-label="vote"
      role="img"
    >
      🗳️
    </DebateStepPageVoteForm___StyledSpan2>
    <DebateStepPageVoteForm___StyledButton2
      _css2={[Function]}
      ml={2}
      onClick={[Function]}
      variant="link"
    >
      <FormattedMessage
        id="edit.vote.against"
        values={Object {}}
      />
    </DebateStepPageVoteForm___StyledButton2>
  </ForwardRef>
  <ConditionalWrapper
    when={false}
    wrapper={[Function]}
  >
    <DebateStepPageVoteForm___StyledCard
      bg="white"
      borderRadius="8px"
      boxShadow="0px 10px 50px 0px rgba(0, 0, 0, 0.15)"
      mt={8}
      p={6}
      pb={6}
      width="100%"
    >
      <DebateStepPageVoteForm__Form
        id="debate-argument-form"
      >
        <Field
          autoComplete="off"
          component={[Function]}
          disabled={false}
          id="body"
          minLength="1"
          name="body"
          placeholder="why-are-you-against"
          type="textarea"
        />
        <ForwardRef
          justifyContent="flex-end"
        >
          <Button
            mr={7}
            onClick={[Function]}
            type="button"
            variant="link"
            variantColor="primary"
          >
            <FormattedMessage
              id="global.cancel"
              values={Object {}}
            />
          </Button>
          <Button
            onClick={[Function]}
            type="button"
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            <FormattedMessage
              id="argument.publish.mine"
              values={Object {}}
            />
          </Button>
        </ForwardRef>
      </DebateStepPageVoteForm__Form>
    </DebateStepPageVoteForm___StyledCard>
  </ConditionalWrapper>
</ForwardRef(MotionComponent)>
`;

exports[`<DebateStepPageVoteForm/> should renders correctly on mobile 1`] = `
<ForwardRef(MotionComponent)
  animate={
    Object {
      "opacity": 1,
    }
  }
  exit={
    Object {
      "opacity": 0,
    }
  }
  initial={
    Object {
      "opacity": 1,
    }
  }
  style={
    Object {
      "width": "100%",
    }
  }
  transition={
    Object {
      "delay": 0.75,
      "duration": 0.5,
    }
  }
>
  <ForwardRef
    alignItems="center"
    direction={
      Array [
        "column",
        "row",
      ]
    }
    fontWeight={
      Array [
        500,
      ]
    }
    justifyContent="center"
  >
    <DebateStepPageVoteForm___StyledButton
      _css={[Function]}
      mb={
        Array [
          3,
          0,
        ]
      }
      ml={
        Array [
          0,
          2,
        ]
      }
      onClick={[Function]}
      variant="link"
    >
      <FormattedMessage
        id="edit.vote.against"
        values={Object {}}
      />
    </DebateStepPageVoteForm___StyledButton>
    <Text
      textAlign="center"
    >
      <DebateStepPageVoteForm___StyledSpan
        aria-label="vote"
        role="img"
      >
        🗳️
      </DebateStepPageVoteForm___StyledSpan>
    </Text>
  </ForwardRef>
  <Connect(MobilePublishArgumentModal)
    onClose={[Function]}
    onSubmit={[Function]}
    show={false}
    title="why-are-you-against"
  />
  <Button
    justifyContent="center"
    mt={3}
    onClick={[Function]}
    variant="primary"
    variantSize="big"
    width="100%"
  >
    publish-argument
  </Button>
</ForwardRef(MotionComponent)>
`;

exports[`<DebateStepPageVoteForm/> should renders correctly when argumented 1`] = `
<ForwardRef(MotionComponent)
  animate={
    Object {
      "opacity": 1,
    }
  }
  exit={
    Object {
      "opacity": 0,
    }
  }
  initial={
    Object {
      "opacity": 0,
    }
  }
  style={
    Object {
      "width": "100%",
    }
  }
  transition={
    Object {
      "delay": 0.75,
      "duration": 0.5,
    }
  }
>
  <ForwardRef
    alignItems="center"
    direction={
      Array [
        "column",
        "row",
      ]
    }
    fontWeight={
      Array [
        500,
      ]
    }
    justifyContent="center"
  >
    <DebateStepPageVoteForm___StyledSpan2
      aria-label="vote"
      role="img"
    >
      🎉
    </DebateStepPageVoteForm___StyledSpan2>
    <FormattedHTMLMessage
      id="thanks-for-debate-richer"
      tagName="span"
      values={Object {}}
    />
    <DebateStepPageVoteForm___StyledButton2
      _css2={[Function]}
      ml={2}
      onClick={[Function]}
      variant="link"
    >
      <FormattedMessage
        id="edit.vote.against"
        values={Object {}}
      />
    </DebateStepPageVoteForm___StyledButton2>
  </ForwardRef>
  <ForwardRef
    flexDirection="row"
    justify="center"
    mt={3}
    spacing={2}
  >
    <a
      className="twitter-share-button"
      data-show-count="false"
      href="https://twitter.com/share?ref_src=twsrc%5Etfw"
    >
      Tweet
    </a>
    <Tooltip
      label="copied-link"
      trigger={
        Array [
          "click",
        ]
      }
    >
      <Button
        backgroundColor="gray.500"
        color="white"
        fontSize={11}
        height={5}
        onClick={[Function]}
        p="4px 8px"
      >
        <Icon
          mr="1"
          name="HYPERLINK"
          size="sm"
        />
        <FormattedMessage
          id="global.link"
          values={Object {}}
        />
      </Button>
    </Tooltip>
  </ForwardRef>
  <ConditionalWrapper
    when={false}
    wrapper={[Function]}
  >
    <DebateStepPageVoteForm___StyledCard
      bg="white"
      borderRadius="8px"
      boxShadow="0px 10px 50px 0px rgba(0, 0, 0, 0.15)"
      mt={8}
      p={6}
      pb={6}
      width="100%"
    >
      <DebateStepPageVoteForm__Form
        id="debate-argument-form"
      >
        <Field
          autoComplete="off"
          component={[Function]}
          disabled={false}
          id="body"
          minLength="1"
          name="body"
          placeholder="why-are-you-against"
          type="textarea"
        />
        <ForwardRef
          justifyContent="flex-end"
        >
          <Button
            mr={7}
            onClick={[Function]}
            type="button"
            variant="link"
            variantColor="primary"
          >
            <FormattedMessage
              id="global.cancel"
              values={Object {}}
            />
          </Button>
          <Button
            onClick={[Function]}
            type="button"
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            <FormattedMessage
              id="argument.publish.mine"
              values={Object {}}
            />
          </Button>
        </ForwardRef>
      </DebateStepPageVoteForm__Form>
    </DebateStepPageVoteForm___StyledCard>
  </ConditionalWrapper>
</ForwardRef(MotionComponent)>
`;

exports[`<DebateStepPageVoteForm/> should renders correctly when argumented on mobile 1`] = `
<ForwardRef(MotionComponent)
  animate={
    Object {
      "opacity": 1,
    }
  }
  exit={
    Object {
      "opacity": 0,
    }
  }
  initial={
    Object {
      "opacity": 1,
    }
  }
  style={
    Object {
      "width": "100%",
    }
  }
  transition={
    Object {
      "delay": 0.75,
      "duration": 0.5,
    }
  }
>
  <ForwardRef
    alignItems="center"
    direction={
      Array [
        "column",
        "row",
      ]
    }
    fontWeight={
      Array [
        500,
      ]
    }
    justifyContent="center"
  >
    <DebateStepPageVoteForm___StyledButton
      _css={[Function]}
      mb={
        Array [
          3,
          0,
        ]
      }
      ml={
        Array [
          0,
          2,
        ]
      }
      onClick={[Function]}
      variant="link"
    >
      <FormattedMessage
        id="edit.vote.against"
        values={Object {}}
      />
    </DebateStepPageVoteForm___StyledButton>
    <Text
      textAlign="center"
    >
      <DebateStepPageVoteForm___StyledSpan
        aria-label="vote"
        role="img"
      >
        🎉
      </DebateStepPageVoteForm___StyledSpan>
      <FormattedHTMLMessage
        id="thanks-for-debate-richer"
        tagName="span"
        values={Object {}}
      />
    </Text>
  </ForwardRef>
  <ForwardRef
    flexDirection="row"
    justify="center"
    mt={3}
    spacing={2}
  >
    <a
      className="twitter-share-button"
      data-show-count="false"
      href="https://twitter.com/share?ref_src=twsrc%5Etfw"
    >
      Tweet
    </a>
    <Tooltip
      label="copied-link"
      trigger={
        Array [
          "click",
        ]
      }
    >
      <Button
        backgroundColor="gray.500"
        color="white"
        fontSize={11}
        height={5}
        onClick={[Function]}
        p="4px 8px"
      >
        <Icon
          mr="1"
          name="HYPERLINK"
          size="sm"
        />
        <FormattedMessage
          id="global.link"
          values={Object {}}
        />
      </Button>
    </Tooltip>
  </ForwardRef>
  <Connect(MobilePublishArgumentModal)
    onClose={[Function]}
    onSubmit={[Function]}
    show={false}
    title="why-are-you-against"
  />
  <Button
    justifyContent="center"
    mt={3}
    onClick={[Function]}
    variant="primary"
    variantSize="big"
    width="100%"
  >
    publish-argument
  </Button>
</ForwardRef(MotionComponent)>
`;

exports[`<DebateStepPageVoteForm/> should renders correctly when voted 1`] = `
<ForwardRef(MotionComponent)
  animate={
    Object {
      "opacity": 1,
    }
  }
  exit={
    Object {
      "opacity": 0,
    }
  }
  initial={
    Object {
      "opacity": 0,
    }
  }
  style={
    Object {
      "width": "100%",
    }
  }
  transition={
    Object {
      "delay": 0.75,
      "duration": 0.5,
    }
  }
>
  <ForwardRef
    alignItems="center"
    direction={
      Array [
        "column",
        "row",
      ]
    }
    fontWeight={
      Array [
        500,
      ]
    }
    justifyContent="center"
  >
    <DebateStepPageVoteForm___StyledSpan2
      aria-label="vote"
      role="img"
    >
      🗳️
    </DebateStepPageVoteForm___StyledSpan2>
    <FormattedHTMLMessage
      id="thanks-for-your-vote"
      tagName="span"
      values={Object {}}
    />
    <DebateStepPageVoteForm___StyledButton2
      _css2={[Function]}
      ml={2}
      onClick={[Function]}
      variant="link"
    >
      <FormattedMessage
        id="edit.vote.against"
        values={Object {}}
      />
    </DebateStepPageVoteForm___StyledButton2>
  </ForwardRef>
  <ConditionalWrapper
    when={false}
    wrapper={[Function]}
  >
    <DebateStepPageVoteForm___StyledCard
      bg="white"
      borderRadius="8px"
      boxShadow="0px 10px 50px 0px rgba(0, 0, 0, 0.15)"
      mt={8}
      p={6}
      pb={6}
      width="100%"
    >
      <DebateStepPageVoteForm__Form
        id="debate-argument-form"
      >
        <Field
          autoComplete="off"
          component={[Function]}
          disabled={false}
          id="body"
          minLength="1"
          name="body"
          placeholder="why-are-you-against"
          type="textarea"
        />
        <ForwardRef
          justifyContent="flex-end"
        >
          <Button
            mr={7}
            onClick={[Function]}
            type="button"
            variant="link"
            variantColor="primary"
          >
            <FormattedMessage
              id="global.cancel"
              values={Object {}}
            />
          </Button>
          <Button
            onClick={[Function]}
            type="button"
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            <FormattedMessage
              id="argument.publish.mine"
              values={Object {}}
            />
          </Button>
        </ForwardRef>
      </DebateStepPageVoteForm__Form>
    </DebateStepPageVoteForm___StyledCard>
  </ConditionalWrapper>
</ForwardRef(MotionComponent)>
`;

exports[`<DebateStepPageVoteForm/> should renders correctly when voted on mobile 1`] = `
<ForwardRef(MotionComponent)
  animate={
    Object {
      "opacity": 1,
    }
  }
  exit={
    Object {
      "opacity": 0,
    }
  }
  initial={
    Object {
      "opacity": 1,
    }
  }
  style={
    Object {
      "width": "100%",
    }
  }
  transition={
    Object {
      "delay": 0.75,
      "duration": 0.5,
    }
  }
>
  <ForwardRef
    alignItems="center"
    direction={
      Array [
        "column",
        "row",
      ]
    }
    fontWeight={
      Array [
        500,
      ]
    }
    justifyContent="center"
  >
    <DebateStepPageVoteForm___StyledButton
      _css={[Function]}
      mb={
        Array [
          3,
          0,
        ]
      }
      ml={
        Array [
          0,
          2,
        ]
      }
      onClick={[Function]}
      variant="link"
    >
      <FormattedMessage
        id="edit.vote.against"
        values={Object {}}
      />
    </DebateStepPageVoteForm___StyledButton>
    <Text
      textAlign="center"
    >
      <DebateStepPageVoteForm___StyledSpan
        aria-label="vote"
        role="img"
      >
        🗳️
      </DebateStepPageVoteForm___StyledSpan>
      <FormattedHTMLMessage
        id="thanks-for-your-vote"
        tagName="span"
        values={Object {}}
      />
    </Text>
  </ForwardRef>
  <Connect(MobilePublishArgumentModal)
    onClose={[Function]}
    onSubmit={[Function]}
    show={false}
    title="why-are-you-against"
  />
  <Button
    justifyContent="center"
    mt={3}
    onClick={[Function]}
    variant="primary"
    variantSize="big"
    width="100%"
  >
    publish-argument
  </Button>
</ForwardRef(MotionComponent)>
`;
