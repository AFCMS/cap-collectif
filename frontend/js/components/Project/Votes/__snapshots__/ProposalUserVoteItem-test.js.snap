// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalUserVoteItem /> should render a support item 1`] = `
<ProposalsUserVotesstyle__VoteItemContainer
  id="vote-step1-proposal1"
>
  <Col
    bsClass="col"
    componentClass="div"
    md={9}
    sm={12}
    xs={12}
  >
    <div>
      <div>
        <a
          className="proposals-user-votes__title"
          href="http://capco.test/proposal"
        >
          proposal
        </a>
        <br />
        <FormattedMessage
          id="supported.date-at-time"
          values={
            Object {
              "date": <FormattedDate
                day="numeric"
                month="long"
                value={"2014-12-31T23:00:00.000Z"}
                year="numeric"
              />,
              "time": <FormattedTime
                hour="numeric"
                minute="numeric"
                value={"2014-12-31T23:00:00.000Z"}
              />,
            }
          }
        />
      </div>
    </div>
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    id="1-proposal-vote__private"
    md={2}
    sm={12}
    xs={12}
  >
    <div>
      <div
        className="toggle-group"
      >
        <Field
          component={[Function]}
          id="1-proposal-vote__private-toggle"
          label="public"
          labelSide="RIGHT"
          name="votes.1.public"
          normalize={[Function]}
          roledescription="vote-toggle-aria-roledescription"
        />
      </div>
    </div>
  </Col>
  <Col
    bsClass="col"
    className="proposal-vote__delete-container"
    componentClass="div"
    md={1}
  >
    <ProposalsUserVotesstyle__ButtonDeleteVote
      aria-label="aria.label.delete-support"
      className="proposal-vote__delete"
      disabled={false}
      id="1-proposal-vote__private-delete"
      onClick={[Function]}
      type="button"
    >
      <Icon
        color="#dc3545"
        name="trash"
        size={16}
      />
    </ProposalsUserVotesstyle__ButtonDeleteVote>
    <Overlay
      animation={[Function]}
      onHide={[Function]}
      placement="bottom"
      rootClose={true}
      show={false}
      target={null}
      trigger="click"
    >
      <CapcoPopover
        id="popover-positioned-right"
      >
        <i
          className="cap cap-attention icon--red"
        />
        <FormattedMessage
          id="support.confirm.delete"
          values={Object {}}
        />
        <div
          className="mt-10 d-flex justify-content-end"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="mr-10"
            disabled={false}
            onClick={[Function]}
          >
            <FormattedMessage
              id="global.no"
              values={Object {}}
            />
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="danger"
            className="proposal-vote__delete-confirm"
            disabled={false}
            onClick={[Function]}
          >
            <FormattedMessage
              id="btn-delete"
              values={Object {}}
            />
          </Button>
        </div>
      </CapcoPopover>
    </Overlay>
  </Col>
</ProposalsUserVotesstyle__VoteItemContainer>
`;

exports[`<ProposalUserVoteItem /> should render a support item without createdAt 1`] = `
<ProposalsUserVotesstyle__VoteItemContainer
  id="vote-step1-proposal1"
>
  <Col
    bsClass="col"
    componentClass="div"
    md={9}
    sm={12}
    xs={12}
  >
    <div>
      <div>
        <a
          className="proposals-user-votes__title"
          href="http://capco.test/proposal"
        >
          proposal
        </a>
        <br />
        <FormattedMessage
          id="notification.subject.new-support"
          values={Object {}}
        />
      </div>
    </div>
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    id="1-proposal-vote__private"
    md={2}
    sm={12}
    xs={12}
  >
    <div>
      <div
        className="toggle-group"
      >
        <Field
          component={[Function]}
          id="1-proposal-vote__private-toggle"
          label="public"
          labelSide="RIGHT"
          name="votes.1.public"
          normalize={[Function]}
          roledescription="vote-toggle-aria-roledescription"
        />
      </div>
    </div>
  </Col>
  <Col
    bsClass="col"
    className="proposal-vote__delete-container"
    componentClass="div"
    md={1}
  >
    <ProposalsUserVotesstyle__ButtonDeleteVote
      aria-label="aria.label.delete-support"
      className="proposal-vote__delete"
      disabled={false}
      id="1-proposal-vote__private-delete"
      onClick={[Function]}
      type="button"
    >
      <Icon
        color="#dc3545"
        name="trash"
        size={16}
      />
    </ProposalsUserVotesstyle__ButtonDeleteVote>
    <Overlay
      animation={[Function]}
      onHide={[Function]}
      placement="bottom"
      rootClose={true}
      show={false}
      target={null}
      trigger="click"
    >
      <CapcoPopover
        id="popover-positioned-right"
      >
        <i
          className="cap cap-attention icon--red"
        />
        <FormattedMessage
          id="support.confirm.delete"
          values={Object {}}
        />
        <div
          className="mt-10 d-flex justify-content-end"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="mr-10"
            disabled={false}
            onClick={[Function]}
          >
            <FormattedMessage
              id="global.no"
              values={Object {}}
            />
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="danger"
            className="proposal-vote__delete-confirm"
            disabled={false}
            onClick={[Function]}
          >
            <FormattedMessage
              id="btn-delete"
              values={Object {}}
            />
          </Button>
        </div>
      </CapcoPopover>
    </Overlay>
  </Col>
</ProposalsUserVotesstyle__VoteItemContainer>
`;

exports[`<ProposalUserVoteItem /> should render a vote item 1`] = `
<ProposalsUserVotesstyle__VoteItemContainer
  id="vote-step1-proposal1"
>
  <Col
    bsClass="col"
    componentClass="div"
    md={9}
    sm={12}
    xs={12}
  >
    <div>
      <div>
        <a
          className="proposals-user-votes__title"
          href="http://capco.test/proposal"
        >
          proposal
        </a>
        <br />
        <FormattedMessage
          id="voted-on-date-at-time"
          values={
            Object {
              "date": <FormattedDate
                day="numeric"
                month="long"
                value={"2014-12-31T23:00:00.000Z"}
                year="numeric"
              />,
              "time": <FormattedTime
                hour="numeric"
                minute="numeric"
                value={"2014-12-31T23:00:00.000Z"}
              />,
            }
          }
        />
      </div>
    </div>
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    id="1-proposal-vote__private"
    md={2}
    sm={12}
    xs={12}
  >
    <div>
      <div
        className="toggle-group"
      >
        <Field
          component={[Function]}
          id="1-proposal-vote__private-toggle"
          label="public"
          labelSide="RIGHT"
          name="votes.1.public"
          normalize={[Function]}
          roledescription="vote-toggle-aria-roledescription"
        />
      </div>
    </div>
  </Col>
  <Col
    bsClass="col"
    className="proposal-vote__delete-container"
    componentClass="div"
    md={1}
  >
    <ProposalsUserVotesstyle__ButtonDeleteVote
      aria-label="aria-label-delete-vote"
      className="proposal-vote__delete"
      disabled={false}
      id="1-proposal-vote__private-delete"
      onClick={[Function]}
      type="button"
    >
      <Icon
        color="#dc3545"
        name="trash"
        size={16}
      />
    </ProposalsUserVotesstyle__ButtonDeleteVote>
    <Overlay
      animation={[Function]}
      onHide={[Function]}
      placement="bottom"
      rootClose={true}
      show={false}
      target={null}
      trigger="click"
    >
      <CapcoPopover
        id="popover-positioned-right"
      >
        <i
          className="cap cap-attention icon--red"
        />
        <FormattedMessage
          id="are-you-sure-you-want-to-delete-this-vote"
          values={Object {}}
        />
        <div
          className="mt-10 d-flex justify-content-end"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="mr-10"
            disabled={false}
            onClick={[Function]}
          >
            <FormattedMessage
              id="global.no"
              values={Object {}}
            />
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="danger"
            className="proposal-vote__delete-confirm"
            disabled={false}
            onClick={[Function]}
          >
            <FormattedMessage
              id="btn-delete"
              values={Object {}}
            />
          </Button>
        </div>
      </CapcoPopover>
    </Overlay>
  </Col>
</ProposalsUserVotesstyle__VoteItemContainer>
`;
