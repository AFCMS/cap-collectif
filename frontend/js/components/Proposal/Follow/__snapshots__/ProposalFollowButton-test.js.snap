// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalFollowButton /> should render a button to follow a proposal when viewer is not following. 1`] = `
<Connect(NewLoginOverlay)>
  <button
    className="btn btn-default proposal__button__follow"
    id="proposal-follow-btn-proposal1"
    onClick={[Function]}
    type="button"
  >
    <i
      className="cap cap-rss mr-5"
    />
    <FormattedMessage
      id="follow"
      values={Object {}}
    />
  </button>
</Connect(NewLoginOverlay)>
`;

exports[`<ProposalFollowButton /> should render a button to unfollow a proposal when viewer is following. 1`] = `
<Connect(NewLoginOverlay)>
  <Menu
    disclosure={
      <Button
        className=" btn btn-default dropdown-button custom-dropdown-button proposal__button__follow_options"
        id="proposal-follow-btn-proposal1"
        rightIcon="ARROW_DOWN_O"
        style={
          Object {
            "borderColor": "#333",
            "color": "#333",
          }
        }
        variant="secondary"
        variantColor="hierarchy"
      >
        <FormattedMessage
          id="following"
          values={Object {}}
        />
      </Button>
    }
    placement="bottom"
  >
    <Menu.List
      maxHeight="unset"
      overflow="visible"
    >
      <Menu.OptionGroup
        as="div"
        onChange={[Function]}
        title={
          <Flex
            style={
              Object {
                "marginBottom": "unset",
              }
            }
          >
            <Heading
              as="h5"
            >
              <FormattedMessage
                id="to-be-notified-by-email"
                values={Object {}}
              />
            </Heading>
            <Popover
              disclosure={
                <span
                  className="cap-information ml-30"
                />
              }
              placement="top"
            >
              <Popover.Body>
                <FormattedMessage
                  id="you-will-receive-a-summary-of-your-notifications-once-a-day"
                  values={Object {}}
                />
              </Popover.Body>
            </Popover>
          </Flex>
        }
        type="radio"
        value="MINIMAL"
      >
        <Menu.OptionItem
          as="a"
          className="proposal__follow__minimal"
          href="#"
          id="proposal-follow-btn-minimal-proposal1"
          name="minimal"
          value="MINIMAL"
        >
          <Flex
            direction="column"
          >
            <b>
              <FormattedMessage
                id="essential"
                values={Object {}}
              />
            </b>
            <FormattedMessage
              id="updates-and-news"
              values={Object {}}
            />
          </Flex>
        </Menu.OptionItem>
        <Menu.OptionItem
          as="a"
          className="proposal__follow__essential"
          href="#"
          id="proposal-follow-btn-essential-proposal1"
          name="essential"
          value="ESSENTIAL"
        >
          <Flex
            direction="column"
          >
            <b>
              <FormattedMessage
                id="intermediate"
                values={Object {}}
              />
            </b>
            <FormattedMessage
              id="updates-news-and-new-contributions"
              values={Object {}}
            />
          </Flex>
        </Menu.OptionItem>
        <Menu.OptionItem
          as="a"
          className="proposal__follow__all"
          href="#"
          id="proposal-follow-btn-all-proposal1"
          name="all"
          value="ALL"
        >
          <Flex
            direction="column"
          >
            <b>
              <FormattedMessage
                id="complete"
                values={Object {}}
              />
            </b>
            <FormattedMessage
              id="updates-news-new-contributions-votes-and-subscriptions"
              values={Object {}}
            />
          </Flex>
        </Menu.OptionItem>
      </Menu.OptionGroup>
      <Menu.Item
        as="a"
        className="proposal__unfollow"
        href="#"
        id="proposal-unfollow-btn-proposal1"
        onClick={[Function]}
      >
        <FormattedMessage
          id="unfollow"
          values={Object {}}
        />
         
      </Menu.Item>
    </Menu.List>
  </Menu>
</Connect(NewLoginOverlay)>
`;

exports[`<ProposalFollowButton /> should render correctly when not authenticated 1`] = `
<Button
  className="btn btn-default proposal__button__follow"
  disabled={true}
  id="proposal-follow-btn-placeholder"
>
  <i
    className="cap cap-rss mr-5"
  />
  <FormattedMessage
    id="follow"
    values={Object {}}
  />
</Button>
`;
