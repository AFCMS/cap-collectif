// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalForm /> should render a create ESTABLISHMENT form  1`] = `
<form
  id="proposal-form"
>
  <WYSIWYGRender
    className="mb-15"
    value="Description 1"
  />
  <Field
    addonAfter={
      <Glyphicon
        bsClass="glyphicon"
        className=""
        glyph="refresh"
      />
    }
    autoComplete="off"
    component={[Function]}
    help="Title help"
    id="proposal_title"
    label={
      <FormattedMessage
        id="establishment-name"
        values={Object {}}
      />
    }
    name="title"
    type="text"
  />
  <Collapse
    appear={false}
    dimension="height"
    getDimensionValue={[Function]}
    in={false}
    mountOnEnter={false}
    timeout={300}
    unmountOnExit={false}
  >
    <Uncontrolled(Panel)>
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <PanelTitle
          bsClass="panel"
          componentClass="div"
        >
          <FormattedMessage
            id="establishment-suggest_header"
            values={
              Object {
                "matches": 0,
                "terms": 2,
              }
            }
          />
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="pull-right"
            disabled={false}
            onClick={[Function]}
            style={
              Object {
                "marginTop": -5,
              }
            }
          >
            <FormattedMessage
              id="global.close"
              values={Object {}}
            />
          </Button>
        </PanelTitle>
      </PanelHeading>
      <ListGroup
        bsClass="list-group"
      />
    </Uncontrolled(Panel)>
  </Collapse>
  <Field
    autoComplete="off"
    component={[Function]}
    help="Summary help"
    id="global.summary"
    label={
      <span>
        <FormattedMessage
          id="global.summary"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    maxLength="140"
    minLength="2"
    name="summary"
    type="textarea"
  />
  <Field
    component={[Function]}
    help="Theme help"
    id="global.theme"
    label={
      <span>
        <FormattedMessage
          id="global.theme"
          values={Object {}}
        />
      </span>
    }
    name="theme"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.theme"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="theme1"
      value="theme1"
    >
      Theme 1
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Category help"
    id="global.category"
    label={
      <span>
        <FormattedMessage
          id="global.category"
          values={Object {}}
        />
      </span>
    }
    name="category"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.category"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="category1"
      value="category1"
    >
      Category 1
    </option>
    <option
      key="category2"
      value="category2"
    >
      Category 2
    </option>
  </Field>
  <Field
    addressProps={
      Object {
        "getAddress": [Function],
      }
    }
    component={[Function]}
    formName="proposal-form"
    help="Address help"
    id="proposal_address"
    label={
      <FormattedMessage
        id="proposal_form.address"
        values={Object {}}
      />
    }
    name="addressText"
    placeholder="proposal.map.form.placeholder"
    type="address"
  />
  <Field
    component={[Function]}
    help="District help"
    id="proposal_district"
    label={
      <span>
        <FormattedMessage
          id="proposal.district"
          values={Object {}}
        />
      </span>
    }
    name="district"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.district"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="district1"
      value="district1"
    >
      District 1
    </option>
    <option
      key="district2"
      value="district2"
    >
      District 2
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Description help"
    id="proposal_body"
    label={
      <span>
        <FormattedMessage
          id="proposal.body"
          values={Object {}}
        />
      </span>
    }
    name="body"
    type="editor"
  />
  <FieldArray
    change={[MockFunction]}
    component={[Function]}
    dispatch={[MockFunction]}
    form="formName"
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    memoize={[Function]}
    name="responses"
    questions={
      Array [
        Object {
          "__typename": "SimpleQuestion",
          "alwaysJumpDestinationQuestion": null,
          "choices": Object {
            "edges": Array [],
            "pageInfo": Object {
              "hasNextPage": false,
            },
            "totalCount": 0,
          },
          "description": null,
          "destinationJumps": Array [],
          "helpText": "Question 1",
          "hidden": false,
          "id": "question1",
          "isOtherAllowed": false,
          "isRangeBetween": true,
          "jumps": Array [],
          "level": null,
          "number": 1,
          "position": 1,
          "private": true,
          "rangeMax": 10,
          "rangeMin": 0,
          "required": true,
          "title": "Lol",
          "type": "text",
          "validationRule": null,
        },
      ]
    }
    responses={Array []}
  />
  <Field
    component={[Function]}
    help="Illustration help"
    id="proposal_media"
    label={
      <span>
        <FormattedMessage
          id="proposal.media"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    name="media"
    type="image"
  />
  <ProposalForm__ExternaLinks
    backgroundColor="#ffffff"
    paddingY={8}
  >
    <Text
      as="h3"
      color="#272B30"
      fontSize="14px"
      fontWeight="600"
      lineHeight="24px"
      mb={6}
    >
      <FormattedMessage
        id="your-external-links"
        values={Object {}}
      />
    </Text>
    <Field
      component={[Function]}
      id="proposal_wep_page"
      label={
        <FormattedMessage
          id="form.label_website"
          values={Object {}}
        />
      }
      name="webPageUrl"
      placeholder="your-url"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_twitter"
      label={
        <FormattedMessage
          id="share.twitter"
          values={Object {}}
        />
      }
      name="twitterUrl"
      placeholder="twitter.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_facebook"
      label={
        <FormattedMessage
          id="share.facebook"
          values={Object {}}
        />
      }
      name="facebookUrl"
      placeholder="facebook.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_instagram"
      label={
        <FormattedMessage
          id="instagram"
          values={Object {}}
        />
      }
      name="instagramUrl"
      placeholder="instagram.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_linkedin"
      label={
        <FormattedMessage
          id="share.linkedin"
          values={Object {}}
        />
      }
      name="linkedInUrl"
      placeholder="linkedin.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_youtube"
      label={
        <FormattedMessage
          id="youtube"
          values={Object {}}
        />
      }
      name="youtubeUrl"
      placeholder="youtube.com"
      type="text"
    />
  </ProposalForm__ExternaLinks>
  <FormattedHTMLMessage
    id="configure-my-tipsmeee"
    tagName="p"
    values={Object {}}
  />
  <ProposalForm__TipsmeeeFormContainer>
    <figure>
      <img
        alt="tipsmeee logo"
        src="/svg/tipsmeee.svg"
      />
    </figure>
    <FormattedHTMLMessage
      id="tipsmeee-body"
      tagName="p"
      values={Object {}}
    />
    <p>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="default"
        disabled={false}
        href="https://tipsmeee.com/login/capco/user"
        target="_blank"
        type="button"
      >
        <FormattedMessage
          id="create-tipsmeee"
          values={Object {}}
        />
      </Button>
    </p>
    <Field
      component={[Function]}
      disabled={true}
      id="proposal_tipsmeee"
      label={
        <span>
          <FormattedMessage
            id="proposal.tipsMeee"
            values={Object {}}
          />
          <span
            className="excerpt"
          >
             
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </span>
        </span>
      }
      name="tipsmeeeId"
      placeholder="this is tipsmeee"
      type="text"
    />
    <FormattedMessage
      id="tipsmeee-code-help"
      tagName="p"
      values={Object {}}
    />
  </ProposalForm__TipsmeeeFormContainer>
</form>
`;

exports[`<ProposalForm /> should render a create Proposal form 1`] = `
<form
  id="proposal-form"
>
  <WYSIWYGRender
    className="mb-15"
    value="Description 1"
  />
  <Field
    addonAfter={
      <Glyphicon
        bsClass="glyphicon"
        className=""
        glyph="refresh"
      />
    }
    autoComplete="off"
    component={[Function]}
    help="Title help"
    id="proposal_title"
    label={
      <FormattedMessage
        id="global.title"
        values={Object {}}
      />
    }
    name="title"
    type="text"
  />
  <Collapse
    appear={false}
    dimension="height"
    getDimensionValue={[Function]}
    in={false}
    mountOnEnter={false}
    timeout={300}
    unmountOnExit={false}
  >
    <Uncontrolled(Panel)>
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <PanelTitle
          bsClass="panel"
          componentClass="div"
        >
          <FormattedMessage
            id="proposal.suggest_header"
            values={
              Object {
                "matches": 0,
                "terms": 2,
              }
            }
          />
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="pull-right"
            disabled={false}
            onClick={[Function]}
            style={
              Object {
                "marginTop": -5,
              }
            }
          >
            <FormattedMessage
              id="global.close"
              values={Object {}}
            />
          </Button>
        </PanelTitle>
      </PanelHeading>
      <ListGroup
        bsClass="list-group"
      />
    </Uncontrolled(Panel)>
  </Collapse>
  <Field
    autoComplete="off"
    component={[Function]}
    help="Summary help"
    id="global.summary"
    label={
      <span>
        <FormattedMessage
          id="global.summary"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    maxLength="140"
    minLength="2"
    name="summary"
    type="textarea"
  />
  <Field
    component={[Function]}
    help="Theme help"
    id="global.theme"
    label={
      <span>
        <FormattedMessage
          id="global.theme"
          values={Object {}}
        />
      </span>
    }
    name="theme"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.theme"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="theme1"
      value="theme1"
    >
      Theme 1
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Category help"
    id="global.category"
    label={
      <span>
        <FormattedMessage
          id="global.category"
          values={Object {}}
        />
      </span>
    }
    name="category"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.category"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="category1"
      value="category1"
    >
      Category 1
    </option>
    <option
      key="category2"
      value="category2"
    >
      Category 2
    </option>
  </Field>
  <Field
    addressProps={
      Object {
        "getAddress": [Function],
      }
    }
    component={[Function]}
    formName="proposal-form"
    help="Address help"
    id="proposal_address"
    label={
      <FormattedMessage
        id="proposal_form.address"
        values={Object {}}
      />
    }
    name="addressText"
    placeholder="proposal.map.form.placeholder"
    type="address"
  />
  <Field
    component={[Function]}
    help="District help"
    id="proposal_district"
    label={
      <span>
        <FormattedMessage
          id="proposal.district"
          values={Object {}}
        />
      </span>
    }
    name="district"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.district"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="district1"
      value="district1"
    >
      District 1
    </option>
    <option
      key="district2"
      value="district2"
    >
      District 2
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Description help"
    id="proposal_body"
    label={
      <span>
        <FormattedMessage
          id="proposal.body"
          values={Object {}}
        />
      </span>
    }
    name="body"
    type="editor"
  />
  <FieldArray
    change={[MockFunction]}
    component={[Function]}
    dispatch={[MockFunction]}
    form="formName"
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    memoize={[Function]}
    name="responses"
    questions={
      Array [
        Object {
          "__typename": "SimpleQuestion",
          "alwaysJumpDestinationQuestion": null,
          "choices": Object {
            "edges": Array [],
            "pageInfo": Object {
              "hasNextPage": false,
            },
            "totalCount": 0,
          },
          "description": null,
          "destinationJumps": Array [],
          "helpText": "Question 1",
          "hidden": false,
          "id": "question1",
          "isOtherAllowed": false,
          "isRangeBetween": true,
          "jumps": Array [],
          "level": null,
          "number": 1,
          "position": 1,
          "private": true,
          "rangeMax": 10,
          "rangeMin": 0,
          "required": true,
          "title": "Lol",
          "type": "text",
          "validationRule": null,
        },
      ]
    }
    responses={Array []}
  />
  <Field
    component={[Function]}
    help="Illustration help"
    id="proposal_media"
    label={
      <span>
        <FormattedMessage
          id="proposal.media"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    name="media"
    type="image"
  />
  <ProposalForm__ExternaLinks
    backgroundColor="#ffffff"
    paddingY={8}
  >
    <Text
      as="h3"
      color="#272B30"
      fontSize="14px"
      fontWeight="600"
      lineHeight="24px"
      mb={6}
    >
      <FormattedMessage
        id="your-external-links"
        values={Object {}}
      />
    </Text>
    <Field
      component={[Function]}
      id="proposal_wep_page"
      label={
        <FormattedMessage
          id="form.label_website"
          values={Object {}}
        />
      }
      name="webPageUrl"
      placeholder="your-url"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_twitter"
      label={
        <FormattedMessage
          id="share.twitter"
          values={Object {}}
        />
      }
      name="twitterUrl"
      placeholder="twitter.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_facebook"
      label={
        <FormattedMessage
          id="share.facebook"
          values={Object {}}
        />
      }
      name="facebookUrl"
      placeholder="facebook.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_instagram"
      label={
        <FormattedMessage
          id="instagram"
          values={Object {}}
        />
      }
      name="instagramUrl"
      placeholder="instagram.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_linkedin"
      label={
        <FormattedMessage
          id="share.linkedin"
          values={Object {}}
        />
      }
      name="linkedInUrl"
      placeholder="linkedin.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_youtube"
      label={
        <FormattedMessage
          id="youtube"
          values={Object {}}
        />
      }
      name="youtubeUrl"
      placeholder="youtube.com"
      type="text"
    />
  </ProposalForm__ExternaLinks>
</form>
`;

exports[`<ProposalForm /> should render a create Question form 1`] = `
<form
  id="proposal-form"
>
  <WYSIWYGRender
    className="mb-15"
    value="Description 1"
  />
  <Field
    addonAfter={
      <Glyphicon
        bsClass="glyphicon"
        className=""
        glyph="refresh"
      />
    }
    autoComplete="off"
    component={[Function]}
    help="Title help"
    id="proposal_title"
    label={
      <FormattedMessage
        id="title"
        values={Object {}}
      />
    }
    name="title"
    type="text"
  />
  <Collapse
    appear={false}
    dimension="height"
    getDimensionValue={[Function]}
    in={false}
    mountOnEnter={false}
    timeout={300}
    unmountOnExit={false}
  >
    <Uncontrolled(Panel)>
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <PanelTitle
          bsClass="panel"
          componentClass="div"
        >
          <FormattedMessage
            id="question.suggest_header"
            values={
              Object {
                "matches": 0,
                "terms": 2,
              }
            }
          />
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="pull-right"
            disabled={false}
            onClick={[Function]}
            style={
              Object {
                "marginTop": -5,
              }
            }
          >
            <FormattedMessage
              id="global.close"
              values={Object {}}
            />
          </Button>
        </PanelTitle>
      </PanelHeading>
      <ListGroup
        bsClass="list-group"
      />
    </Uncontrolled(Panel)>
  </Collapse>
  <Field
    autoComplete="off"
    component={[Function]}
    help="Summary help"
    id="global.summary"
    label={
      <span>
        <FormattedMessage
          id="global.summary"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    maxLength="140"
    minLength="2"
    name="summary"
    type="textarea"
  />
  <Field
    component={[Function]}
    help="Theme help"
    id="global.theme"
    label={
      <span>
        <FormattedMessage
          id="global.theme"
          values={Object {}}
        />
      </span>
    }
    name="theme"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.theme"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="theme1"
      value="theme1"
    >
      Theme 1
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Category help"
    id="global.category"
    label={
      <span>
        <FormattedMessage
          id="global.category"
          values={Object {}}
        />
      </span>
    }
    name="category"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.category"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="category1"
      value="category1"
    >
      Category 1
    </option>
    <option
      key="category2"
      value="category2"
    >
      Category 2
    </option>
  </Field>
  <Field
    addressProps={
      Object {
        "getAddress": [Function],
      }
    }
    component={[Function]}
    formName="proposal-form"
    help="Address help"
    id="proposal_address"
    label={
      <FormattedMessage
        id="proposal_form.address"
        values={Object {}}
      />
    }
    name="addressText"
    placeholder="proposal.map.form.placeholder"
    type="address"
  />
  <Field
    component={[Function]}
    help="District help"
    id="proposal_district"
    label={
      <span>
        <FormattedMessage
          id="proposal.district"
          values={Object {}}
        />
      </span>
    }
    name="district"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.district"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="district1"
      value="district1"
    >
      District 1
    </option>
    <option
      key="district2"
      value="district2"
    >
      District 2
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Description help"
    id="proposal_body"
    label={
      <span>
        <FormattedMessage
          id="proposal.body"
          values={Object {}}
        />
      </span>
    }
    name="body"
    type="editor"
  />
  <FieldArray
    change={[MockFunction]}
    component={[Function]}
    dispatch={[MockFunction]}
    form="formName"
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    memoize={[Function]}
    name="responses"
    questions={
      Array [
        Object {
          "__typename": "SimpleQuestion",
          "alwaysJumpDestinationQuestion": null,
          "choices": Object {
            "edges": Array [],
            "pageInfo": Object {
              "hasNextPage": false,
            },
            "totalCount": 0,
          },
          "description": null,
          "destinationJumps": Array [],
          "helpText": "Question 1",
          "hidden": false,
          "id": "question1",
          "isOtherAllowed": false,
          "isRangeBetween": true,
          "jumps": Array [],
          "level": null,
          "number": 1,
          "position": 1,
          "private": true,
          "rangeMax": 10,
          "rangeMin": 0,
          "required": true,
          "title": "Lol",
          "type": "text",
          "validationRule": null,
        },
      ]
    }
    responses={Array []}
  />
  <Field
    component={[Function]}
    help="Illustration help"
    id="proposal_media"
    label={
      <span>
        <FormattedMessage
          id="proposal.media"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    name="media"
    type="image"
  />
  <ProposalForm__ExternaLinks
    backgroundColor="#ffffff"
    paddingY={8}
  >
    <Text
      as="h3"
      color="#272B30"
      fontSize="14px"
      fontWeight="600"
      lineHeight="24px"
      mb={6}
    >
      <FormattedMessage
        id="your-external-links"
        values={Object {}}
      />
    </Text>
    <Field
      component={[Function]}
      id="proposal_wep_page"
      label={
        <FormattedMessage
          id="form.label_website"
          values={Object {}}
        />
      }
      name="webPageUrl"
      placeholder="your-url"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_twitter"
      label={
        <FormattedMessage
          id="share.twitter"
          values={Object {}}
        />
      }
      name="twitterUrl"
      placeholder="twitter.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_facebook"
      label={
        <FormattedMessage
          id="share.facebook"
          values={Object {}}
        />
      }
      name="facebookUrl"
      placeholder="facebook.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_instagram"
      label={
        <FormattedMessage
          id="instagram"
          values={Object {}}
        />
      }
      name="instagramUrl"
      placeholder="instagram.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_linkedin"
      label={
        <FormattedMessage
          id="share.linkedin"
          values={Object {}}
        />
      }
      name="linkedInUrl"
      placeholder="linkedin.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_youtube"
      label={
        <FormattedMessage
          id="youtube"
          values={Object {}}
        />
      }
      name="youtubeUrl"
      placeholder="youtube.com"
      type="text"
    />
  </ProposalForm__ExternaLinks>
</form>
`;

exports[`<ProposalForm /> should render a create Question form with hidden questions 1`] = `
<form
  id="proposal-form"
>
  <WYSIWYGRender
    className="mb-15"
    value="Description 1"
  />
  <Field
    addonAfter={
      <Glyphicon
        bsClass="glyphicon"
        className=""
        glyph="refresh"
      />
    }
    autoComplete="off"
    component={[Function]}
    help="Title help"
    id="proposal_title"
    label={
      <FormattedMessage
        id="title"
        values={Object {}}
      />
    }
    name="title"
    type="text"
  />
  <Collapse
    appear={false}
    dimension="height"
    getDimensionValue={[Function]}
    in={false}
    mountOnEnter={false}
    timeout={300}
    unmountOnExit={false}
  >
    <Uncontrolled(Panel)>
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <PanelTitle
          bsClass="panel"
          componentClass="div"
        >
          <FormattedMessage
            id="question.suggest_header"
            values={
              Object {
                "matches": 0,
                "terms": 2,
              }
            }
          />
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="pull-right"
            disabled={false}
            onClick={[Function]}
            style={
              Object {
                "marginTop": -5,
              }
            }
          >
            <FormattedMessage
              id="global.close"
              values={Object {}}
            />
          </Button>
        </PanelTitle>
      </PanelHeading>
      <ListGroup
        bsClass="list-group"
      />
    </Uncontrolled(Panel)>
  </Collapse>
  <Field
    autoComplete="off"
    component={[Function]}
    help="Summary help"
    id="global.summary"
    label={
      <span>
        <FormattedMessage
          id="global.summary"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    maxLength="140"
    minLength="2"
    name="summary"
    type="textarea"
  />
  <Field
    component={[Function]}
    help="Theme help"
    id="global.theme"
    label={
      <span>
        <FormattedMessage
          id="global.theme"
          values={Object {}}
        />
      </span>
    }
    name="theme"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.theme"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="theme1"
      value="theme1"
    >
      Theme 1
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Category help"
    id="global.category"
    label={
      <span>
        <FormattedMessage
          id="global.category"
          values={Object {}}
        />
      </span>
    }
    name="category"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.category"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="category1"
      value="category1"
    >
      Category 1
    </option>
    <option
      key="category2"
      value="category2"
    >
      Category 2
    </option>
  </Field>
  <Field
    addressProps={
      Object {
        "getAddress": [Function],
      }
    }
    component={[Function]}
    formName="proposal-form"
    help="Address help"
    id="proposal_address"
    label={
      <FormattedMessage
        id="proposal_form.address"
        values={Object {}}
      />
    }
    name="addressText"
    placeholder="proposal.map.form.placeholder"
    type="address"
  />
  <Field
    component={[Function]}
    help="District help"
    id="proposal_district"
    label={
      <span>
        <FormattedMessage
          id="proposal.district"
          values={Object {}}
        />
      </span>
    }
    name="district"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.district"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="district1"
      value="district1"
    >
      District 1
    </option>
    <option
      key="district2"
      value="district2"
    >
      District 2
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Description help"
    id="proposal_body"
    label={
      <span>
        <FormattedMessage
          id="proposal.body"
          values={Object {}}
        />
      </span>
    }
    name="body"
    type="editor"
  />
  <FieldArray
    change={[MockFunction]}
    component={[Function]}
    dispatch={[MockFunction]}
    form="formName"
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    memoize={[Function]}
    name="responses"
    questions={
      Array [
        Object {
          "__typename": "SimpleQuestion",
          "alwaysJumpDestinationQuestion": null,
          "choices": Object {
            "edges": Array [],
            "pageInfo": Object {
              "hasNextPage": false,
            },
            "totalCount": 0,
          },
          "description": null,
          "destinationJumps": Array [],
          "helpText": "Question 1",
          "hidden": true,
          "id": "question1",
          "isOtherAllowed": false,
          "isRangeBetween": false,
          "jumps": Array [],
          "level": 0,
          "number": 1,
          "position": 1,
          "private": true,
          "rangeMax": null,
          "rangeMin": null,
          "required": true,
          "title": "Lol",
          "type": "text",
          "validationRule": null,
        },
      ]
    }
    responses={Array []}
  />
  <Field
    component={[Function]}
    help="Illustration help"
    id="proposal_media"
    label={
      <span>
        <FormattedMessage
          id="proposal.media"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    name="media"
    type="image"
  />
  <ProposalForm__ExternaLinks
    backgroundColor="#ffffff"
    paddingY={8}
  >
    <Text
      as="h3"
      color="#272B30"
      fontSize="14px"
      fontWeight="600"
      lineHeight="24px"
      mb={6}
    >
      <FormattedMessage
        id="your-external-links"
        values={Object {}}
      />
    </Text>
    <Field
      component={[Function]}
      id="proposal_wep_page"
      label={
        <FormattedMessage
          id="form.label_website"
          values={Object {}}
        />
      }
      name="webPageUrl"
      placeholder="your-url"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_twitter"
      label={
        <FormattedMessage
          id="share.twitter"
          values={Object {}}
        />
      }
      name="twitterUrl"
      placeholder="twitter.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_facebook"
      label={
        <FormattedMessage
          id="share.facebook"
          values={Object {}}
        />
      }
      name="facebookUrl"
      placeholder="facebook.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_instagram"
      label={
        <FormattedMessage
          id="instagram"
          values={Object {}}
        />
      }
      name="instagramUrl"
      placeholder="instagram.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_linkedin"
      label={
        <FormattedMessage
          id="share.linkedin"
          values={Object {}}
        />
      }
      name="linkedInUrl"
      placeholder="linkedin.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_youtube"
      label={
        <FormattedMessage
          id="youtube"
          values={Object {}}
        />
      }
      name="youtubeUrl"
      placeholder="youtube.com"
      type="text"
    />
  </ProposalForm__ExternaLinks>
</form>
`;

exports[`<ProposalForm /> should render an edit form 1`] = `
<form
  id="proposal-form"
>
  <WYSIWYGRender
    className="mb-15"
    value="Description 1"
  />
  <Field
    addonAfter={
      <Glyphicon
        bsClass="glyphicon"
        className=""
        glyph="refresh"
      />
    }
    autoComplete="off"
    component={[Function]}
    help="Title help"
    id="proposal_title"
    label={
      <FormattedMessage
        id="global.title"
        values={Object {}}
      />
    }
    name="title"
    type="text"
  />
  <Collapse
    appear={false}
    dimension="height"
    getDimensionValue={[Function]}
    in={false}
    mountOnEnter={false}
    timeout={300}
    unmountOnExit={false}
  >
    <Uncontrolled(Panel)>
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <PanelTitle
          bsClass="panel"
          componentClass="div"
        >
          <FormattedMessage
            id="proposal.suggest_header"
            values={
              Object {
                "matches": 0,
                "terms": 2,
              }
            }
          />
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="pull-right"
            disabled={false}
            onClick={[Function]}
            style={
              Object {
                "marginTop": -5,
              }
            }
          >
            <FormattedMessage
              id="global.close"
              values={Object {}}
            />
          </Button>
        </PanelTitle>
      </PanelHeading>
      <ListGroup
        bsClass="list-group"
      />
    </Uncontrolled(Panel)>
  </Collapse>
  <Field
    autoComplete="off"
    component={[Function]}
    help="Summary help"
    id="global.summary"
    label={
      <span>
        <FormattedMessage
          id="global.summary"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    maxLength="140"
    minLength="2"
    name="summary"
    type="textarea"
  />
  <Field
    component={[Function]}
    help="Theme help"
    id="global.theme"
    label={
      <span>
        <FormattedMessage
          id="global.theme"
          values={Object {}}
        />
      </span>
    }
    name="theme"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.theme"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="theme1"
      value="theme1"
    >
      Theme 1
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Category help"
    id="global.category"
    label={
      <span>
        <FormattedMessage
          id="global.category"
          values={Object {}}
        />
      </span>
    }
    name="category"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.category"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="category1"
      value="category1"
    >
      Category 1
    </option>
    <option
      key="category2"
      value="category2"
    >
      Category 2
    </option>
  </Field>
  <Field
    addressProps={
      Object {
        "getAddress": [Function],
      }
    }
    component={[Function]}
    formName="proposal-form"
    help="Address help"
    id="proposal_address"
    label={
      <FormattedMessage
        id="proposal_form.address"
        values={Object {}}
      />
    }
    name="addressText"
    placeholder="proposal.map.form.placeholder"
    type="address"
  />
  <Field
    component={[Function]}
    help="District help"
    id="proposal_district"
    label={
      <span>
        <FormattedMessage
          id="proposal.district"
          values={Object {}}
        />
      </span>
    }
    name="district"
    type="select"
  >
    <FormattedMessage
      id="proposal.select.district"
      values={Object {}}
    >
      <Component />
    </FormattedMessage>
    <option
      key="district1"
      value="district1"
    >
      District 1
    </option>
    <option
      key="district2"
      value="district2"
    >
      District 2
    </option>
  </Field>
  <Field
    component={[Function]}
    help="Description help"
    id="proposal_body"
    label={
      <span>
        <FormattedMessage
          id="proposal.body"
          values={Object {}}
        />
      </span>
    }
    name="body"
    type="editor"
  />
  <FieldArray
    change={[MockFunction]}
    component={[Function]}
    dispatch={[MockFunction]}
    form="formName"
    intl={
      Object {
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "locale": "fr-FR",
        "messages": Object {},
        "now": [Function],
      }
    }
    memoize={[Function]}
    name="responses"
    questions={
      Array [
        Object {
          "__typename": "SimpleQuestion",
          "alwaysJumpDestinationQuestion": null,
          "choices": Object {
            "edges": Array [],
            "pageInfo": Object {
              "hasNextPage": false,
            },
            "totalCount": 0,
          },
          "description": null,
          "destinationJumps": Array [],
          "helpText": "Question 1",
          "hidden": false,
          "id": "question1",
          "isOtherAllowed": false,
          "isRangeBetween": true,
          "jumps": Array [],
          "level": null,
          "number": 1,
          "position": 1,
          "private": true,
          "rangeMax": 10,
          "rangeMin": 0,
          "required": true,
          "title": "Lol",
          "type": "text",
          "validationRule": null,
        },
      ]
    }
    responses={Array []}
  />
  <Field
    component={[Function]}
    help="Illustration help"
    id="proposal_media"
    label={
      <span>
        <FormattedMessage
          id="proposal.media"
          values={Object {}}
        />
        <span
          className="excerpt"
        >
           
          <FormattedMessage
            id="global.optional"
            values={Object {}}
          />
        </span>
      </span>
    }
    name="media"
    type="image"
  />
  <ProposalForm__ExternaLinks
    backgroundColor="#ffffff"
    paddingY={8}
  >
    <Text
      as="h3"
      color="#272B30"
      fontSize="14px"
      fontWeight="600"
      lineHeight="24px"
      mb={6}
    >
      <FormattedMessage
        id="your-external-links"
        values={Object {}}
      />
    </Text>
    <Field
      component={[Function]}
      id="proposal_wep_page"
      label={
        <FormattedMessage
          id="form.label_website"
          values={Object {}}
        />
      }
      name="webPageUrl"
      placeholder="your-url"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_twitter"
      label={
        <FormattedMessage
          id="share.twitter"
          values={Object {}}
        />
      }
      name="twitterUrl"
      placeholder="twitter.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_facebook"
      label={
        <FormattedMessage
          id="share.facebook"
          values={Object {}}
        />
      }
      name="facebookUrl"
      placeholder="facebook.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_instagram"
      label={
        <FormattedMessage
          id="instagram"
          values={Object {}}
        />
      }
      name="instagramUrl"
      placeholder="instagram.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_linkedin"
      label={
        <FormattedMessage
          id="share.linkedin"
          values={Object {}}
        />
      }
      name="linkedInUrl"
      placeholder="linkedin.com"
      type="text"
    />
    <Field
      component={[Function]}
      id="proposal_youtube"
      label={
        <FormattedMessage
          id="youtube"
          values={Object {}}
        />
      }
      name="youtubeUrl"
      placeholder="youtube.com"
      type="text"
    />
  </ProposalForm__ExternaLinks>
</form>
`;
