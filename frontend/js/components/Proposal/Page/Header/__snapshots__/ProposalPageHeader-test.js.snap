// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalPageHeader /> should not render theme if proposal has none and form type is question 1`] = `
<ProposalPageHeader__Header
  id="ProposalPageHeader"
>
  <div>
    <ProposalPageHeader__HeaderActions>
      <a
        href="http://capco.test"
      >
        <Icon
          color="#0388cc"
          name="chevron-left"
          size={9}
        />
        <FormattedMessage
          id="questions-list"
          values={Object {}}
        />
      </a>
    </ProposalPageHeader__HeaderActions>
    <div
      className="default-header"
    >
      <CategoryBackground
        color="#1E88E5"
        viewBox="0 0 230 75"
      />
    </div>
    <ProposalPageHeader__Informations>
      <h1>
        Titre
      </h1>
      <ReactPlaceholder
        customPlaceholder={
          <div
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <RoundShape
              color="#e3e3e3"
              style={
                Object {
                  "height": 45,
                  "width": 45,
                }
              }
            />
            <div
              style={
                Object {
                  "marginLeft": 15,
                }
              }
            >
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 15,
                    "marginTop": 5,
                    "width": 115,
                  }
                }
              />
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 12,
                    "marginTop": 10,
                    "width": 200,
                  }
                }
              />
            </div>
          </div>
        }
        ready={true}
        showLoadingAnimation={true}
      >
        <div>
          <Relay(Connect(UserAvatar))
            user={
              Object {
                "$fragmentRefs": null,
                "username": "userAdmin",
              }
            }
          />
          <ProposalPageHeader__About>
            <div>
              userAdmin
            </div>
            <div>
              <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2014-12-31T23:00:00.000Z"}
                year="numeric"
              />
              <span>
                 • 
                <FormattedMessage
                  id="proposal_form.notifications_comment.on_update"
                  values={Object {}}
                />
              </span>
            </div>
          </ProposalPageHeader__About>
        </div>
      </ReactPlaceholder>
    </ProposalPageHeader__Informations>
    <Relay(Connect(ProposalPageHeaderButtons))
      hasVotableStep={true}
      opinionCanBeFollowed={true}
      proposal={
        Object {
          "$fragmentRefs": null,
          "$refType": null,
          "author": Object {
            "$fragmentRefs": null,
            "username": "userAdmin",
          },
          "category": null,
          "createdAt": "2015-01-01 00:00:00",
          "draft": false,
          "form": Object {
            "canContact": false,
            "isProposalForm": false,
          },
          "id": "1",
          "media": null,
          "project": Object {
            "type": Object {
              "title": "global.consultation",
            },
          },
          "publishedAt": "2015-01-01 00:00:00",
          "theme": null,
          "title": "titre",
          "updatedAt": "2015-01-05 00:00:00",
          "url": "true",
        }
      }
      step={null}
      viewer={null}
    />
  </div>
</ProposalPageHeader__Header>
`;

exports[`<ProposalPageHeader /> should render a proposal header as ProposalFrom 1`] = `
<ProposalPageHeader__Header
  id="ProposalPageHeader"
>
  <div>
    <ProposalPageHeader__HeaderActions>
      <a
        href="http://capco.test"
      >
        <Icon
          color="#0388cc"
          name="chevron-left"
          size={9}
        />
        <FormattedMessage
          id="proposal.back"
          values={Object {}}
        />
      </a>
    </ProposalPageHeader__HeaderActions>
    <ProposalPageHeader__Cover
      alt="proposal-illustration"
      src="/image.exe"
    />
    <ProposalPageHeader__Informations>
      <h1>
        Titre
      </h1>
      <ReactPlaceholder
        customPlaceholder={
          <div
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <RoundShape
              color="#e3e3e3"
              style={
                Object {
                  "height": 45,
                  "width": 45,
                }
              }
            />
            <div
              style={
                Object {
                  "marginLeft": 15,
                }
              }
            >
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 15,
                    "marginTop": 5,
                    "width": 115,
                  }
                }
              />
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 12,
                    "marginTop": 10,
                    "width": 200,
                  }
                }
              />
            </div>
          </div>
        }
        ready={true}
        showLoadingAnimation={true}
      >
        <div>
          <Relay(Connect(UserAvatar))
            user={
              Object {
                "$fragmentRefs": null,
                "username": "userAdmin",
              }
            }
          />
          <ProposalPageHeader__About>
            <div>
              userAdmin
            </div>
            <div>
              <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2014-12-31T23:00:00.000Z"}
                year="numeric"
              />
              <span>
                 • 
                <FormattedMessage
                  id="proposal_form.notifications_comment.on_update"
                  values={Object {}}
                />
              </span>
            </div>
          </ProposalPageHeader__About>
        </div>
      </ReactPlaceholder>
    </ProposalPageHeader__Informations>
    <Relay(Connect(ProposalPageHeaderButtons))
      hasVotableStep={true}
      opinionCanBeFollowed={true}
      proposal={
        Object {
          "$fragmentRefs": null,
          "$refType": null,
          "author": Object {
            "$fragmentRefs": null,
            "username": "userAdmin",
          },
          "category": Object {
            "categoryImage": Object {
              "image": Object {
                "url": "./",
              },
            },
            "color": "red",
            "icon": null,
            "name": "cat",
          },
          "createdAt": "2015-01-01 00:00:00",
          "draft": false,
          "form": Object {
            "canContact": false,
            "isProposalForm": true,
          },
          "id": "1",
          "media": Object {
            "url": "/image.exe",
          },
          "project": Object {
            "type": Object {
              "title": "global.consultation",
            },
          },
          "publishedAt": "2015-01-01 00:00:00",
          "theme": Object {
            "title": "titre du theme",
          },
          "title": "titre",
          "updatedAt": "2015-01-05 00:00:00",
          "url": "true",
        }
      }
      step={null}
      viewer={null}
    />
  </div>
</ProposalPageHeader__Header>
`;

exports[`<ProposalPageHeader /> should render a proposal header as ProposalFrom with an analysing button 1`] = `
<ProposalPageHeader__Header
  id="ProposalPageHeader"
>
  <div>
    <ProposalPageHeader__HeaderActions>
      <a
        href="http://capco.test"
      >
        <Icon
          color="#0388cc"
          name="chevron-left"
          size={9}
        />
        <FormattedMessage
          id="proposal.back"
          values={Object {}}
        />
      </a>
      <button
        id="side-analysis-open-button"
        type="button"
      >
        <Icon
          color="#0388cc"
          name="chart"
          size={16}
        />
        <FormattedMessage
          id="panel.analysis.subtitle"
          values={Object {}}
        />
      </button>
    </ProposalPageHeader__HeaderActions>
    <ProposalPageHeader__Cover
      alt="proposal-illustration"
      src="/image.exe"
    />
    <ProposalPageHeader__Informations>
      <h1>
        Titre
      </h1>
      <ReactPlaceholder
        customPlaceholder={
          <div
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <RoundShape
              color="#e3e3e3"
              style={
                Object {
                  "height": 45,
                  "width": 45,
                }
              }
            />
            <div
              style={
                Object {
                  "marginLeft": 15,
                }
              }
            >
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 15,
                    "marginTop": 5,
                    "width": 115,
                  }
                }
              />
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 12,
                    "marginTop": 10,
                    "width": 200,
                  }
                }
              />
            </div>
          </div>
        }
        ready={true}
        showLoadingAnimation={true}
      >
        <div>
          <Relay(Connect(UserAvatar))
            user={
              Object {
                "$fragmentRefs": null,
                "username": "userAdmin",
              }
            }
          />
          <ProposalPageHeader__About>
            <div>
              userAdmin
            </div>
            <div>
              <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2014-12-31T23:00:00.000Z"}
                year="numeric"
              />
              <span>
                 • 
                <FormattedMessage
                  id="proposal_form.notifications_comment.on_update"
                  values={Object {}}
                />
              </span>
            </div>
          </ProposalPageHeader__About>
        </div>
      </ReactPlaceholder>
    </ProposalPageHeader__Informations>
    <Relay(Connect(ProposalPageHeaderButtons))
      hasVotableStep={true}
      opinionCanBeFollowed={true}
      proposal={
        Object {
          "$fragmentRefs": null,
          "$refType": null,
          "author": Object {
            "$fragmentRefs": null,
            "username": "userAdmin",
          },
          "category": Object {
            "categoryImage": Object {
              "image": Object {
                "url": "./",
              },
            },
            "color": "red",
            "icon": null,
            "name": "cat",
          },
          "createdAt": "2015-01-01 00:00:00",
          "draft": false,
          "form": Object {
            "canContact": false,
            "isProposalForm": true,
          },
          "id": "1",
          "media": Object {
            "url": "/image.exe",
          },
          "project": Object {
            "type": Object {
              "title": "global.consultation",
            },
          },
          "publishedAt": "2015-01-01 00:00:00",
          "theme": Object {
            "title": "titre du theme",
          },
          "title": "titre",
          "updatedAt": "2015-01-05 00:00:00",
          "url": "true",
        }
      }
      step={null}
      viewer={null}
    />
  </div>
</ProposalPageHeader__Header>
`;

exports[`<ProposalPageHeader /> should render a proposal in draft 1`] = `
<ProposalPageHeader__Header
  id="ProposalPageHeader"
>
  <div>
    <ProposalPageHeader__HeaderActions>
      <a
        href="http://capco.test"
      >
        <Icon
          color="#0388cc"
          name="chevron-left"
          size={9}
        />
        <FormattedMessage
          id="questions-list"
          values={Object {}}
        />
      </a>
    </ProposalPageHeader__HeaderActions>
    <div
      className="default-header"
    >
      <CategoryBackground
        color="#1E88E5"
        viewBox="0 0 230 75"
      />
    </div>
    <ProposalPageHeader__Informations>
      <h1>
        Titre
      </h1>
      <ReactPlaceholder
        customPlaceholder={
          <div
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <RoundShape
              color="#e3e3e3"
              style={
                Object {
                  "height": 45,
                  "width": 45,
                }
              }
            />
            <div
              style={
                Object {
                  "marginLeft": 15,
                }
              }
            >
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 15,
                    "marginTop": 5,
                    "width": 115,
                  }
                }
              />
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 12,
                    "marginTop": 10,
                    "width": 200,
                  }
                }
              />
            </div>
          </div>
        }
        ready={true}
        showLoadingAnimation={true}
      >
        <div>
          <Relay(Connect(UserAvatar))
            user={
              Object {
                "$fragmentRefs": null,
                "username": "userAdmin",
              }
            }
          />
          <ProposalPageHeader__About>
            <div>
              userAdmin
            </div>
            <div>
              <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2014-12-31T23:00:00.000Z"}
                year="numeric"
              />
              <span>
                 • 
                <FormattedMessage
                  id="proposal_form.notifications_comment.on_update"
                  values={Object {}}
                />
              </span>
            </div>
          </ProposalPageHeader__About>
        </div>
      </ReactPlaceholder>
    </ProposalPageHeader__Informations>
    <Relay(Connect(ProposalPageHeaderButtons))
      hasVotableStep={true}
      opinionCanBeFollowed={true}
      proposal={
        Object {
          "$fragmentRefs": null,
          "$refType": null,
          "author": Object {
            "$fragmentRefs": null,
            "username": "userAdmin",
          },
          "category": null,
          "createdAt": "2015-01-01 00:00:00",
          "draft": true,
          "form": Object {
            "canContact": false,
            "isProposalForm": false,
          },
          "id": "1",
          "media": null,
          "project": Object {
            "type": Object {
              "title": "global.consultation",
            },
          },
          "publishedAt": null,
          "theme": null,
          "title": "titre",
          "updatedAt": "2015-01-05 00:10:00",
          "url": "true",
        }
      }
      step={null}
      viewer={null}
    />
  </div>
</ProposalPageHeader__Header>
`;

exports[`<ProposalPageHeader /> should render an interpellation 1`] = `
<ProposalPageHeader__Header
  id="ProposalPageHeader"
>
  <div>
    <ProposalPageHeader__HeaderActions>
      <a
        href="http://capco.test"
      >
        <Icon
          color="#0388cc"
          name="chevron-left"
          size={9}
        />
        <FormattedMessage
          id="interpellation.back"
          values={Object {}}
        />
      </a>
    </ProposalPageHeader__HeaderActions>
    <div
      className="default-header"
    >
      <CategoryBackground
        color="#1E88E5"
        viewBox="0 0 230 75"
      />
    </div>
    <ProposalPageHeader__Informations>
      <h1>
        Titre
      </h1>
      <ReactPlaceholder
        customPlaceholder={
          <div
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <RoundShape
              color="#e3e3e3"
              style={
                Object {
                  "height": 45,
                  "width": 45,
                }
              }
            />
            <div
              style={
                Object {
                  "marginLeft": 15,
                }
              }
            >
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 15,
                    "marginTop": 5,
                    "width": 115,
                  }
                }
              />
              <TextRow
                color="#e3e3e3"
                style={
                  Object {
                    "height": 12,
                    "marginTop": 10,
                    "width": 200,
                  }
                }
              />
            </div>
          </div>
        }
        ready={true}
        showLoadingAnimation={true}
      >
        <div>
          <Relay(Connect(UserAvatar))
            user={
              Object {
                "$fragmentRefs": null,
                "username": "userAdmin",
              }
            }
          />
          <ProposalPageHeader__About>
            <div>
              userAdmin
            </div>
            <div>
              <FormattedDate
                day="numeric"
                hour="numeric"
                minute="numeric"
                month="long"
                value={"2014-12-31T23:00:00.000Z"}
                year="numeric"
              />
              <span>
                 • 
                <FormattedMessage
                  id="proposal_form.notifications_comment.on_update"
                  values={Object {}}
                />
              </span>
            </div>
          </ProposalPageHeader__About>
        </div>
      </ReactPlaceholder>
    </ProposalPageHeader__Informations>
    <Relay(Connect(ProposalPageHeaderButtons))
      hasVotableStep={true}
      opinionCanBeFollowed={true}
      proposal={
        Object {
          "$fragmentRefs": null,
          "$refType": null,
          "author": Object {
            "$fragmentRefs": null,
            "username": "userAdmin",
          },
          "category": null,
          "createdAt": "2015-01-01 00:00:00",
          "draft": false,
          "form": Object {
            "canContact": false,
            "isProposalForm": true,
          },
          "id": "1",
          "media": null,
          "project": Object {
            "type": Object {
              "title": "project.types.interpellation",
            },
          },
          "publishedAt": "2015-01-01 00:00:00",
          "theme": Object {
            "title": "titre du theme",
          },
          "title": "titre",
          "updatedAt": "2015-01-05 00:00:00",
          "url": "true",
        }
      }
      step={null}
      viewer={null}
    />
  </div>
</ProposalPageHeader__Header>
`;
