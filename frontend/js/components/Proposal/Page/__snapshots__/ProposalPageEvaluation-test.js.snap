// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalPageEvaluation /> render a disabled form if viewer is not an evaluer 1`] = `
<div
  className="container"
>
  <form
    onSubmit={[MockFunction]}
  >
    <div>
      <FieldArray
        change={[MockFunction]}
        component={[Function]}
        disabled={true}
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "locale": "fr-FR",
            "messages": Object {},
            "now": [Function],
          }
        }
        memoize={[Function]}
        name="responses"
        questions={
          Array [
            Object {
              "__typename": "SimpleQuestion",
              "alwaysJumpDestinationQuestion": null,
              "choices": Object {
                "edges": Array [],
                "pageInfo": Object {
                  "hasNextPage": false,
                },
                "totalCount": 0,
              },
              "description": null,
              "destinationJumps": Array [],
              "helpText": null,
              "hidden": false,
              "id": "question1",
              "isOtherAllowed": false,
              "jumps": Array [],
              "number": 0,
              "position": 0,
              "private": false,
              "required": true,
              "title": "Question 1",
              "type": "text",
              "validationRule": null,
            },
          ]
        }
        responses={Array []}
      />
    </div>
  </form>
</div>
`;

exports[`<ProposalPageEvaluation /> render a form if viewer is an evaluer 1`] = `
<div
  className="container"
>
  <form
    onSubmit={[MockFunction]}
  >
    <div>
      <FieldArray
        change={[MockFunction]}
        component={[Function]}
        disabled={false}
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "locale": "fr-FR",
            "messages": Object {},
            "now": [Function],
          }
        }
        memoize={[Function]}
        name="responses"
        questions={
          Array [
            Object {
              "__typename": "SimpleQuestion",
              "alwaysJumpDestinationQuestion": null,
              "choices": Object {
                "edges": Array [],
                "pageInfo": Object {
                  "hasNextPage": false,
                },
                "totalCount": 0,
              },
              "description": null,
              "destinationJumps": Array [],
              "helpText": null,
              "hidden": false,
              "id": "question1",
              "isOtherAllowed": false,
              "jumps": Array [],
              "number": 0,
              "position": 0,
              "private": false,
              "required": true,
              "title": "Question 1",
              "type": "text",
              "validationRule": null,
            },
          ]
        }
        responses={Array []}
      />
      <ButtonToolbar
        bsClass="btn-toolbar"
        className="box-content__toolbar"
        style={
          Object {
            "marginBottom": 10,
          }
        }
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={true}
          type="submit"
        >
          <FormattedMessage
            id="global.save"
            values={Object {}}
          />
        </Button>
         
        <AlertForm
          errorMessage={null}
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </ButtonToolbar>
    </div>
  </form>
</div>
`;
