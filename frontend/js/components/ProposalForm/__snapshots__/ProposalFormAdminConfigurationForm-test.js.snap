// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalFormAdminConfigurationForm /> render correctly 1`] = `
<form
  id="proposalFormVote"
  onSubmit={[MockFunction]}
>
  <div
    className="box box-primary container-fluid mt-10"
  >
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="global.formulaire"
          values={Object {}}
        />
      </h3>
      <a
        className="pull-right link"
        href="admin.help.link.form.configuration"
        rel="noopener noreferrer"
      >
        <i
          className="fa fa-info-circle"
        />
         
        <FormattedMessage
          id="global.help"
          values={Object {}}
        />
      </a>
    </div>
    <div
      className="box-content"
    >
      <Field
        component={[Function]}
        id="proposal_form_isProposal"
        label={
          <FormattedMessage
            id="object-deposited"
            values={Object {}}
          />
        }
        name="isProposalForm"
        options={
          Array [
            Object {
              "label": "global.proposal",
              "value": "proposal-form",
            },
            Object {
              "label": "admin.fields.response.question",
              "value": "question-form",
            },
          ]
        }
      />
      <Field
        component={[Function]}
        id="proposal_form_description"
        label={
          <FormattedMessage
            id="global.intro"
            values={Object {}}
          />
        }
        name="description"
        type="admin-editor"
      />
    </div>
  </div>
  <div
    className="box box-primary container-fluid mt-10"
  >
    <div
      className="box-header"
    >
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="proposal_form.admin.configuration.permanent_field"
            values={Object {}}
          />
        </h3>
      </div>
      <div
        className="panel panel-default"
      >
        <h4
          className="panel-heading m-0"
        >
          <FormattedMessage
            id="global.title"
            values={Object {}}
          />
        </h4>
        <div
          className="panel-body"
        >
          <Field
            component={[Function]}
            id="proposal_form_title_help_text"
            label={
              <span>
                <FormattedMessage
                  id="global.help.text"
                  values={Object {}}
                />
                <span
                  className="excerpt"
                >
                  <FormattedMessage
                    id="global.optional"
                    values={Object {}}
                  />
                </span>
              </span>
            }
            name="titleHelpText"
            type="text"
          />
        </div>
      </div>
    </div>
  </div>
  <Relay(Connect(SectionDisplayMode))
    dispatch={[MockFunction]}
    proposalForm={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "addressHelpText": "",
        "allowAknowledge": true,
        "canContact": false,
        "categories": Array [
          Object {
            "categoryImage": null,
            "id": "category1",
            "name": "Category 1 ",
          },
        ],
        "categoryHelpText": "",
        "categoryMandatory": true,
        "description": "description",
        "descriptionHelpText": "",
        "descriptionMandatory": true,
        "districtHelpText": "",
        "districtMandatory": true,
        "districts": Array [],
        "id": "proposalFormId",
        "illustrationHelpText": "",
        "isGridViewEnabled": false,
        "isListViewEnabled": false,
        "isMapViewEnabled": false,
        "isProposalForm": true,
        "mapCenter": Object {
          "json": "[{\\"formatted_address\\":\\"10 Yonge St, Toronto, ON M5E 1R4, Canada\\",\\"geometry\\":{\\"location\\":{\\"lat\\":43.6424564,\\"lng\\":-79.3755156},\\"location_type\\":\\"ROOFTOP\\",\\"viewport\\":{\\"south\\":43.6411074197085,\\"west\\":-79.37686458029151,\\"north\\":43.6438053802915,\\"east\\":-79.37416661970849}},\\"types\\":[\\"street_address\\"],\\"address_components\\":[{\\"long_name\\":\\"10\\",\\"short_name\\":\\"10\\",\\"types\\":[\\"street_number\\"]},{\\"long_name\\":\\"Yonge Street\\",\\"short_name\\":\\"Yonge St\\",\\"types\\":[\\"route\\"]},{\\"long_name\\":\\"Old Toronto\\",\\"short_name\\":\\"Old Toronto\\",\\"types\\":[\\"political\\",\\"sublocality\\",\\"sublocality_level_1\\"]},{\\"long_name\\":\\"Toronto\\",\\"short_name\\":\\"Toronto\\",\\"types\\":[\\"locality\\",\\"political\\"]},{\\"long_name\\":\\"Toronto Division\\",\\"short_name\\":\\"Toronto Division\\",\\"types\\":[\\"administrative_area_level_2\\",\\"political\\"]},{\\"long_name\\":\\"Ontario\\",\\"short_name\\":\\"ON\\",\\"types\\":[\\"administrative_area_level_1\\",\\"political\\"]},{\\"long_name\\":\\"Canada\\",\\"short_name\\":\\"CA\\",\\"types\\":[\\"country\\",\\"political\\"]},{\\"long_name\\":\\"M5E 1R4\\",\\"short_name\\":\\"M5E 1R4\\",\\"types\\":[\\"postal_code\\"]}],\\"place_id\\":\\"ChIJrbgtxSvL1IkR2xGe7JZyuw0\\",\\"plus_code\\":{\\"compound_code\\":\\"JJRF+XQ Toronto, ON, Canada\\",\\"global_code\\":\\"87M2JJRF+XQ\\"}}]",
          "lat": 0,
          "lng": 0,
        },
        "proposalInAZoneRequired": true,
        "questions": Array [
          Object {
            "__typename": "SimpleQuestion",
            "alwaysJumpDestinationQuestion": null,
            "description": "des cryptes Sion",
            "helpText": null,
            "hidden": false,
            "id": "field-1",
            "jumps": Array [],
            "level": 0,
            "number": 1,
            "position": 1,
            "private": false,
            "required": false,
            "title": "Titre 1",
            "type": "text",
          },
        ],
        "summaryHelpText": "",
        "themeHelpText": "",
        "themeMandatory": true,
        "titleHelpText": "",
        "usingAddress": true,
        "usingCategories": true,
        "usingDescription": true,
        "usingDistrict": true,
        "usingIllustration": false,
        "usingSummary": false,
        "usingThemes": true,
        "zoomMap": 0,
      }
    }
  />
  <div
    className="box box-primary container-fluid mt-10"
  >
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="proposal_form.admin.configuration.optional_field"
          values={Object {}}
        />
      </h3>
    </div>
    <Uncontrolled(Panel)
      expanded={true}
      id="proposal_form_admin_description_panel_body"
      onToggle={[Function]}
    >
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <div
          id="description"
        >
          <h4
            className="pull-left"
          >
            <FormattedMessage
              id="proposal_form.description"
              values={Object {}}
            />
          </h4>
          <div
            className="pull-right"
          >
            <Field
              component={[Function]}
              id="proposal_form_using_description_field"
              name="usingDescription"
              normalize={[Function]}
            />
          </div>
          <div
            className="clearfix"
          />
        </div>
      </PanelHeading>
      <PanelCollapse
        bsClass="panel"
      >
        <PanelBody
          bsClass="panel"
          collapsible={false}
        >
          <Field
            component={[Function]}
            id="proposal_form_description_mandatory"
            name="descriptionMandatory"
            type="checkbox"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </Field>
          <Field
            component={[Function]}
            id="proposal_form_description_help_text"
            label={
              <span>
                <FormattedMessage
                  id="global.help.text"
                  values={Object {}}
                />
                <span
                  className="excerpt"
                >
                  <FormattedMessage
                    id="global.optional"
                    values={Object {}}
                  />
                </span>
              </span>
            }
            name="descriptionHelpText"
            type="text"
          />
        </PanelBody>
      </PanelCollapse>
    </Uncontrolled(Panel)>
    <Uncontrolled(Panel)
      expanded={false}
      id="proposal_form_admin_summary_panel_body"
      onToggle={[Function]}
    >
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <div
          id="summary"
        >
          <h4
            className="pull-left"
          >
            <FormattedMessage
              id="global.summary"
              values={Object {}}
            />
          </h4>
          <div
            className="pull-right"
          >
            <Field
              component={[Function]}
              id="proposal_form_using_summary_field"
              name="usingSummary"
              normalize={[Function]}
            />
          </div>
          <div
            className="clearfix"
          />
        </div>
      </PanelHeading>
      <PanelCollapse
        bsClass="panel"
      >
        <PanelBody
          bsClass="panel"
          collapsible={false}
        >
          <Field
            component={[Function]}
            id="proposal_form_summary_help_text"
            label={
              <span>
                <FormattedMessage
                  id="global.help.text"
                  values={Object {}}
                />
                <span
                  className="excerpt"
                >
                  <FormattedMessage
                    id="global.optional"
                    values={Object {}}
                  />
                </span>
              </span>
            }
            name="summaryHelpText"
            type="text"
          />
        </PanelBody>
      </PanelCollapse>
    </Uncontrolled(Panel)>
    <Uncontrolled(Panel)
      expanded={false}
      id="proposal_form_admin_illustration_panel_body"
      onToggle={[Function]}
    >
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <div
          id="illustration"
        >
          <h4
            className="pull-left"
          >
            <FormattedMessage
              id="global.illustration"
              values={Object {}}
            />
          </h4>
          <div
            className="pull-right"
          >
            <Field
              component={[Function]}
              id="proposal_form_using_illustration_field"
              name="usingIllustration"
              normalize={[Function]}
            />
          </div>
          <div
            className="clearfix"
          />
        </div>
      </PanelHeading>
      <PanelCollapse
        bsClass="panel"
      >
        <PanelBody
          bsClass="panel"
          collapsible={false}
        >
          <Field
            component={[Function]}
            id="proposal_form_illustration_help_text"
            label={
              <span>
                <FormattedMessage
                  id="global.help.text"
                  values={Object {}}
                />
                <span
                  className="excerpt"
                >
                  <FormattedMessage
                    id="global.optional"
                    values={Object {}}
                  />
                </span>
              </span>
            }
            name="illustrationHelpText"
            type="text"
          />
        </PanelBody>
      </PanelCollapse>
    </Uncontrolled(Panel)>
    <Uncontrolled(Panel)
      expanded={true}
      id="proposal_form_admin_category_panel_body"
      onToggle={[Function]}
    >
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <div
          id="proposal_form_admin_category_panel"
        >
          <h4
            className="pull-left"
          >
            <FormattedMessage
              id="global.category"
              values={Object {}}
            />
          </h4>
          <div
            className="pull-right"
          >
            <Field
              component={[Function]}
              id="proposal_form_using_categories_field"
              name="usingCategories"
              normalize={[Function]}
            />
          </div>
          <div
            className="clearfix"
          />
        </div>
      </PanelHeading>
      <PanelCollapse
        bsClass="panel"
      >
        <PanelBody
          bsClass="panel"
          collapsible={false}
        >
          <Field
            component={[Function]}
            id="proposal_form_category_mandatory"
            name="categoryMandatory"
            type="checkbox"
          >
            <FormattedMessage
              id="global.mandatory"
              values={Object {}}
            />
          </Field>
          <Field
            component={[Function]}
            id="proposal_form_category_help_text"
            label={
              <span>
                <FormattedMessage
                  id="global.help.text"
                  values={Object {}}
                />
                <span
                  className="excerpt"
                >
                  <FormattedMessage
                    id="global.optional"
                    values={Object {}}
                  />
                </span>
              </span>
            }
            name="categoryHelpText"
            type="text"
          />
          <FieldArray
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__ComponentClass": [Function],
                "displayName": "Relay(injectIntl(Connect(ProposalFormAdminCategories)))",
                "render": [Function],
              }
            }
            name="categories"
            props={
              Object {
                "query": Object {
                  "$fragmentRefs": null,
                  "$refType": null,
                  "viewer": Object {
                    "isSuperAdmin": false,
                  },
                },
              }
            }
          />
        </PanelBody>
      </PanelCollapse>
    </Uncontrolled(Panel)>
    <Uncontrolled(Panel)
      expanded={true}
      id="address-body"
      onToggle={[Function]}
    >
      <PanelHeading
        bsClass="panel"
        componentClass="div"
      >
        <div
          id="address"
        >
          <h4
            className="pull-left"
          >
            <FormattedMessage
              id="proposal_form.address"
              values={Object {}}
            />
          </h4>
          <div
            className="pull-right"
          >
            <Field
              component={[Function]}
              disabled={false}
              id="proposal_form_using_address_field"
              name="usingAddress"
              normalize={[Function]}
            />
          </div>
          <div
            className="clearfix"
          />
        </div>
      </PanelHeading>
      <PanelCollapse
        bsClass="panel"
      >
        <PanelBody
          bsClass="panel"
          collapsible={false}
        >
          <Field
            component={[Function]}
            id="proposal_form_address_help_text"
            label={
              <span>
                <FormattedMessage
                  id="global.help.text"
                  values={Object {}}
                />
                <span
                  className="excerpt"
                >
                  <FormattedMessage
                    id="global.optional"
                    values={Object {}}
                  />
                </span>
              </span>
            }
            name="addressHelpText"
            type="text"
          />
          <p
            className="link"
          >
            <Glyphicon
              bsClass="glyphicon"
              glyph="info-sign"
            />
             
            <FormattedMessage
              id="the-proposals-will-be-posted-on-a-map"
              values={Object {}}
            />
          </p>
        </PanelBody>
      </PanelCollapse>
    </Uncontrolled(Panel)>
  </div>
  <div
    className="box box-primary container-fluid mt-10"
  >
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="proposal_form.admin.configuration.custom_field"
          values={Object {}}
        />
      </h3>
    </div>
    <FieldArray
      component={[Function]}
      formName="proposal-form-admin-configuration"
      name="questions"
    />
    <Field
      component={[Function]}
      id="proposal_form_allow_aknowledge"
      name="allowAknowledge"
      type="checkbox"
    >
      <FormattedMessage
        id="automatically-send-an-acknowledgement-of-receipt-by-email-to-the-contributor"
        values={Object {}}
      />
    </Field>
    <ButtonToolbar
      bsClass="btn-toolbar"
      className="box-content__toolbar"
    >
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="primary"
        disabled={true}
        id="proposal-form-admin-content-save"
        type="submit"
      >
        <FormattedMessage
          id="global.save"
          values={Object {}}
        />
      </Button>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="danger"
        disabled={true}
      >
        <FormattedMessage
          id="global.delete"
          values={Object {}}
        />
      </Button>
      <AlertForm
        invalid={false}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        valid={true}
      />
    </ButtonToolbar>
  </div>
</form>
`;
