// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReplyModalLink /> render a draft reply in a closed questionnaire 1`] = `
<Fragment>
  <ListGroupItem
    bsClass="list-group-item"
    className="reply align-items-center"
    id="reply-link-replay1"
    listItem={false}
  >
    <div>
      <FormattedMessage
        id="reply.show.link"
        values={
          Object {
            "date": <FormattedDate
              day="numeric"
              month="long"
              value={"2016-03-01T09:11:12.000Z"}
              year="numeric"
            />,
            "time": <FormattedDate
              hour="numeric"
              minute="numeric"
              value={"2016-03-01T09:11:12.000Z"}
            />,
          }
        }
      />
      <ReplyDraftLabel
        draft={true}
      />
    </div>
    <div>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="primary"
        className="mr-10 reply__update-btn mt-5"
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          id="global.see"
          values={Object {}}
        />
      </Button>
    </div>
  </ListGroupItem>
  <ForwardRef(Relay(UpdateReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": true,
        "id": "replay1",
        "private": false,
        "publishedAt": null,
        "viewerCanDelete": false,
        "viewerCanUpdate": false,
      }
    }
    show={false}
  />
  <ForwardRef(Relay(DeleteReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": true,
        "id": "replay1",
        "private": false,
        "publishedAt": null,
        "viewerCanDelete": false,
        "viewerCanUpdate": false,
      }
    }
    show={false}
  />
</Fragment>
`;

exports[`<ReplyModalLink /> render a draft reply in a contribuable questionnaire 1`] = `
<Fragment>
  <ListGroupItem
    bsClass="list-group-item"
    className="reply align-items-center"
    id="reply-link-replay1"
    listItem={false}
  >
    <div>
      <FormattedMessage
        id="reply.show.link"
        values={
          Object {
            "date": <FormattedDate
              day="numeric"
              month="long"
              value={"2016-03-01T09:11:12.000Z"}
              year="numeric"
            />,
            "time": <FormattedDate
              hour="numeric"
              minute="numeric"
              value={"2016-03-01T09:11:12.000Z"}
            />,
          }
        }
      />
      <ReplyDraftLabel
        draft={true}
      />
    </div>
    <div>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="warning"
        className="mr-10 reply__update-btn mt-5"
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          id="global.edit"
          values={Object {}}
        />
      </Button>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="danger"
        className="reply__delete-btn mt-5"
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          id="global.delete"
          values={Object {}}
        />
      </Button>
    </div>
  </ListGroupItem>
  <ForwardRef(Relay(UpdateReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": true,
        "id": "replay1",
        "private": false,
        "publishedAt": null,
        "viewerCanDelete": true,
        "viewerCanUpdate": true,
      }
    }
    show={false}
  />
  <ForwardRef(Relay(DeleteReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": true,
        "id": "replay1",
        "private": false,
        "publishedAt": null,
        "viewerCanDelete": true,
        "viewerCanUpdate": true,
      }
    }
    show={false}
  />
</Fragment>
`;

exports[`<ReplyModalLink /> render a private reply in a contribuable questionnaire 1`] = `
<Fragment>
  <ListGroupItem
    bsClass="list-group-item"
    className="reply align-items-center"
    id="reply-link-replay1"
    listItem={false}
  >
    <div>
      <FormattedMessage
        id="reply.show.link"
        values={
          Object {
            "date": <FormattedDate
              day="numeric"
              month="long"
              value={"2016-04-25T12:33:17.000Z"}
              year="numeric"
            />,
            "time": <FormattedDate
              hour="numeric"
              minute="numeric"
              value={"2016-04-25T12:33:17.000Z"}
            />,
          }
        }
      />
      <span>
         
        <FormattedMessage
          id="reply.private"
          values={Object {}}
        />
      </span>
      <ReplyDraftLabel
        draft={false}
      />
      <ForwardRef(Relay(Connect(UnpublishedLabel)))
        publishable={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "createdAt": "2016-03-01 10:11:12",
            "draft": false,
            "id": "replay1",
            "private": true,
            "publishedAt": "2016-04-25 14:33:17",
            "viewerCanDelete": true,
            "viewerCanUpdate": true,
          }
        }
      />
    </div>
    <div>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="warning"
        className="mr-10 reply__update-btn mt-5"
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          id="global.edit"
          values={Object {}}
        />
      </Button>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="danger"
        className="reply__delete-btn mt-5"
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          id="global.delete"
          values={Object {}}
        />
      </Button>
    </div>
  </ListGroupItem>
  <ForwardRef(Relay(UpdateReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": false,
        "id": "replay1",
        "private": true,
        "publishedAt": "2016-04-25 14:33:17",
        "viewerCanDelete": true,
        "viewerCanUpdate": true,
      }
    }
    show={false}
  />
  <ForwardRef(Relay(DeleteReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": false,
        "id": "replay1",
        "private": true,
        "publishedAt": "2016-04-25 14:33:17",
        "viewerCanDelete": true,
        "viewerCanUpdate": true,
      }
    }
    show={false}
  />
</Fragment>
`;

exports[`<ReplyModalLink /> render a reply in a closed questionnaire 1`] = `
<Fragment>
  <ListGroupItem
    bsClass="list-group-item"
    className="reply align-items-center"
    id="reply-link-replay1"
    listItem={false}
  >
    <div>
      <FormattedMessage
        id="reply.show.link"
        values={
          Object {
            "date": <FormattedDate
              day="numeric"
              month="long"
              value={"2016-04-25T12:33:17.000Z"}
              year="numeric"
            />,
            "time": <FormattedDate
              hour="numeric"
              minute="numeric"
              value={"2016-04-25T12:33:17.000Z"}
            />,
          }
        }
      />
      <ReplyDraftLabel
        draft={false}
      />
      <ForwardRef(Relay(Connect(UnpublishedLabel)))
        publishable={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "createdAt": "2016-03-01 10:11:12",
            "draft": false,
            "id": "replay1",
            "private": false,
            "publishedAt": "2016-04-25 14:33:17",
            "viewerCanDelete": false,
            "viewerCanUpdate": false,
          }
        }
      />
    </div>
    <div>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="primary"
        className="mr-10 reply__update-btn mt-5"
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          id="global.see"
          values={Object {}}
        />
      </Button>
    </div>
  </ListGroupItem>
  <ForwardRef(Relay(UpdateReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": false,
        "id": "replay1",
        "private": false,
        "publishedAt": "2016-04-25 14:33:17",
        "viewerCanDelete": false,
        "viewerCanUpdate": false,
      }
    }
    show={false}
  />
  <ForwardRef(Relay(DeleteReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": false,
        "id": "replay1",
        "private": false,
        "publishedAt": "2016-04-25 14:33:17",
        "viewerCanDelete": false,
        "viewerCanUpdate": false,
      }
    }
    show={false}
  />
</Fragment>
`;

exports[`<ReplyModalLink /> render a reply in a contribuable questionnaire 1`] = `
<Fragment>
  <ListGroupItem
    bsClass="list-group-item"
    className="reply align-items-center"
    id="reply-link-replay1"
    listItem={false}
  >
    <div>
      <FormattedMessage
        id="reply.show.link"
        values={
          Object {
            "date": <FormattedDate
              day="numeric"
              month="long"
              value={"2016-04-25T12:33:17.000Z"}
              year="numeric"
            />,
            "time": <FormattedDate
              hour="numeric"
              minute="numeric"
              value={"2016-04-25T12:33:17.000Z"}
            />,
          }
        }
      />
      <ReplyDraftLabel
        draft={false}
      />
      <ForwardRef(Relay(Connect(UnpublishedLabel)))
        publishable={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "createdAt": "2016-03-01 10:11:12",
            "draft": false,
            "id": "replay1",
            "private": false,
            "publishedAt": "2016-04-25 14:33:17",
            "viewerCanDelete": true,
            "viewerCanUpdate": true,
          }
        }
      />
    </div>
    <div>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="warning"
        className="mr-10 reply__update-btn mt-5"
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          id="global.edit"
          values={Object {}}
        />
      </Button>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="danger"
        className="reply__delete-btn mt-5"
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          id="global.delete"
          values={Object {}}
        />
      </Button>
    </div>
  </ListGroupItem>
  <ForwardRef(Relay(UpdateReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": false,
        "id": "replay1",
        "private": false,
        "publishedAt": "2016-04-25 14:33:17",
        "viewerCanDelete": true,
        "viewerCanUpdate": true,
      }
    }
    show={false}
  />
  <ForwardRef(Relay(DeleteReplyModal))
    onClose={[Function]}
    reply={
      Object {
        "$fragmentRefs": null,
        "$refType": null,
        "createdAt": "2016-03-01 10:11:12",
        "draft": false,
        "id": "replay1",
        "private": false,
        "publishedAt": "2016-04-25 14:33:17",
        "viewerCanDelete": true,
        "viewerCanUpdate": true,
      }
    }
    show={false}
  />
</Fragment>
`;
