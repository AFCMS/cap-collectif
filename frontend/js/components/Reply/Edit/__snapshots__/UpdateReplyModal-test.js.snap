// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UpdateReplyModal /> should render correctly with minimal props 1`] = `
<UpdateReplyModal__UpdateReplyModalContainer
  animation={false}
  aria-labelledby="contained-modal-title-lg"
  bsSize="large"
  dialogClassName="custom-modal-dialog"
  id="show-reply-modal-UmVwbHk6cmVwbHky"
  onHide={[Function]}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
      id="contained-modal-title-lg"
    >
      <FormattedMessage
        id="reply.show.link"
        values={
          Object {
            "date": <FormattedDate
              day="numeric"
              month="long"
              value={"2016-04-25T12:33:17.000Z"}
              year="numeric"
            />,
            "time": <FormattedDate
              hour="numeric"
              minute="numeric"
              value={"2016-04-25T12:33:17.000Z"}
            />,
          }
        }
      />
      <ForwardRef(Relay(Connect(UnpublishedLabel)))
        publishable={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "createdAt": "2016-03-01 12:26:24",
            "draft": false,
            "id": "UmVwbHk6cmVwbHky",
            "publishedAt": "2016-04-25 14:33:17",
            "questionnaire": Object {
              "$fragmentRefs": null,
            },
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <ForwardRef(Relay(Connect(injectIntl(ReduxForm))))
      onClose={[Function]}
      questionnaire={
        Object {
          "$fragmentRefs": null,
        }
      }
      reply={
        Object {
          "$fragmentRefs": null,
          "$refType": null,
          "createdAt": "2016-03-01 12:26:24",
          "draft": false,
          "id": "UmVwbHk6cmVwbHky",
          "publishedAt": "2016-04-25 14:33:17",
          "questionnaire": Object {
            "$fragmentRefs": null,
          },
        }
      }
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <CloseButton
      label="global.cancel"
      onClose={[Function]}
    />
  </ModalFooter>
</UpdateReplyModal__UpdateReplyModalContainer>
`;

exports[`<UpdateReplyModal /> should render correctly with replies 1`] = `
<UpdateReplyModal__UpdateReplyModalContainer
  animation={false}
  aria-labelledby="contained-modal-title-lg"
  bsSize="large"
  dialogClassName="custom-modal-dialog"
  id="show-reply-modal-UmVwbHk6cmVwbHky"
  onHide={[Function]}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
      id="contained-modal-title-lg"
    >
      <FormattedMessage
        id="reply.show.link"
        values={
          Object {
            "date": <FormattedDate
              day="numeric"
              month="long"
              value={"2016-03-01T11:26:24.000Z"}
              year="numeric"
            />,
            "time": <FormattedDate
              hour="numeric"
              minute="numeric"
              value={"2016-03-01T11:26:24.000Z"}
            />,
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <ForwardRef(Relay(Connect(injectIntl(ReduxForm))))
      onClose={[Function]}
      questionnaire={
        Object {
          "$fragmentRefs": null,
        }
      }
      reply={
        Object {
          "$fragmentRefs": null,
          "$refType": null,
          "createdAt": "2016-03-01 12:26:24",
          "draft": true,
          "id": "UmVwbHk6cmVwbHky",
          "publishedAt": null,
          "questionnaire": Object {
            "$fragmentRefs": null,
          },
        }
      }
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <CloseButton
      label="global.cancel"
      onClose={[Function]}
    />
  </ModalFooter>
</UpdateReplyModal__UpdateReplyModalContainer>
`;
