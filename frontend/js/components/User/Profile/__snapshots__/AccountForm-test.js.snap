// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AccountForm /> should render a form 1`] = `
<Fragment>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <form
      id="profile-account"
      onSubmit={[MockFunction]}
    >
      <AccountForm__AccountContainer>
        <label
          className="col-sm-3 control-label"
          htmlFor="account__email"
        >
          <FormattedMessage
            id="global.email"
            values={Object {}}
          />
        </label>
        <Field
          component={[Function]}
          disabled={false}
          divClassName="col-sm-6"
          id="account__email"
          name="email"
          type="email"
        />
        <span
          className="account-form-hint"
        >
          <FormattedMessage
            id="account.your_email_is_not_public"
            values={Object {}}
          />
        </span>
        <Connect(ConfirmPasswordModal)
          handleClose={[Function]}
          show={false}
        />
      </AccountForm__AccountContainer>
      <div
        className="col-sm-6 col-sm-offset-3 mt-5 mb-15 w-100"
        id="profile-alert-form"
      >
        <AlertForm
          errorMessage={null}
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </div>
    </form>
    <AccountForm__SsoGroup>
      <span
        className="font-weight-bold"
      >
        <FormattedMessage
          id="Sign-in-option"
          values={Object {}}
        />
      </span>
      <span
        className="clearfix sign-in-method"
      >
        <FormattedMessage
          id="Sign-in-method"
          values={Object {}}
        />
      </span>
      <ListGroup
        className="mt-10"
      />
    </AccountForm__SsoGroup>
  </PanelBody>
  <PanelFooter
    bsClass="panel"
  >
    <div
      className="pl-15"
    >
      <AccountForm__FooterContainer>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={false}
          id="edit-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="global.save_modifications"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          className="ml-15"
          disabled={false}
          id="delete-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="delete-account"
            values={Object {}}
          />
        </Button>
      </AccountForm__FooterContainer>
      <Relay(DeleteAccountModal)
        handleClose={[Function]}
        show={false}
        viewer={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "email": "initial-email@gmail.fr",
            "facebookId": null,
            "googleId": null,
            "hasPassword": true,
            "isFranceConnectAccount": false,
            "locale": "fr-FR",
            "newEmailToConfirm": null,
          }
        }
      />
    </div>
  </PanelFooter>
</Fragment>
`;

exports[`<AccountForm /> should render a form with an alert if submitted password is wrong 1`] = `
<Fragment>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <form
      id="profile-account"
      onSubmit={[MockFunction]}
    >
      <AccountForm__AccountContainer>
        <label
          className="col-sm-3 control-label"
          htmlFor="account__email"
        >
          <FormattedMessage
            id="global.email"
            values={Object {}}
          />
        </label>
        <Field
          component={[Function]}
          disabled={false}
          divClassName="col-sm-6"
          id="account__email"
          name="email"
          type="email"
        />
        <span
          className="account-form-hint"
        >
          <FormattedMessage
            id="account.your_email_is_not_public"
            values={Object {}}
          />
        </span>
        <Connect(ConfirmPasswordModal)
          handleClose={[Function]}
          show={false}
        />
      </AccountForm__AccountContainer>
      <div
        className="col-sm-6 col-sm-offset-3 mt-5 mb-15 w-100"
        id="profile-alert-form"
      >
        <AlertForm
          errorMessage="user.confirm.wrong_password"
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </div>
    </form>
    <AccountForm__SsoGroup>
      <span
        className="font-weight-bold"
      >
        <FormattedMessage
          id="Sign-in-option"
          values={Object {}}
        />
      </span>
      <span
        className="clearfix sign-in-method"
      >
        <FormattedMessage
          id="Sign-in-method"
          values={Object {}}
        />
      </span>
      <ListGroup
        className="mt-10"
      />
    </AccountForm__SsoGroup>
  </PanelBody>
  <PanelFooter
    bsClass="panel"
  >
    <div
      className="pl-15"
    >
      <AccountForm__FooterContainer>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={false}
          id="edit-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="global.save_modifications"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          className="ml-15"
          disabled={false}
          id="delete-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="delete-account"
            values={Object {}}
          />
        </Button>
      </AccountForm__FooterContainer>
      <Relay(DeleteAccountModal)
        handleClose={[Function]}
        show={false}
        viewer={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "email": "initial-email@gmail.fr",
            "facebookId": null,
            "googleId": null,
            "hasPassword": true,
            "isFranceConnectAccount": false,
            "locale": "fr-FR",
            "newEmailToConfirm": null,
          }
        }
      />
    </div>
  </PanelFooter>
</Fragment>
`;

exports[`<AccountForm /> should render a form with an info if a confirmation email has been resent 1`] = `
<Fragment>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <form
      id="profile-account"
      onSubmit={[MockFunction]}
    >
      <AccountForm__AccountContainer>
        <label
          className="col-sm-3 control-label"
          htmlFor="account__email"
        >
          <FormattedMessage
            id="global.email"
            values={Object {}}
          />
        </label>
        <Field
          component={[Function]}
          disabled={false}
          divClassName="col-sm-6"
          id="account__email"
          name="email"
          type="email"
        />
        <span
          className="account-form-hint"
        >
          <FormattedMessage
            id="account.your_email_is_not_public"
            values={Object {}}
          />
        </span>
        <Connect(ConfirmPasswordModal)
          handleClose={[Function]}
          show={false}
        />
      </AccountForm__AccountContainer>
      <div
        className="col-sm-6 col-sm-offset-3 mt-5 mb-15 w-100"
        id="profile-alert-form"
      >
        <AlertForm
          errorMessage={null}
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </div>
    </form>
    <AccountForm__SsoGroup>
      <span
        className="font-weight-bold"
      >
        <FormattedMessage
          id="Sign-in-option"
          values={Object {}}
        />
      </span>
      <span
        className="clearfix sign-in-method"
      >
        <FormattedMessage
          id="Sign-in-method"
          values={Object {}}
        />
      </span>
      <ListGroup
        className="mt-10"
      />
    </AccountForm__SsoGroup>
  </PanelBody>
  <PanelFooter
    bsClass="panel"
  >
    <div
      className="pl-15"
    >
      <AccountForm__FooterContainer>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={false}
          id="edit-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="global.save_modifications"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          className="ml-15"
          disabled={false}
          id="delete-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="delete-account"
            values={Object {}}
          />
        </Button>
      </AccountForm__FooterContainer>
      <Relay(DeleteAccountModal)
        handleClose={[Function]}
        show={false}
        viewer={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "email": "initial-email@gmail.fr",
            "facebookId": null,
            "googleId": null,
            "hasPassword": true,
            "isFranceConnectAccount": false,
            "locale": "fr-FR",
            "newEmailToConfirm": null,
          }
        }
      />
    </div>
  </PanelFooter>
</Fragment>
`;

exports[`<AccountForm /> should render a form with associated account 1`] = `
<Fragment>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <form
      id="profile-account"
      onSubmit={[MockFunction]}
    >
      <AccountForm__AccountContainer>
        <label
          className="col-sm-3 control-label"
          htmlFor="account__email"
        >
          <FormattedMessage
            id="global.email"
            values={Object {}}
          />
        </label>
        <Field
          component={[Function]}
          disabled={true}
          divClassName="col-sm-6"
          id="account__email"
          name="email"
          type="email"
        />
        <span
          className="account-form-hint"
        >
          <FormattedMessage
            id="data-from-FranceConnect"
            values={Object {}}
          />
          <FormattedMessage
            id="account.your_email_is_not_public"
            values={Object {}}
          />
        </span>
        <Connect(ConfirmPasswordModal)
          handleClose={[Function]}
          show={false}
        />
      </AccountForm__AccountContainer>
      <div
        className="col-sm-6 col-sm-offset-3 mt-5 mb-15 w-100"
        id="profile-alert-form"
      >
        <AlertForm
          errorMessage={null}
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </div>
    </form>
    <AccountForm__SsoGroup>
      <span
        className="font-weight-bold"
      >
        <FormattedMessage
          id="Sign-in-option"
          values={Object {}}
        />
      </span>
      <span
        className="clearfix sign-in-method"
      >
        <FormattedMessage
          id="Sign-in-method"
          values={Object {}}
        />
      </span>
      <ListGroup
        className="mt-10"
      />
    </AccountForm__SsoGroup>
  </PanelBody>
  <PanelFooter
    bsClass="panel"
  >
    <div
      className="pl-15"
    >
      <AccountForm__FooterContainer>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={false}
          id="edit-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="global.save_modifications"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          className="ml-15"
          disabled={false}
          id="delete-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="delete-account"
            values={Object {}}
          />
        </Button>
      </AccountForm__FooterContainer>
      <Relay(DeleteAccountModal)
        handleClose={[Function]}
        show={false}
        viewer={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "email": "initial-email@gmail.fr",
            "facebookId": null,
            "googleId": null,
            "hasPassword": false,
            "isFranceConnectAccount": true,
            "locale": "fr-FR",
            "newEmailToConfirm": null,
          }
        }
      />
    </div>
  </PanelFooter>
</Fragment>
`;

exports[`<AccountForm /> should render a form with information about new email 1`] = `
<Fragment>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <form
      id="profile-account"
      onSubmit={[MockFunction]}
    >
      <AccountForm__AccountContainer>
        <label
          className="col-sm-3 control-label"
          htmlFor="account__email"
        >
          <FormattedMessage
            id="global.email"
            values={Object {}}
          />
        </label>
        <Field
          component={[Function]}
          disabled={false}
          divClassName="col-sm-6"
          id="account__email"
          name="email"
          type="email"
        />
        <span
          className="account-form-hint"
        >
          <FormattedMessage
            id="account.your_email_is_not_public"
            values={Object {}}
          />
        </span>
        <Connect(ConfirmPasswordModal)
          handleClose={[Function]}
          show={false}
        />
      </AccountForm__AccountContainer>
      <div
        className="col-sm-6 col-sm-offset-3 mt-5 mb-15 w-100"
        id="profile-alert-form"
      >
        <AlertForm
          errorMessage={null}
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </div>
    </form>
    <AccountForm__SsoGroup>
      <span
        className="font-weight-bold"
      >
        <FormattedMessage
          id="Sign-in-option"
          values={Object {}}
        />
      </span>
      <span
        className="clearfix sign-in-method"
      >
        <FormattedMessage
          id="Sign-in-method"
          values={Object {}}
        />
      </span>
      <ListGroup
        className="mt-10"
      />
    </AccountForm__SsoGroup>
  </PanelBody>
  <PanelFooter
    bsClass="panel"
  >
    <div
      className="pl-15"
    >
      <AccountForm__FooterContainer>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={false}
          id="edit-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="global.save_modifications"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          className="ml-15"
          disabled={false}
          id="delete-account-profile-button"
          onClick={[Function]}
        >
          <FormattedMessage
            id="delete-account"
            values={Object {}}
          />
        </Button>
      </AccountForm__FooterContainer>
      <Relay(DeleteAccountModal)
        handleClose={[Function]}
        show={false}
        viewer={
          Object {
            "$fragmentRefs": null,
            "$refType": null,
            "email": "initial-email@gmail.fr",
            "facebookId": null,
            "googleId": null,
            "hasPassword": true,
            "isFranceConnectAccount": false,
            "locale": "fr-FR",
            "newEmailToConfirm": null,
          }
        }
      />
    </div>
  </PanelFooter>
</Fragment>
`;
