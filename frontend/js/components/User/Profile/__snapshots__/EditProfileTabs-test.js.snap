// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditProfileTabs /> should render all tabs 1`] = `
<Uncontrolled(TabContainer)
  defaultActiveKey="profile"
  id="account-tabs"
>
  <Row
    bsClass="row"
    className="clearfix"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      md={3}
      sm={4}
    >
      <Uncontrolled(Panel)
        id="panel-account"
      >
        <PanelHeading
          bsClass="panel"
          className="d-flex"
          componentClass="div"
        >
          <Media
            className="m-auto align-items-center"
          >
            <Left>
              <Relay(Connect(UserAvatar))
                user={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                  }
                }
              />
            </Left>
            <Body>
              <Relay(Connect(UserLink))
                className="excerpt"
                user={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                  }
                }
              />
            </Body>
          </Media>
        </PanelHeading>
        <ListGroup
          bsClass="list-group"
        >
          <Nav
            bsClass="nav"
            bsStyle="pills"
            justified={false}
            pullLeft={false}
            pullRight={false}
            stacked={true}
          >
            <NavItem
              active={false}
              disabled={false}
              eventKey="profile"
              href="#profile"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-id-8"
                />
                <FormattedMessage
                  id="user.profile.title"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              disabled={false}
              eventKey="account"
              href="#account"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-setting-gear"
                />
                <FormattedMessage
                  id="user.profile.edit.account"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              disabled={false}
              eventKey="personal-data"
              href="#personal-data"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-id-1"
                />
                <FormattedMessage
                  id="data"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              disabled={false}
              eventKey="password"
              href="#password"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-key-1"
                />
                <FormattedMessage
                  id="global.password"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="notifications"
              href="#notifications"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-bell"
                />
                <FormattedMessage
                  id="global.notifications"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="followings"
              href="#followings"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-rss-2"
                />
                <FormattedMessage
                  id="followings"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
          </Nav>
        </ListGroup>
      </Uncontrolled(Panel)>
    </Col>
    <Col
      bsClass="col"
      componentClass="div"
      md={9}
      sm={8}
      xs={12}
    >
      <TabContent
        animation={true}
        bsClass="tab"
        componentClass="div"
        mountOnEnter={false}
        unmountOnExit={false}
      >
        <TabPane
          bsClass="tab-pane"
          eventKey="profile"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="account"
        >
          <Relay(Connect(AccountBox))
            languageList={
              Array [
                Object {
                  "code": "fr-FR",
                  "translationKey": "french",
                },
                Object {
                  "code": "en-GB",
                  "translationKey": "english",
                },
                Object {
                  "code": "de-DE",
                  "translationKey": "deutsch",
                },
              ]
            }
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="personal-data"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="password"
        >
          <Connect(injectIntl(ReduxForm)) />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="notifications"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="followings"
        >
          <Relay(FollowingsTab)
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
      </TabContent>
    </Col>
  </Row>
</Uncontrolled(TabContainer)>
`;

exports[`<EditProfileTabs /> should render all tabs except profile, password and account (OpenID) 1`] = `
<Uncontrolled(TabContainer)
  defaultActiveKey="profile"
  id="account-tabs"
>
  <Row
    bsClass="row"
    className="clearfix"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      md={3}
      sm={4}
    >
      <Uncontrolled(Panel)
        id="panel-account"
      >
        <PanelHeading
          bsClass="panel"
          className="d-flex"
          componentClass="div"
        >
          <Media
            className="m-auto align-items-center"
          >
            <Left>
              <Relay(Connect(UserAvatar))
                user={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                  }
                }
              />
            </Left>
            <Body>
              <Relay(Connect(UserLink))
                className="excerpt"
                user={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                  }
                }
              />
            </Body>
          </Media>
        </PanelHeading>
        <ListGroup
          bsClass="list-group"
        >
          <Nav
            bsClass="nav"
            bsStyle="pills"
            justified={false}
            pullLeft={false}
            pullRight={false}
            stacked={true}
          >
            <NavItem
              active={false}
              disabled={false}
              eventKey="profile"
              href="#profile"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-id-8"
                />
                <FormattedMessage
                  id="user.profile.title"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              disabled={false}
              eventKey="personal-data"
              href="#personal-data"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-id-1"
                />
                <FormattedMessage
                  id="data"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="notifications"
              href="#notifications"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-bell"
                />
                <FormattedMessage
                  id="global.notifications"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="followings"
              href="#followings"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-rss-2"
                />
                <FormattedMessage
                  id="followings"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
          </Nav>
        </ListGroup>
      </Uncontrolled(Panel)>
    </Col>
    <Col
      bsClass="col"
      componentClass="div"
      md={9}
      sm={8}
      xs={12}
    >
      <TabContent
        animation={true}
        bsClass="tab"
        componentClass="div"
        mountOnEnter={false}
        unmountOnExit={false}
      >
        <TabPane
          bsClass="tab-pane"
          eventKey="profile"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="account"
        />
        <TabPane
          bsClass="tab-pane"
          eventKey="personal-data"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="password"
        />
        <TabPane
          bsClass="tab-pane"
          eventKey="notifications"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="followings"
        >
          <Relay(FollowingsTab)
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
      </TabContent>
    </Col>
  </Row>
</Uncontrolled(TabContainer)>
`;

exports[`<EditProfileTabs /> should render all tabs except profile, password and account (Paris) 1`] = `
<Uncontrolled(TabContainer)
  defaultActiveKey="profile"
  id="account-tabs"
>
  <Row
    bsClass="row"
    className="clearfix"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      md={3}
      sm={4}
    >
      <Uncontrolled(Panel)
        id="panel-account"
      >
        <PanelHeading
          bsClass="panel"
          className="d-flex"
          componentClass="div"
        >
          <Media
            className="m-auto align-items-center"
          >
            <Left>
              <Relay(Connect(UserAvatar))
                user={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                  }
                }
              />
            </Left>
            <Body>
              <Relay(Connect(UserLink))
                className="excerpt"
                user={
                  Object {
                    "$fragmentRefs": null,
                    "$refType": null,
                  }
                }
              />
            </Body>
          </Media>
        </PanelHeading>
        <ListGroup
          bsClass="list-group"
        >
          <Nav
            bsClass="nav"
            bsStyle="pills"
            justified={false}
            pullLeft={false}
            pullRight={false}
            stacked={true}
          >
            <NavItem
              active={false}
              disabled={false}
              eventKey="profile"
              href="#profile"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-id-8"
                />
                <FormattedMessage
                  id="user.profile.title"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              disabled={false}
              eventKey="personal-data"
              href="#personal-data"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-id-1"
                />
                <FormattedMessage
                  id="data"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="notifications"
              href="#notifications"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-bell"
                />
                <FormattedMessage
                  id="global.notifications"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
            <NavItem
              active={false}
              className="tab"
              disabled={false}
              eventKey="followings"
              href="#followings"
            >
              <ListGroupItem
                bsClass="list-group-item"
                listItem={false}
              >
                <span
                  className="icon cap-rss-2"
                />
                <FormattedMessage
                  id="followings"
                  values={Object {}}
                />
              </ListGroupItem>
            </NavItem>
          </Nav>
        </ListGroup>
      </Uncontrolled(Panel)>
    </Col>
    <Col
      bsClass="col"
      componentClass="div"
      md={9}
      sm={8}
      xs={12}
    >
      <TabContent
        animation={true}
        bsClass="tab"
        componentClass="div"
        mountOnEnter={false}
        unmountOnExit={false}
      >
        <TabPane
          bsClass="tab-pane"
          eventKey="profile"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="account"
        />
        <TabPane
          bsClass="tab-pane"
          eventKey="personal-data"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="password"
        />
        <TabPane
          bsClass="tab-pane"
          eventKey="notifications"
        >
          <Relay(Connect(injectIntl(ReduxForm)))
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
        <TabPane
          bsClass="tab-pane"
          eventKey="followings"
        >
          <Relay(FollowingsTab)
            viewer={
              Object {
                "$fragmentRefs": null,
                "$refType": null,
              }
            }
          />
        </TabPane>
      </TabContent>
    </Col>
  </Row>
</Uncontrolled(TabContainer)>
`;
