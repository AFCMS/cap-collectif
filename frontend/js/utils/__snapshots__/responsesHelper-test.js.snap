// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getAvailableQuestionsIds Should return the correct questions ids for a simple questionnaire with logic jumps 1`] = `
Array [
  "question1",
  "question2",
]
`;

exports[`getAvailableQuestionsIds Should return the correct questions ids for a simple questionnaire without logic jumps 1`] = `
Array [
  "question1",
  "question2",
]
`;

exports[`getNextLogicJumpQuestion Should return the correct next logic jump question 1`] = `
Object {
  "__typename": "MultipleChoiceQuestion",
  "alwaysJumpDestinationQuestion": null,
  "choices": Object {
    "edges": Array [
      Object {
        "node": Object {
          "color": null,
          "description": null,
          "id": "questionchoicLeGange",
          "image": null,
          "title": "Le gange",
        },
      },
      Object {
        "node": Object {
          "color": null,
          "description": null,
          "id": "questionchoiceLeNil",
          "image": null,
          "title": "Le nil",
        },
      },
      Object {
        "node": Object {
          "color": null,
          "description": null,
          "id": "questionchoiceLaSeine",
          "image": null,
          "title": "La seine",
        },
      },
      Object {
        "node": Object {
          "color": null,
          "description": null,
          "id": "questionchoiceAmazone",
          "image": null,
          "title": "L'Amazone",
        },
      },
    ],
    "pageInfo": Object {
      "hasNextPage": false,
    },
    "totalCount": 4,
  },
  "description": null,
  "helpText": null,
  "id": "UXVlc3Rpb246NDU=",
  "isOtherAllowed": false,
  "jumps": Array [
    Object {
      "conditions": Array [
        Object {
          "id": "ljconditionFleuveGange",
          "operator": "IS",
          "question": Object {
            "id": "UXVlc3Rpb246NDU=",
            "title": "Votre fleuve préféré",
            "type": "select",
          },
          "value": Object {
            "id": "questionchoicLeGange",
            "title": "Le gange",
          },
        },
        Object {
          "id": "ljconditionFleuveHapLg1",
          "operator": "IS",
          "question": Object {
            "id": "UXVlc3Rpb246MjQ=",
            "title": "Hap ou Noel ?",
            "type": "select",
          },
          "value": Object {
            "id": "questionchoiceHap",
            "title": "Hap",
          },
        },
      ],
      "destination": Object {
        "id": "UXVlc3Rpb246NDY=",
        "number": 3,
        "title": "Comme tu as choisi Hap et le Gange, je t'affiche cette question (dsl jui pas inspiré)",
      },
      "id": "logicjump1",
      "origin": Object {
        "id": "UXVlc3Rpb246NDU=",
      },
    },
    Object {
      "conditions": Array [
        Object {
          "id": "ljconditionFleuveHap",
          "operator": "IS",
          "question": Object {
            "id": "UXVlc3Rpb246MjQ=",
            "title": "Hap ou Noel ?",
            "type": "select",
          },
          "value": Object {
            "id": "questionchoiceHap",
            "title": "Hap",
          },
        },
      ],
      "destination": Object {
        "id": "UXVlc3Rpb246MjU=",
        "number": 4,
        "title": "Par qui Hap a t-il été créé ?",
      },
      "id": "logicjump2",
      "origin": Object {
        "id": "UXVlc3Rpb246NDU=",
      },
    },
    Object {
      "conditions": Array [
        Object {
          "id": "ljconditionNoel",
          "operator": "IS",
          "question": Object {
            "id": "UXVlc3Rpb246MjQ=",
            "title": "Hap ou Noel ?",
            "type": "select",
          },
          "value": Object {
            "id": "questionchoiceNoel",
            "title": "Noel",
          },
        },
      ],
      "destination": Object {
        "id": "UXVlc3Rpb246Mjc=",
        "number": 7,
        "title": "Noel a t-il un rapport avec la fête de Noël ?",
      },
      "id": "logicjump3",
      "origin": Object {
        "id": "UXVlc3Rpb246NDU=",
      },
    },
  ],
  "number": 2,
  "position": 2,
  "private": false,
  "randomQuestionChoices": false,
  "required": false,
  "title": "Votre fleuve préféré",
  "type": "select",
  "validationRule": null,
}
`;

exports[`getNextLogicJumpQuestion Should return the correct next logic jump question 2`] = `
Object {
  "__typename": "MultipleChoiceQuestion",
  "alwaysJumpDestinationQuestion": Object {
    "id": "UXVlc3Rpb246MzE=",
    "number": 9,
    "title": "Plutôt Marvel ou DC ?",
  },
  "choices": Object {
    "edges": Array [
      Object {
        "node": Object {
          "color": null,
          "description": null,
          "id": "questionchoiceHapBonOui",
          "image": null,
          "title": "Oui",
        },
      },
      Object {
        "node": Object {
          "color": null,
          "description": null,
          "id": "questionchoiceHapBonNon",
          "image": null,
          "title": "Non",
        },
      },
    ],
    "pageInfo": Object {
      "hasNextPage": false,
    },
    "totalCount": 2,
  },
  "description": null,
  "helpText": null,
  "id": "UXVlc3Rpb246MjY=",
  "isOtherAllowed": false,
  "jumps": Array [
    Object {
      "conditions": Array [
        Object {
          "id": "ljconditionHapGood",
          "operator": "IS",
          "question": Object {
            "id": "UXVlc3Rpb246MjY=",
            "title": "Hap est-il un homme bon ?",
            "type": "select",
          },
          "value": Object {
            "id": "questionchoiceHapBonNon",
            "title": "Non",
          },
        },
      ],
      "destination": Object {
        "id": "UXVlc3Rpb246Mzk=",
        "number": 6,
        "title": "Comment ça ce n'est pas un homme bon, comment oses-tu ?",
      },
      "id": "logicjump10",
      "origin": Object {
        "id": "UXVlc3Rpb246MjY=",
      },
    },
  ],
  "number": 5,
  "position": 5,
  "private": false,
  "randomQuestionChoices": false,
  "required": false,
  "title": "Hap est-il un homme bon ?",
  "type": "select",
  "validationRule": null,
}
`;

exports[`getQuestionDeps Should return a correct list of dependent questions for a given question 1`] = `
Array [
  Object {
    "__typename": "MultipleChoiceQuestion",
    "alwaysJumpDestinationQuestion": null,
    "choices": Object {
      "edges": Array [
        Object {
          "node": Object {
            "color": null,
            "description": null,
            "id": "questionchoicLeGange",
            "image": null,
            "title": "Le gange",
          },
        },
        Object {
          "node": Object {
            "color": null,
            "description": null,
            "id": "questionchoiceLeNil",
            "image": null,
            "title": "Le nil",
          },
        },
        Object {
          "node": Object {
            "color": null,
            "description": null,
            "id": "questionchoiceLaSeine",
            "image": null,
            "title": "La seine",
          },
        },
        Object {
          "node": Object {
            "color": null,
            "description": null,
            "id": "questionchoiceAmazone",
            "image": null,
            "title": "L'Amazone",
          },
        },
      ],
      "pageInfo": Object {
        "hasNextPage": false,
      },
      "totalCount": 4,
    },
    "description": null,
    "helpText": null,
    "id": "UXVlc3Rpb246NDU=",
    "isOtherAllowed": false,
    "jumps": Array [
      Object {
        "conditions": Array [
          Object {
            "id": "ljconditionFleuveGange",
            "operator": "IS",
            "question": Object {
              "id": "UXVlc3Rpb246NDU=",
              "title": "Votre fleuve préféré",
              "type": "select",
            },
            "value": Object {
              "id": "questionchoicLeGange",
              "title": "Le gange",
            },
          },
          Object {
            "id": "ljconditionFleuveHapLg1",
            "operator": "IS",
            "question": Object {
              "id": "UXVlc3Rpb246MjQ=",
              "title": "Hap ou Noel ?",
              "type": "select",
            },
            "value": Object {
              "id": "questionchoiceHap",
              "title": "Hap",
            },
          },
        ],
        "destination": Object {
          "id": "UXVlc3Rpb246NDY=",
          "number": 3,
          "title": "Comme tu as choisi Hap et le Gange, je t'affiche cette question (dsl jui pas inspiré)",
        },
        "id": "logicjump1",
        "origin": Object {
          "id": "UXVlc3Rpb246NDU=",
        },
      },
      Object {
        "conditions": Array [
          Object {
            "id": "ljconditionFleuveHap",
            "operator": "IS",
            "question": Object {
              "id": "UXVlc3Rpb246MjQ=",
              "title": "Hap ou Noel ?",
              "type": "select",
            },
            "value": Object {
              "id": "questionchoiceHap",
              "title": "Hap",
            },
          },
        ],
        "destination": Object {
          "id": "UXVlc3Rpb246MjU=",
          "number": 4,
          "title": "Par qui Hap a t-il été créé ?",
        },
        "id": "logicjump2",
        "origin": Object {
          "id": "UXVlc3Rpb246NDU=",
        },
      },
      Object {
        "conditions": Array [
          Object {
            "id": "ljconditionNoel",
            "operator": "IS",
            "question": Object {
              "id": "UXVlc3Rpb246MjQ=",
              "title": "Hap ou Noel ?",
              "type": "select",
            },
            "value": Object {
              "id": "questionchoiceNoel",
              "title": "Noel",
            },
          },
        ],
        "destination": Object {
          "id": "UXVlc3Rpb246Mjc=",
          "number": 7,
          "title": "Noel a t-il un rapport avec la fête de Noël ?",
        },
        "id": "logicjump3",
        "origin": Object {
          "id": "UXVlc3Rpb246NDU=",
        },
      },
    ],
    "number": 2,
    "position": 2,
    "private": false,
    "randomQuestionChoices": false,
    "required": false,
    "title": "Votre fleuve préféré",
    "type": "select",
    "validationRule": null,
  },
]
`;

exports[`getQuestionDeps Should return a correct list of dependent questions for a given question 2`] = `
Array [
  Object {
    "__typename": "MultipleChoiceQuestion",
    "alwaysJumpDestinationQuestion": Object {
      "id": "UXVlc3Rpb246Mzg=",
      "number": 16,
      "title": "C'est la fin mais j'affiche quand même des choix",
    },
    "choices": Object {
      "edges": Array [
        Object {
          "node": Object {
            "color": null,
            "description": null,
            "id": "questionchoiceDcSupergirlYes",
            "image": null,
            "title": "Oui",
          },
        },
        Object {
          "node": Object {
            "color": null,
            "description": null,
            "id": "questionchoiceDcSupergirlNo",
            "image": null,
            "title": "Non",
          },
        },
      ],
      "pageInfo": Object {
        "hasNextPage": false,
      },
      "totalCount": 2,
    },
    "description": null,
    "helpText": null,
    "id": "UXVlc3Rpb246MzQ=",
    "isOtherAllowed": false,
    "jumps": Array [],
    "number": 12,
    "position": 12,
    "private": false,
    "randomQuestionChoices": false,
    "required": false,
    "title": "T'aimes bien Supergirl ?",
    "type": "select",
    "validationRule": null,
  },
  Object {
    "__typename": "MultipleChoiceQuestion",
    "alwaysJumpDestinationQuestion": Object {
      "id": "UXVlc3Rpb246Mzg=",
      "number": 16,
      "title": "C'est la fin mais j'affiche quand même des choix",
    },
    "choices": Object {
      "edges": Array [
        Object {
          "node": Object {
            "color": null,
            "description": null,
            "id": "questionchoiceMarvelThorYes",
            "image": null,
            "title": "ui",
          },
        },
        Object {
          "node": Object {
            "color": null,
            "description": null,
            "id": "questionchoiceMarvelThorNo",
            "image": null,
            "title": "nn",
          },
        },
      ],
      "pageInfo": Object {
        "hasNextPage": false,
      },
      "totalCount": 2,
    },
    "description": null,
    "helpText": null,
    "id": "UXVlc3Rpb246Mzc=",
    "isOtherAllowed": false,
    "jumps": Array [],
    "number": 15,
    "position": 15,
    "private": false,
    "randomQuestionChoices": false,
    "required": false,
    "title": "T'aimes bien Thor ?",
    "type": "select",
    "validationRule": null,
  },
]
`;

exports[`validateResponses Should render correctly when empty 1`] = `
<div>
  <div
    className=""
  >
    <PrivateBox
      divClassName=""
      message="global.private"
      show={false}
    >
      <Field
        choices={Array []}
        component={[Function]}
        description={null}
        disabled={false}
        divClassName="reduced"
        help={null}
        id="toto-form-objectObject"
        label={
          <React.Fragment>
            <span
              className="visible-print-block"
            >
              2
              .
            </span>
             
            <span
              dangerouslySetInnerHTML={
                Object {
                  "__html": "ça roule ? <span class=\\"excerpt small\\"> global.optional</span>",
                }
              }
            />
          </React.Fragment>
        }
        name="[object Object].value"
        onChange={[Function]}
        type="textarea"
        typeForm="default"
        value={null}
      />
    </PrivateBox>
  </div>
  <div
    className=""
  >
    <PrivateBox
      divClassName=""
      message="global.private"
      show={false}
    >
      <Field
        choices={Array []}
        component={[Function]}
        description={null}
        disabled={false}
        divClassName="reduced"
        help={null}
        id="toto-form-objectObject"
        label={
          <React.Fragment>
            <span
              className="visible-print-block"
            >
              1
              .
            </span>
             
            <span
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Un nombre stp",
                }
              }
            />
          </React.Fragment>
        }
        name="[object Object].value"
        onChange={[Function]}
        type="number"
        typeForm="default"
        value={null}
      />
    </PrivateBox>
  </div>
  <div
    className=""
  >
    <PrivateBox
      divClassName=""
      message="global.private"
      show={true}
    >
      <Field
        cacheOptions={true}
        component={[Function]}
        description={null}
        disabled={false}
        divClassName="reduced"
        help={null}
        id="toto-form-objectObject"
        label={
          <React.Fragment>
            <span
              className="visible-print-block"
            >
              3
              .
            </span>
             
            <span
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Un héro stp (secret)",
                }
              }
            />
          </React.Fragment>
        }
        name="[object Object].value"
        options={
          Array [
            Object {
              "label": "Choice 1",
              "value": "Choice 1",
            },
            Object {
              "label": "Choice 2",
              "value": "Choice 2",
            },
          ]
        }
        selectFieldIsObject={true}
        type="select"
        typeForm="default"
      />
      <div
        className="visible-print-block form-fields"
      >
        <div
          className="radio"
        >
          Choice 1
        </div>
        <div
          className="radio"
        >
          Choice 2
        </div>
      </div>
      <ConditionalJumps
        jumps={Array []}
      />
    </PrivateBox>
  </div>
  <div
    className=""
  >
    <PrivateBox
      divClassName=""
      message="global.private"
      show={false}
    >
      <Field
        component={[Function]}
        description={null}
        disabled={false}
        help={null}
        id="toto-form-objectObject"
        label={
          <React.Fragment>
            <span
              className="visible-print-block"
            >
              4
              .
            </span>
             
            <span
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Envoyez-nous l'estimation financière de votre projet",
                }
              }
            />
          </React.Fragment>
        }
        name="[object Object].value"
        type="medias"
        typeForm="default"
      />
      <ConditionalJumps
        jumps={Array []}
      />
    </PrivateBox>
  </div>
</div>
`;
