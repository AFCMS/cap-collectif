user      capco capco;
pid       /var/run/nginx.pid;
daemon    off;
error_log stderr;

http {
    access_log stderr;
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 20m;

    # handle non-ssl https from the nginx load balancer
    map $http_x_forwarded_proto $fastcgi_https {
        default off;
        https on;
    }

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css text/javascript text/xml application/json application/x-javascript application/xml application/xml+rss image/svg+xml;

    server {
        listen 8080;
        root /var/www/web;
        server_name capco.prod;

        # strip app.php/ prefix if it is present
        rewrite ^/app\.php/?(.*)$ /$1 permanent;

        location / {
            index app.php;
            try_files $uri @rewriteapp;
        }

        location @rewriteapp {
            rewrite ^(.*)$ /app.php/$1 last;
        }

        # Fighting with Imagine? This little gem is amazing.
        location ~ ^/media/cache/.*/default/ {
            try_files $uri @rewriteapp;
        }

        location /export/ {
            internal;
        }

        location ~ ^/app.php(/|$) {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;

            include fastcgi_params;
            include environments;

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS off;
            fastcgi_param SERVER_NAME $http_host;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$ {
            return 404;
        }

        error_log  stderr;
        access_log stderr;
    }

    server {
       listen 8080;
       server_name  capco.dev capco.paris.fr;
       root /var/www/web;
       port_in_redirect off;

       # strip app.php/ prefix if it is present
       rewrite ^/app\.php/?(.*)$ /$1 permanent;

       location / {
           index app.php;
           try_files $uri @rewriteapp;
       }

       location @rewriteapp {
           rewrite ^(.*)$ /app.php/$1 last;
       }

       # Fighting with Imagine? This little gem is amazing.
       location ~ ^/media/cache/.*/default/ {
           try_files $uri @rewriteapp;
       }

       location /export/ {
           internal;
       }

       # simplesaml application
       location ^~ /simplesaml {
            alias /var/www/vendor/simplesamlphp/simplesamlphp/www;
            location ~ ^(?<prefix>/simplesaml)(?<script_name>.*?\.php)(?<path_info>/.*)?$ {
              include fastcgi_params;
              include environments;
              fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_param SCRIPT_FILENAME $document_root$script_name;
              fastcgi_param PATH_INFO $path_info;
              fastcgi_param HTTPS $fastcgi_https;
              fastcgi_param SERVER_PORT 80; # Required because we listen port 8080
              fastcgi_pass 127.0.0.1:9000;
            }
       }

       location ~ ^/app.php(/|$) {
           fastcgi_pass 127.0.0.1:9000;
           fastcgi_split_path_info ^(.+\.php)(/.*)$;

           include fastcgi_params;
           include environments;

           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
           fastcgi_param HTTPS on;
           fastcgi_param SERVER_NAME $http_host;
       }

       # return 404 for all other php files not matching the front controller
       # this prevents access to other php files you don't want to be accessible.
       location ~ \.php$ {
           return 404;
       }

       error_log  stderr;
       access_log stderr;
    }

    server {
        listen 443 ssl;
        root /var/www/web;
        server_name capco.dev capco.paris.fr;

        ssl_certificate /etc/ssl/certs/capco.crt;
        ssl_certificate_key /etc/ssl/private/capco.key;

        location / {
             proxy_pass http://127.0.0.1:80;
             proxy_set_header Host $http_host;
             proxy_set_header X-Forwarded-Host $http_host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto https;
             proxy_set_header HTTPS "on";
        }

        location ^~ /simplesaml {
            alias /var/www/vendor/simplesamlphp/simplesamlphp/www;
            location ~ ^(?<prefix>/simplesaml)(?<script_name>.*?\.php)(?<path_info>/.*)?$ {
              include fastcgi_params;
              include environments;
              fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_param SCRIPT_FILENAME $document_root$script_name;
              fastcgi_param PATH_INFO $path_info;
              fastcgi_param HTTPS $fastcgi_https;
              fastcgi_param SERVER_PORT 80; # Required because we listen port 8080
              fastcgi_pass 127.0.0.1:9000;
            }
       }

        error_log  stderr;
        access_log stderr;
    }


    server {
        listen 8080;
        root /var/www/web;
        server_name capco.test;

        ssl_certificate /etc/ssl/certs/capco.crt;
        ssl_certificate_key /etc/ssl/private/capco.key;

        # strip app_test.php/ prefix if it is present
        rewrite ^/app_test\.php/?(.*)$ /$1 permanent;

        location / {
            index app_test.php;
            try_files $uri @rewriteapp;
        }

        location @rewriteapp {
            rewrite ^(.*)$ /app_test.php/$1 last;
        }

        # Fighting with Imagine? This little gem is amazing.
        location ~ ^/media/cache/.*/default/ {
            try_files $uri @rewriteapp;
        }

        location ~ ^/app_test.php(/|$) {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;

            include fastcgi_params;
            include environments;

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS on;
            fastcgi_param SERVER_NAME $http_host;
        }

        error_log  stderr;
        access_log stderr;
    }

    server {
            listen 443 ssl;
            root /var/www/web;
            server_name capco.test;

            ssl_certificate /etc/ssl/certs/capco.crt;
            ssl_certificate_key /etc/ssl/private/capco.key;

            location / {
                 proxy_pass http://127.0.0.1:80;
                 proxy_set_header Host $http_host;
                 proxy_set_header X-Forwarded-Host $http_host;
                 proxy_set_header X-Real-IP $remote_addr;
                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                 proxy_set_header X-Forwarded-Proto https;
                 proxy_set_header HTTPS "on";
            }

            error_log  stderr;
            access_log stderr;
        }

}

events {}
