#!/bin/bash

echo "Configuring New Relic..."
sed -i 's/newrelic.appname = ""/newrelic.appname = '"$NR_INSTALL_NAME"'/' /etc/php5/*/conf.d/20-newrelic.ini
sed -i 's/newrelic.license = ""/newrelic.license = '"$NR_INSTALL_KEY"'/' /etc/php5/*/conf.d/20-newrelic.ini

cd /var/www

for directory in app/cache app/logs web/bundles; do
  if [ ! -d "$directory" ]; then
    echo "Creating '$directory' ..."
    mkdir -p -m 777 $directory
  fi
done

echo "Checking media permissions..."
chmod -R 777 web/media

echo "Clearing previous cache..."
rm -rf app/cache/*

echo "Checking if mysql is booted..."
while ! mysql --host=127.0.0.1 > /dev/null 2>&1;
  do sleep 1
  echo "Waiting mysql to boot..."
done
echo "Mysql is up"

su capco <<'EOF'

cd /var/www

# Migrate existing database or create one with default data
RESULT=`php app/console doctrine:migrations:status --env=prod 2>&1 | grep -o "Unknown database" | wc -l`
if [ "$RESULT" != "0" ]; then
    php app/console doctrine:database:create --if-not-exists --env=prod --no-interaction
    php app/console doctrine:schema:create --env=prod --no-interaction
    php app/console doctrine:migrations:version --add --all --env=prod --no-interaction
    php app/console capco:load-base-data --force --env=prod --no-interaction
else
    php app/console doctrine:migrations:migrate --env=prod --no-interaction
fi

php app/console cache:warmup --env=prod --no-interaction
php app/console assets:install --symlink --env=prod --no-interaction

echo "Checking if elasticsearch is booted..."
while ! curl http://localhost:9200 > /dev/null 2>&1; do sleep 1; done

echo "Elasticsearch has booted - Starting a daemon to populate the index."
php app/console fos:elastica:populate --env=prod --no-interaction &

EOF

exec php5-fpm -y /etc/service/php-fpm/fpm.conf -O
