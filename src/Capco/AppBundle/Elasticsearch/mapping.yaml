settings:
    number_of_shards: 1
    number_of_replicas: 0
    analysis:
        filter:
            french_elision:
                type: elision
                articles: [l, m, t, qu, n, s, j, d, c, jusqu, quoiqu, lorsqu, puisqu]
            french_stop:
                type: stop
                stopwords: _french_
            french_stemmer:
                type: stemmer
                language: light_french
            capco_autocomplete_filter:
                type: edge_ngram
                min_gram: 1
                max_gram: 15
        analyzer:
            capco_autocomplete:
                tokenizer: icu_tokenizer
                filter: ['lowercase', 'icu_folding', 'capco_autocomplete_filter']
                char_filter: ['html_strip']
            capco_sort:
                tokenizer: keyword
                filter: ['truncate', 'icu_collation']
                char_filter: ['html_strip']
            capco_standard:
                tokenizer: icu_tokenizer
                filter: ['lowercase', 'icu_folding']
                char_filter: ['html_strip']
            capco_french:
                tokenizer: icu_tokenizer
                filter:
                    ['lowercase', 'icu_folding', 'french_elision', 'french_stop', 'french_stemmer']
                char_filter: ['html_strip']
            tag_cloud:
                tokenizer: standard
                filter: ['lowercase', 'icu_folding', 'french_stop', 'french_elision']
                char_filter: ['html_strip']

# Only map the fields we need to search on.
mappings:
    dynamic: false
    properties:
        id: { type: keyword } # type:db ID
        objectType: { type: keyword } # replace ES < 6 "type" field
        slug: { type: keyword }
        createdAt: { type: date }
        email: &text_analysis_highlighted
            type: text
            analyzer: capco_french
            index_options: offsets
            fields:
                std: { type: text, analyzer: capco_standard }
        username: *text_analysis_highlighted
        biography: *text_analysis_highlighted
        firstname: *text_analysis_highlighted
        lastname: *text_analysis_highlighted
        enabled: { type: boolean }
        roles: { type: text }
        userType:
            type: object
            properties:
                id:
                    type: keyword
        vip: { type: boolean }
        participationsCountByProject:
            type: nested
            properties:
                project: &Project
                    type: object
                    properties:
                        id: { type: keyword }
                        visibility: { type: long }
                        restrictedViewerIds: { type: keyword }
                        authors: &Author
                            type: object
                            properties:
                                id: { type: keyword }
                                username: *text_analysis_highlighted
                                email: *text_analysis_highlighted
                                userType:
                                    type: object
                                    properties:
                                        id: { type: keyword }
                        locale: &Locale
                            type: object
                            properties:
                                id: { type: keyword }
                                code: { type: keyword }
                        count:
                            type: long
        participationsCountByStep:
            type: nested
            properties:
                step: &Step
                    type: object
                    properties:
                        id: { type: keyword }
                count:
                    type: long
        totalParticipationsCount: { type: long }
        participationsCountByConsultation:
            type: nested
            properties:
                consultation:
                    type: object
                    properties:
                        id: { type: keyword }
                count:
                    type: long
        body: *text_analysis_highlighted
        trashedAt: { type: date }
        trashedStatus: { type: keyword }
        updatedAt: { type: date }
        published: { type: boolean }
        publishedAt: { type: date }
        project: *Project
        step: *Step
        author: *Author
        consultation: &Consultation
            type: object
            properties:
                id: { type: keyword }
        opinion:
            properties:
                id: { type: keyword }
                published: { type: boolean }
                trashedAt: { type: date }
        opinionVersion:
            properties:
                id: { type: keyword }
                published: { type: boolean }
                trashedAt: { type: date }
        title: *text_analysis_highlighted
        authors: *Author
        visibility: { type: long }
        districts:
            type: object
            properties:
                id: { type: keyword }
                position:
                    type: long
                district:
                    type: object
                    properties:
                        id: { type: keyword }
                        name: *text_analysis_highlighted
        projectType:
            type: object
            properties:
                id: { type: keyword }
                title: { type: keyword }
        projectStatus: { type: keyword }
        contributionsCount: { type: long }
        themes:
            type: object
            properties:
                id: { type: keyword }
                slug: { type: keyword }
        eventCount: { type: long }
        locale:
            type: object
            properties:
                id: { type: keyword }
                code: { type: keyword }
        authorName: *text_analysis_highlighted
        proposal:
            type: object
            properties:
                id: { type: keyword }
                project: *Project
                author: *Author
                visible: { type: boolean }

        fullAddress: *text_analysis_highlighted
        startAt: { type: date }
        endAt: { type: date }
        isRegistrable: { type: boolean }
        isPresential: { type: boolean }
        link: *text_analysis_highlighted
        projects:
            type: object
            properties:
                id: { type: keyword }
                slug: { type: keyword }
        translations:
            type: object
            properties:
                locale: { type: keyword }
                slug: { type: keyword }

        visible: { type: boolean }
        proposalTitle: &text_analysis_highlighted_autocompleted
            type: text
            analyzer: capco_french
            index_options: offsets
            fields:
                std: { type: text, analyzer: capco_standard }
                autocomplete: { type: text, analyzer: capco_autocomplete }
        proposalBody: *text_analysis_highlighted_autocompleted
        reference: *text_analysis_highlighted
        deletedAt: { type: date }
        trashed: { type: boolean }
        draft: { type: boolean }
        commentsCount: { type: long }
        estimation: { type: float }
        district:
            type: object
            properties:
                id: { type: keyword }
        status:
            type: object
            properties:
                id: { type: keyword }
        proposalForm:
            type: object
            properties:
                id: { type: keyword }
        category:
            type: object
            properties:
                id: { type: keyword }
        theme:
            type: object
            properties:
                id: { type: keyword }
        selections:
            type: object
            properties:
                step: *Step
                status:
                    type: object
                    properties:
                        id: { type: keyword }
        pointsCount: { type: long }
        votesCount: { type: long }
        votesCountByStep:
            type: nested
            properties:
                step: *Step
                count:
                    type: long
        pointsCountByStep:
            type: nested
            properties:
                step: *Step
                count:
                    type: long
        proposalAnalysts:
            type: object
            properties:
                analyst: *Author
        supervisor: *Author
        decisionMaker: *Author
        analyses:
            type: nested
            properties:
                updatedBy: *Author
                state: { type: keyword }
        decision:
            type: object
            properties:
                updatedBy: *Author
                state: { type: keyword }
        assessment:
            type: object
            properties:
                updatedBy: *Author
                state: { type: keyword }
        progressStatus: { type: keyword }
        revisions:
            type: nested
            properties:
                author: *Author
                state: { type: keyword }
                createdAt: { type: date }

        position: { type: long }
        pinned: { type: boolean }
        votesCountOk: { type: long }
        votesCountNok: { type: long }
        votesCountMitige: { type: long }
        argumentsCount: { type: long }
        type:
            type: object
            properties:
                id: { type: keyword }

        abstract: *text_analysis_highlighted
        Author: *Author

        teaser: *text_analysis_highlighted

        private: { type: boolean }
        user: *Author
        isAccounted: { type: boolean }
        value: { type: long }

        source:
            type: object
            properties:
                id: { type: keyword }

        comment:
            type: object
            properties:
                id: { type: keyword }
                published: { type: boolean }
                trashedStatus: { type: keyword }

        label: *text_analysis_highlighted
        description: *text_analysis_highlighted
        color: { type: keyword }

        responseType: { type: keyword }
        textValue:
            type: text
            analyzer: capco_french
            index_options: offsets
            fields:
                std: { type: text, analyzer: capco_standard }
                tag: { type: text, analyzer: tag_cloud, fielddata: true }
        objectValue:
            type: object
            properties:
                labels: { type: keyword }
                other: { type: keyword }
        question:
            type: object
            properties:
                id: { type: keyword }
                type: { type: keyword }
        reply:
            type: object
            properties:
                id: { type: keyword }
                author: *Author
                createdAt: { type: date }
                published: { type: boolean }
        questionnaire:
            type: object
            properties:
                id: { type: keyword }

        #
        # This allow ous to monitore the usage of our API.
        #
        # This will move later to another index.
        #

        graphql_type: { type: keyword }
        graphql_field: { type: keyword }
        host: { type: keyword }
        graphql_schema: { type: keyword }
        clientId: { type: keyword }
