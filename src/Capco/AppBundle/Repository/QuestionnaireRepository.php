<?php

namespace Capco\AppBundle\Repository;

use Capco\AppBundle\Entity\AnalysisConfiguration;
use Doctrine\ORM\EntityRepository;
use Capco\AppBundle\Entity\ProposalForm;

/**
 * QuestionnaireRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionnaireRepository extends EntityRepository
{
    /**
     * @param $id
     *
     * @throws \Doctrine\ORM\NonUniqueResultException
     *
     * @return mixed
     */
    public function getOne($id)
    {
        $qb = $this->createQueryBuilder('q')
            ->addSelect('q', 'qaq', 'qt')
            ->leftJoin('q.questions', 'qaq')
            ->leftJoin('qaq.question', 'qt')
            ->andWhere('q.id = :id')
            ->setParameter('id', $id);

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getAvailableQuestionnaires()
    {
        $qb = $this->createQueryBuilder('q');
        $qb
            ->leftJoin(ProposalForm::class, 'prf', 'WITH', 'prf.evaluationForm = q.id')
            ->leftJoin(AnalysisConfiguration::class, 'ac', 'WITH', 'ac.evaluationForm = q.id')
            ->leftJoin('q.proposalForm', 'pf')
            ->where(
                $qb
                    ->expr()
                    ->andX(
                        $qb->expr()->isNull('pf.id'),
                        $qb->expr()->isNull('q.step'),
                        $qb->expr()->isNull('prf.evaluationForm'),
                        $qb->expr()->isNull('ac.evaluationForm')
                    )
            );

        return $qb->getQuery()->execute();
    }
}
