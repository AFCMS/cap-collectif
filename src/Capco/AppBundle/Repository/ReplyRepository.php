<?php

namespace Capco\AppBundle\Repository;

use Capco\AppBundle\Entity\Questionnaire;
use Doctrine\ORM\EntityRepository;
use Capco\UserBundle\Entity\User;

/**
 * ReplyRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReplyRepository extends EntityRepository
{
    protected function getIsEnabledQueryBuilder()
    {
        return $this->createQueryBuilder('reply')
            ->andWhere('reply.enabled = :enabled')
            ->setParameter('enabled', true);
    }

    public function countPublishedForQuestionnaire(Questionnaire $questionnaire)
    {
        $qb = $this
            ->getIsEnabledQueryBuilder()
            ->select('COUNT(reply.id) as repliesCount')
            ->leftJoin('reply.questionnaire', 'questionnaire')
            ->andWhere('questionnaire.id = :questionnaireId')
            ->setParameter('questionnaireId', $questionnaire->getId())
        ;

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function getOneForUserAndQuestionnaire(Questionnaire $questionnaire, User $user)
    {
        $qb = $this
            ->getIsEnabledQueryBuilder()
            ->andWhere('reply.questionnaire = :questionnaire')
            ->andWhere('reply.author = :user')
            ->setParameter('questionnaire', $questionnaire)
            ->setParameter('user', $user)
        ;

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getEnabledByQuestionnaireAsArray(Questionnaire $questionnaire)
    {
        $qb = $this->getIsEnabledQueryBuilder()
            ->addSelect('author')
            ->leftJoin('reply.author', 'author')
            ->andWhere('reply.questionnaire = :questionnaire')
            ->setParameter('questionnaire', $questionnaire)
        ;

        return $qb->getQuery()->getArrayResult();
    }
}
