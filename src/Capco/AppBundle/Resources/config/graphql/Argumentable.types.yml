Argumentable:
  type: interface
  inherits:
    - Node
  config:
    description: 'An argumentable'
    resolveType: "@=resolver('contribution_type', [value])"
    fields:
      contribuable:
        type: 'Boolean!'
      arguments:
        description: 'The arguments related to the argumentable.'
        type: 'ArgumentConnection!'
        argsBuilder: 'Relay::Connection'
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Argumentable\\ArgumentableArgumentsResolver", [value, args])'
        args:
          orderBy:
            type: 'ArgumentOrder'
            defaultValue: { field: PUBLISHED_AT, direction: DESC }
          type:
            description: 'If provided, returns the arguments of this particular type.'
            type: 'ArgumentValue'
      viewerArgumentsUnpublished:
        access: "@=hasRole('ROLE_USER')"
        description: 'The unpublished arguments of to the viewer.'
        type: 'ArgumentConnection!'
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Argumentable\\ArgumentableViewerArgumentsUnpublishedResolver", [value, args, getUser()])'
        argsBuilder: 'Relay::Connection'
        args:
          type:
            description: 'If provided, returns the arguments of this particular type.'
            type: 'ArgumentValue'
