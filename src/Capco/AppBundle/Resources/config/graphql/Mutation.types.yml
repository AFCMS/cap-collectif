Mutation:
    type: object
    config:
        fields:
        # User notifications
          changeUserNotificationsConfiguration:
                access: "@=hasRole('ROLE_USER')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: ChangeUserNotificationsConfigurationInput
                    payloadType: ChangeUserNotificationsConfigurationPayload
                    mutateAndGetPayload: "@=mutation('changeUserNotificationsConfiguration', [value, user])"
        # User
          requestUserArchive:
                access: "@=hasRole('ROLE_USER')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: RequestUserArchiveInput
                    payloadType: RequestUserArchivePayload
                    mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\RequestUserArchiveMutation", [value, user])'
         # Proposal
          changeProposalPublicationStatus:
                access: "@=hasRole('ROLE_ADMIN')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: ChangeProposalPublicationStatusInput
                    payloadType: ChangeProposalPublicationStatusPayload
                    mutateAndGetPayload: "@=mutation('changeProposalPublicationStatus', [value, user])"
          changeProposalContent:
                access: "@=hasRole('ROLE_USER')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: ChangeProposalContentInput
                    payloadType: ChangeProposalContentPayload
                    mutateAndGetPayload: "@=mutation('changeProposalContent', [value, user])"
          createProposal:
                access: "@=hasRole('ROLE_USER')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: CreateProposalInput
                    payloadType: CreateProposalPayload
                    mutateAndGetPayload: "@=mutation('createProposal', [value, user])"
          createProposalFusion:
               access: "@=hasRole('ROLE_ADMIN')"
               builder: "Relay::Mutation"
               builderConfig:
                   inputType: CreateProposalFusionInput
                   payloadType: CreateProposalFusionPayload
                   mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\CreateProposalFusionMutation", [value, user])'
          updateProposalFusion:
               access: "@=hasRole('ROLE_ADMIN')"
               builder: "Relay::Mutation"
               builderConfig:
                   inputType: UpdateProposalFusionInput
                   payloadType: UpdateProposalFusionPayload
                   mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\UpdateProposalFusionMutation", [value])'
          changeProposalNotation:
                access: "@=hasRole('ROLE_ADMIN')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: ChangeProposalNotationInput
                    payloadType: ChangeProposalNotationPayload
                    mutateAndGetPayload: "@=mutation('changeProposalNotation', [value])"
          changeProposalEvaluers:
                access: "@=hasRole('ROLE_ADMIN')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: ChangeProposalEvaluersInput
                    payloadType: ChangeProposalEvaluersPayload
                    mutateAndGetPayload: "@=mutation('changeProposalEvaluers', [value])"
          followProposal:
                access: "@=hasRole('ROLE_USER')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: FollowProposalInput
                    payloadType: FollowProposalPayload
                    mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\FollowProposalMutation", [value["proposalId"], value["notifiedOf"], user])'
          updateFollowProposal:
                access: "@=hasRole('ROLE_USER')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: UpdateFollowProposalInput
                    payloadType: UpdateFollowProposalPayload
                    mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\UpdateFollowProposalMutation", [value["proposalId"], value["notifiedOf"], user])'
          unfollowProposal:
                access: "@=hasRole('ROLE_USER')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: UnfollowProposalInput
                    payloadType: UnfollowProposalPayload
                    mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\UnfollowProposalMutation", [value, user])'
          selectProposal:
                access: "@=hasRole('ROLE_ADMIN')"
                builder: "Relay::Mutation"
                builderConfig:
                    inputType: SelectProposalInput
                    payloadType: SelectProposalPayload
                    mutateAndGetPayload: "@=mutation('selectProposal', [value['proposalId'], value['stepId'], value['statusId']])"
          unselectProposal:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: UnselectProposalInput
                  payloadType: UnselectProposalPayload
                  mutateAndGetPayload: "@=mutation('unselectProposal', [value['proposalId'], value['stepId']])"
          changeSelectionStatus:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: ChangeSelectionStatusInput
                  payloadType: ChangeSelectionStatusPayload
                  mutateAndGetPayload: "@=mutation('changeSelectionStatus', [ value['proposalId'], value['stepId'], value['statusId'] ])"
          changeCollectStatus:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: ChangeCollectStatusInput
                  payloadType: ChangeCollectStatusPayload
                  mutateAndGetPayload: "@=mutation('changeCollectStatus', [value['proposalId'], value['statusId'] ])"
          changeProposalProgressSteps:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: ChangeProposalProgressStepsInput
                  payloadType: ChangeProposalProgressStepsPayload
                  mutateAndGetPayload: "@=mutation('changeProgressSteps', [value])"
          deleteProposal:
              access: "@=hasRole('ROLE_SUPER_ADMIN') or service('capco.proposal.helper').isAuthor(args['input']['proposalId'], user)"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: DeleteProposalInput
                  payloadType: DeleteProposalPayload
                  mutateAndGetPayload: "@=mutation('deleteProposal', [value['proposalId']])"

          # Proposal Form
          createProposalForm:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: CreateProposalFormInput
                  payloadType: CreateProposalFormPayload
                  mutateAndGetPayload: "@=mutation('createProposalForm', [value])"
          changeDistrict:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: ChangeDistrictInput
                  payloadType: ChangeDistrictPayload
                  mutateAndGetPayload: "@=mutation('changeDistrict', [value])"
          updateProposalForm:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: UpdateProposalFormInput
                  payloadType: UpdateProposalFormPayload
                  mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\UpdateProposalFormMutation", [value])'
          updateProposalFormNotificationsConfiguration:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: UpdateProposalFormNotificationsConfigurationInput
                  payloadType: UpdateProposalFormNotificationsConfigurationPayload
                  mutateAndGetPayload: "@=mutation('updateProposalFormNotificationsConfiguration', [value])"
          setEvaluationFormInProposalForm:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: SetEvaluationFormInProposalFormInput
                  payloadType: SetEvaluationFormInProposalFormPayload
                  mutateAndGetPayload: "@=mutation('setEvaluationFormInProposalForm', [value])"
          # Proposal Evaluation
          changeProposalEvaluation:
              access: "@=hasRole('ROLE_USER')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: ChangeProposalEvaluationInput
                  payloadType: ChangeProposalEvaluationPayload
                  mutateAndGetPayload: "@=mutation('changeProposalEvaluation', [value, user])"
        # Groups
          createGroup:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: CreateGroupInput
                  payloadType: CreateGroupPayload
                  mutateAndGetPayload: "@=mutation('createGroup', [value])"
          updateGroup:
              access: "@=hasRole('ROLE_ADMIN')"
              builder: "Relay::Mutation"
              builderConfig:
                  inputType: UpdateGroupInput
                  payloadType: UpdateGroupPayload
                  mutateAndGetPayload: "@=mutation('updateGroup', [value])"
          deleteGroup:
            access: "@=hasRole('ROLE_ADMIN')"
            builder: "Relay::Mutation"
            builderConfig:
              inputType: DeleteGroupInput
              payloadType: DeleteGroupPayload
              mutateAndGetPayload: "@=mutation('deleteGroup', [value['groupId']])"
          deleteUserInGroup:
            access: "@=hasRole('ROLE_ADMIN')"
            builder: "Relay::Mutation"
            builderConfig:
              inputType: DeleteUserInGroupInput
              payloadType: DeleteUserInGroupPayload
              mutateAndGetPayload: "@=mutation('deleteUserInGroup', [value['userId'], value['groupId']])"
          addUsersInGroup:
            access: "@=hasRole('ROLE_ADMIN')"
            builder: "Relay::Mutation"
            builderConfig:
              inputType: AddUsersInGroupInput
              payloadType: AddUsersInGroupPayload
              mutateAndGetPayload: "@=mutation('addUsersInGroup', [value['users'], value['groupId']])"
          updateProfile:
            access: "@=hasRole('ROLE_USER')"
            builder: "Relay::Mutation"
            builderConfig:
              inputType: UpdateProfileInput
              payloadType: UpdateProfilePayload
              mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\UpdateProfileMutation", [value, user])'
          updateProfilePassword:
            access: "@=isAuthenticated()"
            builder: "Relay::Mutation"
            builderConfig:
              inputType: UpdateProfilePasswordInput
              payloadType: UpdateProfilePasswordPayload
              mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\UpdateProfilePasswordMutation", [value, user])'
          updateProfilePersonalData:
            access: '@=hasRole("ROLE_USER")'
            builder: "Relay::Mutation"
            builderConfig:
              inputType: UpdateProfilePersonalDataInput
              payloadType: UpdateProfilePersonalDataPayload
              mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\UpdateProfilePersonalDataMutation", [value, user])'
          updateProfilePublicData:
            access: '@=hasRole("ROLE_USER")'
            builder: "Relay::Mutation"
            builderConfig:
              inputType: UpdateProfilePublicDataInput
              payloadType: UpdateProfilePublicDataPayload
              mutateAndGetPayload: '@=mutation("Capco\\AppBundle\\GraphQL\\Mutation\\UpdateProfilePublicDataMutation", [value, user])'
