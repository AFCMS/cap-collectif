Opinion:
    type: object
    config:
        description: "A contribution"
        interfaces: [TrashableContribution, ContributionWithAuthor, EditableContribution]
        fields:
            createdAt:
                type: "String!"
                description: "Date of creation."
                resolve: "@=resolver('proposition_createdAt', [value])"
            updatedAt:
                type: "String!"
                description: "Date of last edition."
                resolve: "@=resolver('proposition_updatedAt', [value])"
            url:
                type: "String!"
                description: "The url of contribution."
                resolve: "@=resolver('proposition_url', [value])"
            author:
                type: "Person!"
                description: "The author of the contribution."
            expired:
                type: "Boolean!"
            published:
                type: "Boolean!"
            trashed:
                type: "Boolean!"
            trashedAt:
                type: "String"
                description: "Date of trash."
                resolve: "@=resolver('proposition_trashedAt', [value])"
            trashedReason:
                type: "String"
                description: "Reason of trash."
            votesCount:
                type: "Int!"
                description: "Number of votes."
                resolve: "@=resolver('proposition_votesCount', [value])"
            votesCountOk:
                type: "Int!"
                description: "Number of ok votes."
            votesCountMitige:
                type: "Int!"
                description: "Number of mitige votes."
            votesCountNok:
                type: "Int!"
                description: "Number of negative votes."
            argumentsCount:
                type: "Int!"
                description: "Number of arguments."
            argumentsCountFor:
                type: "Int!"
                description: "Number of for arguments."
                resolve: "@=resolver('proposition_argumentsCountFor', [value])"
            argumentsCountAgainst:
                type: "Int!"
                description: "Number of against arguments."
                resolve: "@=resolver('proposition_argumentsCountAgainst', [value])"
            versionsCount:
                type: "Int!"
                description: "Number of versions."
            sourcesCount:
                type: "Int!"
                description: "Number of sources."
            votes:
                type: "[PropositionVote]"
                args:
                    first:
                        type: "Int"
                resolve: "@=resolver('proposition_votes', [value, args])"
            id:
                type: "Int!"
                description: "The content of the contribution."
            title:
                type: "String!"
                description: "The title of the contribution."
            body:
                type: "String!"
                description: "The content of the contribution."
            arguments:
                type: "[Argument]"
                args:
                    type:
                        description: "If omitted, returns all arguments. If provided, returns the arguments of this particular type."
                        type: "ArgumentValue"
                description: "The arguments related to the contribution."
                resolve: "@=resolver('proposition_arguments', [value, args])"
            versions:
                type: "[Version]"
                description: "The versions related to the contribution."
            sources:
                type: "[Source]"
                description: "The sources related to the contribution."
            section:
                type: "Section!"
                description: "Where the proposition has been placed."
                resolve: "@=resolver('proposition_section', [value])"
            reportings:
                type: "[Reporting]"
                resolve: "@=resolver('proposition_reportings', [value])"
