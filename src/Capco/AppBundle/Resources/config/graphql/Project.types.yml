Project:
  type: object
  inherits: [Node]
  config:
    interfaces: [Node]
    description: 'A participatory project.'
    fields:
      steps:
        type: '[Step!]!'
        resolve: "@=resolver('project_steps', [value])"
      title:
        type: 'String!'
      contributors:
        type: 'UserConnection!'
        description: 'A list of contributor associated with the project.'
        argsBuilder: 'Relay::Connection'
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectContributorResolver", [value, args])'
      url:
        type: 'URI'
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectUrlResolver", [value])'
      votableSteps:
        type: '[ProposalStep!]!'
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectVotableStepsResolver", [value])'
      visibility:
        type: 'ProjectVisibility!'
        description: 'The visibility of project'
      adminUrl:
        type: 'URI'
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectAdminUrlResolver", [value])'
      opinionCanBeFollowed:
        type: 'Boolean!'
        description: 'State of activation of Opinion subscription.'
