ProposalForm:
    type: object
    config:
        description: "A budget form"
        interfaces: [Node]
        fields:
            id:
                type: "ID!"
            reference:
                type: "String!"
            description:
                type: "String"
            summaryHelpText:
                type: "String"
                resolve: "@=resolver('proposal_form_summaryHelpText', [value])"
            illustrationHelpText:
                type: "String"
            title:
                type: "String!"
            proposals:
                type: "ProposalConnection!"
                resolve: "@=resolver('proposal_form_proposals', [value, args, user, request])"
                args:
                  district:
                    type: "ID"
                  userType:
                    type: "ID"
                  category:
                    type: "ID"
                  status:
                    type: "ID"
                  theme:
                    type: "ID"
                  term:
                    type: "String"
                  orderBy:
                    type: "ProposalOrder"
                    description: "Order for connection."
                    defaultValue: { field: "CREATED_AT", direction: "ASC" }
                  affiliations:
                    type: "[ProposalAffiliation]"
                  after:
                    type: "String"
                    description: "Returns the elements in the list that come after the specified global ID."
                  first:
                    type: "Int"
                    defaultValue: 10
                    description: "Returns the first n elements from the list."
                  before:
                    type: "String"
                    description: "Returns the elements in the list that come before the specified global ID."
                  last:
                    type: "Int"
                    description: "Returns the last n elements from the list."
            categories:
                type: "[ProposalCategory!]!"
                resolve: "@=resolver('proposal_form_categories', [value])"
            usingThemes:
                type: "Boolean!"
            contribuable:
                type: "Boolean!"
            themeMandatory:
                type: "Boolean!"
            themeHelpText:
                type: "String"
            usingDistrict:
                type: "Boolean!"
            commentable:
                type: "Boolean!"
            costable:
                type: "Boolean!"
            proposalInAZoneRequired:
                type: "Boolean!"
            districts:
                args:
                  order:
                    type: "DistrictOrderField"
                    defaultValue: "ALPHABETICAL"
                resolve: "@=resolver('proposal_form_districts', [value, args['order']])"
                type: "[District!]!"
            districtMandatory:
                type: "Boolean!"
            districtHelpText:
                type: "String"
            usingCategories:
                type: "Boolean!"
            categoryMandatory:
                type: "Boolean!"
            categoryHelpText:
                type: "String"
            usingAddress:
                type: "Boolean!"
            titleHelpText:
                type: "String"
            descriptionHelpText:
                type: "String"
            addressHelpText:
                type: "String"
            questions:
                type: "[Question!]!"
                resolve: "@=resolver('proposal_form_questions', [value])"
            latMap:
                type: "Float"
            lngMap:
                type: "Float"
            zoomMap:
                type: "Int"
            url:
                type: "URI!"
                description: "The HTTP url for this proposal form."
                resolve: "@=resolver('proposal_form_url', [value])"
            notificationsConfiguration:
                type: "NotificationsConfiguration!"
            evaluationForm:
                type: "EvaluationForm"
                description: "Get the evaluation form of the proposal form"
            step:
                type: "CollectStep"
                description: "Identifies the step that use the proposal form."
            allowAknowledge:
                type: "Boolean!"
