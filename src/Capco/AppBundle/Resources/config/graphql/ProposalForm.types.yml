ProposalForm:
    type: object
    inherits: [Node]
    config:
        description: "A budget form"
        interfaces: [Node]
        fields:
            reference:
                type: "String!"
            description:
                type: "String"
            summaryHelpText:
                type: "String"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormSummaryHelpTextResolver", [value])'
            illustrationHelpText:
                type: "String"
            title:
                type: "String!"
            proposals:
                type: "ProposalConnection!"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormProposalsResolver", [value, args, getUser(), serv("request_stack")])'
                args:
                  district:
                    type: "ID"
                    description: "If non-null, filters proposals with the given district."
                  userType:
                    type: "ID"
                    description: "If non-null, filters proposals with the given type of author."
                  category:
                    type: "ID"
                    description: "If non-null, filters proposals with the given category."
                  status:
                    type: "ID"
                    description: "If non-null, filters proposals with the given status."
                  theme:
                    type: "ID"
                    description: "If non-null, filters proposals with the given theme."
                  term:
                    type: "String"
                    description: "If non-null, filters proposals with the given string to look for."
                  orderBy:
                    type: "ProposalOrder"
                    description: "Ordering options for proposals returned from the connection."
                    defaultValue: { field: "CREATED_AT", direction: "ASC" }
                  affiliations:
                    type: "[ProposalAffiliation]"
                    description: "Affiliation options for proposals returned from the connection."
                  after:
                    type: "String"
                    description: "Returns the elements in the list that come after the specified global ID."
                  first:
                    type: "Int"
                    defaultValue: 20
                    description: "Returns the first n elements from the list."
                  before:
                    type: "String"
                    description: "Returns the elements in the list that come before the specified global ID."
                  last:
                    type: "Int"
                    description: "Returns the last n elements from the list."
            categories:
                type: "[ProposalCategory!]!"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormCategoriesResolver", [value])'
                description: "Available categories for proposals of this form."
            usingThemes:
                type: "Boolean!"
            contribuable:
                type: "Boolean!"
            themeMandatory:
                type: "Boolean!"
            themeHelpText:
                type: "String"
            usingDistrict:
                type: "Boolean!"
            commentable:
                type: "Boolean!"
            costable:
                type: "Boolean!"
            proposalInAZoneRequired:
                type: "Boolean!"
            districts:
                type: "[District!]!"
                args:
                  order:
                    type: "DistrictOrderField"
                    defaultValue: "ALPHABETICAL"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormDistrictsResolver", [value, args["order"]])'
            districtMandatory:
                type: "Boolean!"
            districtHelpText:
                type: "String"
            usingCategories:
                type: "Boolean!"
            categoryMandatory:
                type: "Boolean!"
            categoryHelpText:
                type: "String"
            usingAddress:
                type: "Boolean!"
            titleHelpText:
                type: "String"
            descriptionHelpText:
                type: "String"
            addressHelpText:
                type: "String"
            questions:
                type: "[Question!]!"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormQuestionsResolver", [value])'
            latMap:
                type: "Float"
            lngMap:
                type: "Float"
            zoomMap:
                type: "Int"
            url:
                type: "URI!"
                description: "The HTTP url for this proposal form."
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormUrlResolver", [value])'
            notificationsConfiguration:
                type: "NotificationsConfiguration!"
            evaluationForm:
                type: "EvaluationForm"
                description: "Get the evaluation form of the proposal form"
            step:
                type: "CollectStep"
                description: "Identifies the step that use the proposal form."
            allowAknowledge:
                type: "Boolean!"
