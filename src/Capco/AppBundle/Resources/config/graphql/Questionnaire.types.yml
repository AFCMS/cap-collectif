Questionnaire:
  type: object
  inherits: [Node]
  config:
    interfaces: [Node]
    fields:
      title:
        type: 'String!'
      anonymousAllowed:
        type: 'Boolean!'
      description:
        type: 'String'
      multipleRepliesAllowed:
        type: 'Boolean!'
      contribuable:
        type: 'Boolean!'
        resolve: '@=value.canContribute()'
        description: 'accept answers or not'
      phoneConfirmationRequired:
        type: 'Boolean!'
        resolve: '@=value.isPhoneConfirmationRequired()'
      questions:
        type: '[Question!]!'
        resolve: "@=resolver('questionnaire_questions', [value])"
      viewerReplies:
        type: '[Reply!]!'
        access: '@=isAuthenticated()'
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\QuestionnaireViewerRepliesResolver", [value, getUser()])'
      acknowledgeReplies:
        type: 'Boolean!'
      phoneConfirmation:
        type: 'Boolean!'
      participants:
        type: 'ParticipantConnection!'
        argsBuilder: 'Relay::Connection'
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\QuestionnaireParticipantsResolver", [value, args])'
      userHasReply:
        type: 'Boolean!'
        description: 'Whether the user has reply to a questionnaire.'
        args:
          login:
            type: 'String!'
            description: "The user's login."
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\UserHasReplyResolver", [value, args])'
