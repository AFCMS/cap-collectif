Reply:
    type: object
    config:
        description: "A Reply"
        interfaces: [Node, Contribution]
        fields:
            id:
                type: "ID!"
            author:
                type: "User!"
            enabled:
                type: "Boolean!"
            private:
                type: "Boolean!"
            createdAt:
                type: "DateTime!"
            responses:
                type: "[Response]!"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Reply\\ReplyResponsesResolver", [value])'
            author:
                type: "User!"
                description: "The author of the contribution."
            updatedAt:
                type: "DateTime"
                description: "The updated date."
            expired:
                type: "Boolean!"
            questionnaire:
                type: "Questionnaire!"
                description: "Identifies the form where the contribution was submitted."
            responses:
                type: "[Response]!"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ResponsesResolver", [value])'
            kind:
                type: "String!"
                resolve: "@=value.getKind()"
            related:
                type: "Contribution"
                description: "Return the related contribution if the contribution is related to another."
            viewerCanDelete:
                type: "Boolean!"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Reply\\ReplyViewerCanDeleteResolver", [value, getUser()])'
            url:
                type: "URI!"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Reply\\ReplyUrlResolver", [value])'
