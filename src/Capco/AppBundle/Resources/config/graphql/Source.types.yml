Source:
  type: object
  inherits:
    [
      Node,
      Publishable,
      Contribution,
      Reportable,
      Trashable,
      ContributionWithAuthor,
      EditableContribution,
    ]
  config:
    description: 'A source'
    interfaces:
      [
        Node,
        Publishable,
        Contribution,
        Reportable,
        Trashable,
        ContributionWithAuthor,
        EditableContribution,
      ]
    fields:
      createdAt:
        type: 'DateTime!'
        description: 'Identifies the date and time when the object was created.'
      viewerHasReport:
        resolve: '@=value.userHasReport(getUser())'
      votesCount:
        type: 'Int!'
      contribuable:
        type: 'Boolean!'
        resolve: '@=value.canContribute()'
      viewerHasVote:
        type: 'Boolean!'
        resolve: false
        access: "@=hasRole('ROLE_USER')"
      category:
        type: SourceCategory
      link:
        type: 'URI!'
        description: 'The link of the source.'
      title:
        type: 'String!'
        description: 'The title of the source.'
      body:
        type: 'String!'
        description: 'The content of the source.'
      kind:
        resolve: 'source'
      show_url:
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Source\\SourceUrlResolver", [value])'
      url:
        resolve:
          '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Source\\SourceUrlResolver", [value])'
