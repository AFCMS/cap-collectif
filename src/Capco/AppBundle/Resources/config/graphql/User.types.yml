User:
    type: object
    config:
        description: "A user is an individual's account."
        interfaces: [Node]
        fields:
            id:
                type: "ID!"
                description: "The id of the user."
            vip:
                type: "Boolean!"
            media:
                type: "Media"
                description: "The profile picture of the user."
            email:
                type: "String!"
                description: "email."
                resolve: "@=resolver('user_email', [value])"
            displayName:
                type: "String!"
            username:
                type: "String"
                description: "Username of the user."
            show_url:
                type: "URI"
                description: "URL to user profile, null if the feature profiles is disabled."
                resolve: "@=resolver('user_show_url', [value])"
            createdAt:
                type: "DateTime!"
                description: "Identifies the date and time when the object was created."
            updatedAt:
                type: "String"
                description: "Updated date of the user."
                resolve: "@=resolver('user_updatedAt', [value])"
            lastLogin:
                type: "String"
                description: "Last connection of the user."
                resolve: "@=resolver('user_lastLogin', [value])"
            enabled:
                type: "Boolean!"
                description: "Is user is activated."
            notificationsConfiguration:
                type: "UserNotificationsConfiguration!"
                description: "A user notifications preferences"
            locked:
                type: "Boolean!"
            phoneConfirmed:
                type: "Boolean!"
            expiresAt:
                type: "String"
            phoneConfirmationSentAt:
                type: "String"
                resolve: "@=resolver('user_phoneConfirmationSentAt', [value])"
            gender:
                type: "String"
                resolve: "@=resolver('user_gender', [value])"
            firstname:
                type: "String"
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(value, user)'
            lastname:
                type: "String"
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(value, user)'
            dateOfBirth:
                type: "String"
                resolve: "@=resolver('user_dateOfBirth', [value])"
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(value, user)'
            roles:
                type: "[String]"
                description: "Unattended roles as array."
            rolesText:
                type: "String"
                resolve: "@=resolver('user_rolesText', [value])"
                description: "Array of roles converted and translated to string."
            website:
                type: "String"
            biography:
                type: "String"
            address:
                type: "String"
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(value, user)'
            address2:
                type: "String"
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(value, user)'
            zipCode:
                type: "String"
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(value, user)'
            city:
                type: "String"
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(value, user)'
            phone:
                type: "String"
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(value, user)'
            googleId:
                type: "String"
            facebookId:
                type: "String"
            samlId:
                type: "String"
            opinionsCount:
                type: "Int!"
            opinionVotesCount:
                type: "Int!"
            opinionVersionsCount:
                type: "Int!"
            argumentsCount:
                type: "Int!"
            argumentVotesCount:
                type: "Int!"
            proposalsCount:
                type: "Int!"
            proposalVotesCount:
                type: "Int!"
            commentVotesCount:
                type: "Int!"
            sourcesCount:
                type: "Int!"
            repliesCount:
                type: "Int!"
            postCommentsCount:
                type: "Int!"
            eventCommentsCount:
                type: "Int!"
            projectsCount:
                type: "Int!"
            userType:
                type: "UserType"
                description: "The type of the person."
            consentExternalCommunication:
                type: "Boolean!"
                description: "Is user accepted the external communication during the registration."
            followingProposals:
                type: "ProposalConnection!"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Proposal\\ProposalsFollowedByUserResolver", [value, args])'
                description: "Array of proposals followed by current user."
                args:
                    orderBy:
                      type: "String"
                      description: "Ordering options for followers returning from the connection"
                    after:
                      type: "String"
                      description: "Returns the elements in the list that come after the specified global ID."
                    first:
                      type: "Int"
                      defaultValue: 32
                      description: "Returns the first n elements from the list."
                    before:
                      type: "String"
                      description: "Returns the elements in the list that come before the specified global ID."
                    last:
                      type: "Int"
                      description: "Returns the last n elements from the list."
            contributionsCount:
                type: "Int!"
                description: "Total of contributions count"
            expired:
                type: "Boolean!"
