InternalQuery:
  type: object
  inherits:
    - PreviewQuery
  config:
    name: Query
    description: 'Root of the schema.'
    fields:
      viewer:
        type: 'InternalUser!'
      themes:
        description: 'Lookup themes.'
        type: '[Theme!]!'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\QueryThemesResolver")'
      mapTokens:
        type: '[MapToken!]!'
        description: 'Get the available map tokens'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\QueryMapTokensResolver")'
      mapToken:
        type: 'MapToken'
        description: 'Search a particular map token by its provider'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\QueryMapTokenResolver", [args])'
        args:
          provider:
            type: 'MapTokenProvider!'
            description: 'The map provider'
      siteFavicon:
        type: 'SiteImage!'
        description: 'Get the current favicon'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\SiteFaviconQueryResolver")'
      registrationForm:
        type: 'InternalRegistrationForm'
        description: 'Get the current registration form'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\RegistrationFormQueryResolver")'
      projects:
        type: 'ProjectConnection!'
      events:
        type: 'InternalEventConnection!'
      projectAuthors:
        type: '[InternalUser!]!'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectAuthorsResolver", [args, getUser()])'
      projectTypes:
        type: '[ProjectType!]!'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectTypesResolver", [args, getUser()])'
      users:
        type: 'InternalUserConnection!'
        argsBuilder: 'Relay::Connection'
        args:
          superAdmin:
            type: 'Boolean'
            defaultValue: false
            description: 'Remove super admin from export.'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\UserQueryResolver", [args])'
      userSearch:
        type: '[InternalUser]'
        args:
          displayName:
            type: 'String'
            defaultValue: null
            description: 'Filter by displayName.'
          notInIds:
            type: '[String]'
            defaultValue: null
            description: 'Return all users except the ones in the array.'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\UserSearchQueryResolver", [args])'
      consultations:
        type: '[InternalConsultation!]!'
        args:
          id:
            description: 'If omitted, returns all consultations. If provided, returns the consultation of the particular id.'
            type: 'ID'
        resolve: "@=resolver('consultation', [args])"
      groups:
        description: 'Lookup groups.'
        type: '[Group!]!'
        access: "@=hasRole('ROLE_ADMIN')"
        resolve: "@=resolver('groups')"
      proposalForms:
        description: 'Lookup forms.'
        type: '[ProposalForm]!'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\QueryProposalFormResolver")'
      availableDistrictsForLocalisation:
        type: '[ProposalDistrict!]!'
        description: 'Lookup availables districts on a proposalForm for a given address.'
        args:
          proposalFormId:
            type: 'ID!'
          latitude:
            type: 'Float!'
          longitude:
            type: 'Float!'
        resolve: "@=resolver('query_available_districts_for_location', [args['proposalFormId'], args['latitude'], args['longitude']])"
      votesByContribution:
        type: '[ProposalVote!]!'
        description: 'TO BE REMOVED'
        args:
          contribution:
            type: 'ID!'
        resolve: "@=resolver('votesByContribution', [args])"
      contributions:
        type: '[Opinion!]!'
        description: 'TO BE REMOVED'
        args:
          consultation:
            description: 'Returns all contributions of the provided consultation.'
            type: 'ID!'
        resolve: "@=resolver('contributions', [args])"
      question:
        type: 'Question!'
        description: 'TO BE REMOVED'
        args:
          id:
            type: 'Int!'
        resolve: "@=resolver('query_question', [args])"
      availableQuestionnaires:
        type: '[InternalQuestionnaire!]!'
        resolve: "@=resolver('query_get_available_questionnaires')"
      projectDistricts:
        description: 'List all the district project in the platform.'
        type: 'ProjectDistrictConnection!'
        argsBuilder: 'Relay::Connection'
        args:
          first:
            type: 'Int'
            defaultValue: 1000
        access: "@=hasRole('ROLE_ADMIN')"
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\District\\QueryProjectDistrictResolver", [args])'
