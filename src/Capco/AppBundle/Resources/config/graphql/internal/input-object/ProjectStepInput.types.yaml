# Because we can currently not create Input union in GraphQL, the ProjectStep input
# must have all posible fields for all different concrete implementations of a Step,
# that mean that all field that are non shared must be declared as nullable :(
# See https://github.com/graphql/graphql-spec/issues/488
# and https://github.com/graphql/graphql-spec/issues/627 for the RFC
ProjectStepInput:
  type: input-object
  config:
    fields:
      # AbstractStep fields
      type:
        type: 'ConcreteStepType!'
      id:
        type: 'ID'
      title:
        type: 'String!'
      label:
        type: 'String!'
      startAt:
        type: 'DateTime'
      endAt:
        type: 'DateTime'
      body:
        type: 'HTML'
      metaDescription:
        type: 'String'
      customCode:
        type: 'String'
      isEnabled:
        type: 'Boolean!'
      requirements:
        type: '[StepRequirementInput!]!'
      requirementsReason:
        type: 'String'
      # Everything underneath is not common to every step, so they ALL must be nullable (see file header to understand why)
      # Timeless steps fields (the ones that use the `TimelessStepTrait` trait)
      timeless:
        type: 'Boolean'
      # ConsultationStep fields
      consultations:
          type: '[ID]'
      # VotableStep fields (the ones that use the `VoteThresholdTrait` and `VoteTypeTrait`)
      votesHelpText:
          type: 'String'
      voteType:
          type: 'ProposalStepVoteType'
      budget:
          type: 'Float'
      votesLimit:
          type: 'Int'
      votesRanking:
          type: 'Boolean'
      voteThreshold:
          type: 'Int'
      defaultSort:
          type: 'ProposalSort'
      # SelectionStep fields
      proposalsHidden:
          type: 'Boolean'
      # statuses is used only by CollectStep and SelectionStep
      statuses:
          type: '[StepStatusInput]'
      # CollectStep
      private:
          type: 'Boolean'
      proposalForm:
          type: 'ID'
      defaultStatus:
          type: 'ID'

