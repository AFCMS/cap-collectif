InternalQuestion:
  type: interface
  inherits:
    - PreviewQuestion
    - Node
  config:
    name: Question
    resolveType: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Question\\QuestionTypeResolver", [value])'
    fields:
      id:
        builder: 'Relay::GlobalId'
        builderConfig:
          typeName: Question
      number:
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Question\\QuestionNumberResolver", [value])'
        type: 'Int!'
      type:
        type: 'QuestionTypeValue!'
        resolve: "@=resolver('question_type', [value])"
      #need it for conditional jumps
      position:
        type: 'Int!'
        resolve: "@=resolver('question_position', [value])"
        description: 'The position of the question'
      private:
        type: 'Boolean!'
      required:
        type: 'Boolean!'
      helpText:
        type: 'String'
      description:
        type: 'String'
      kind:
        type: 'String!'
      slug:
        type: 'String!'
      participants:
        type: 'ParticipantConnection!'
        argsBuilder: 'Relay::Connection'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Question\\QuestionParticipantsResolver", [value, args])'
        description: 'Return users who answered the question'
        args:
          withNotConfirmedUser:
            type: 'Boolean'
            description: 'Get participant with user not confirmed'
            defaultValue: false
      responses:
        type: 'ResponseConnection!'
        argsBuilder: 'Relay::Connection'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Question\\QuestionResponsesResolver", [value, args, getUser()])'
        description: 'Return responses of participants'
        args:
          withNotConfirmedUser:
            type: 'Boolean'
            description: 'Get responses with user not confirmed'
            defaultValue: false
      jumps:
        description: 'The associated logic jumps to this question.'
        type: '[LogicJump]'
      resultOpen:
        description: 'If question type is "free" the result of question can be private to the user and admin'
        type: 'Boolean'
