ProposalStep:
    type: interface
    inherits:
        - InternalStep
        - InternalWithProposals
        - RequirementStep
    config:
        description: 'A proposal step'
        resolveType: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Step\\StepTypeResolver", [value])'
        fields:
            project:
                type: 'InternalProject'
            votesLimit:
                type: 'Int'
            votesMin:
                type: 'Int'
                description: 'Minimum number of votes a user must submit for his votes to be counted.'
            budget:
                type: 'Int'
            voteType:
                type: 'ProposalStepVoteType!'
            votable:
                type: 'Boolean!'
            votesHelpText:
                type: 'String'
            voteThreshold:
                type: 'Int'
            statuses:
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Step\\StepStatusesResolver", [value])'
                type: '[Status!]!'
            defaultSort:
                type: 'String' # should be an enum
            open:
                type: 'Boolean!'
            votesRanking:
                type: 'Boolean!'
                description: 'If enabled, allow voters to order their votes by preferences.'
            viewerVotes:
                access: "@=hasRole('ROLE_USER')"
                type: 'ProposalVoteConnection!'
                description: 'A list of viewer votes associated with the step.'
                argsBuilder: 'Relay::Connection'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ViewerStepVotesResolver", [value, getUser(), args])'
                args:
                    orderBy:
                        type: 'ProposalVotesOrder'
                        defaultValue: { field: CREATED_AT, direction: DESC }
            form:
                type: 'ProposalForm'
                resolve: '@=value.getProposalForm()'
