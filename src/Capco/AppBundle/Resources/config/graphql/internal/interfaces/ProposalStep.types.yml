ProposalStep:
  type: interface
  inherits:
    - Step
    - WithProposals
  config:
    description: 'A proposal step'
    resolveType: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Step\\StepTypeResolver", [value])'
    fields:
      requirements:
        type: 'RequirementConnection!'
        description: 'The requirements to vote on this step.'
        argsBuilder: 'Relay::Connection'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Requirement\\StepRequirementsResolver", [value, getUser(), args])'
      project:
        type: 'Project'
      votesLimit:
        type: 'Int'
      budget:
        type: 'Int'
      voteType:
        type: 'ProposalStepVoteType!'
      votable:
        type: 'Boolean!'
      votesHelpText:
        type: 'String'
      voteThreshold:
        type: 'Int'
      open:
        type: 'Boolean!'
      votesRanking:
        type: 'Boolean!'
        description: 'If enabled, allow voters to order their votes by preferences.'
      viewerVotes:
        access: "@=hasRole('ROLE_USER')"
        type: 'ProposalVoteConnection!'
        description: 'A list of viewer votes associated with the step.'
        argsBuilder: 'Relay::Connection'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ViewerStepVotesResolver", [value, getUser(), args])'
        args:
          first:
            type: 'Int'
            defaultValue: 100000
          orderBy:
            type: 'ProposalVotesOrder'
            defaultValue: { field: CREATED_AT, direction: DESC }
      form:
        type: 'ProposalForm!'
        resolve: '@=value.getProposalForm()'
