InternalConsultation:
  type: object
  inherits:
    - InternalPrimaryKey
    - PublicConsultation
    - Node
  config:
    name: Consultation
    fields:
      id:
        description: 'The ID of an object.'
        builder: 'Relay::GlobalId'
        builderConfig:
          typeName: Consultation
      description:
        description: 'Get the associated description of the consultation'
        type: 'String'
      contributors:
        type: 'InternalUserConnection!'
      # Should stay an array ?
      illustration:
        description: 'Get the associated illustration of the consultation'
        type: 'InternalMedia'
      url:
        type: 'URI!'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Consultation\\ConsultationUrlResolver", [value])'
      sections:
        type: '[Section]'
        description: 'List of sections.'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Consultation\\ConsultationSectionResolver", [value, args])'
      viewerOpinionsUnpublished:
        access: "@=hasRole('ROLE_USER')"
        type: 'OpinionConnection'
        argsBuilder: 'Relay::Connection'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Consultation\\ConsultationViewerOpinionsUnpublishedResolver", [value, args, getUser()])'
      contribuable:
        type: 'Boolean!'
        description: 'Contributions are allowed right now.'
        resolve: '@=value.canContribute(getUser())'
      opinionCountShownBySection:
        type: 'Int'
      titleHelpText:
        type: 'String'
      descriptionHelpText:
        type: 'String'
      step:
        type: 'InternalConsultationStep!'
        description: 'The associated consultation step in which belongs this consultation'
      # TODO rename to `contributions`
      contributionConnection:
        type: 'ContributionConnection'
        argsBuilder: 'Relay::Connection'
        args:
          orderBy:
            type: 'ContributionOrder'
            description: 'Ordering options for contributions returned from the connection.'
            defaultValue: { field: POSITION, direction: DESC }
          includeTrashed:
            type: 'Boolean'
            description: 'The connection will return the trashed results too.'
            defaultValue: false
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ConsultationStep\\ConsultationStepContributionsConnectionResolver", [value.getStep(), args])'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({startAt: "2019-09-01", reason: "This field use a deprecated name.", description: "Field `contributionConnection` will be removed.", supersededBy: "Use `contributions` instead."})'
      contributions:
        type: 'ContributionConnection'
        argsBuilder: 'Relay::Connection'
        args:
          orderBy:
            type: 'ContributionOrder'
            description: 'Ordering options for contributions returned from the connection.'
            defaultValue: { field: POSITION, direction: DESC }
          includeTrashed:
            type: 'Boolean'
            description: 'The connection will return the trashed results too.'
            defaultValue: false
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ConsultationStep\\ConsultationStepContributionsConnectionResolver", [value.getStep(), args])'
