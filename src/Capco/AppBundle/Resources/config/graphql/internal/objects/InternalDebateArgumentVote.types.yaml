InternalDebateArgumentVote:
    type: object
    inherits:
        - Node
        - PublicPublishable
        - InternalVote
        - Contribution
    config:
        name: DebateArgumentVote
        description: 'A debate vote.'
        interfaces:
            - Node
            - PublicPublishable
            - InternalVote
            - Contribution
        fields:
            id:
                description: 'The ID of an object.'
                builder: 'Relay::GlobalId'
                builderConfig:
                    typeName: DebateArgumentVote
            createdAt:
                type: 'DateTime!'
                description: 'The date of the vote.'
            author:
                type: 'InternalUser!'
                description: 'The author of the vote.'
            debateArgument:
                type: 'InternalAbstractDebateArgument!'
                description: 'The debate of the vote.'
            ipAddress:
                access: "@=hasRole('ROLE_ADMIN')"
                description: 'IP of the voter'
                type: 'IP'
            origin:
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(getUser(),value,context)'
                description: "The origin of a debate argument's vote"
                type: 'ContributionOrigin!'
            widgetOriginUrl:
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(getUser(),value,context)'
                description: "The URL of widget from which the debate argument's vote was added, if any."
                type: 'URI'
