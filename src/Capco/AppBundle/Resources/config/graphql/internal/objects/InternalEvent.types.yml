InternalEvent:
  type: object
  inherits:
    - PreviewEvent
    - Commentable
    - InternalPrimaryKey
  config:
    description: 'An event.'
    interfaces:
      - Commentable
    name: Event
    fields:
      id:
        description: 'The ID of an object.'
        builder: 'Relay::GlobalId'
        builderConfig:
          typeName: Event
      participants:
        type: 'ParticipantConnection!'
        description: 'A list of Users that are participating to the event.'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Event\\EventParticipantsResolver", [value, args])'
        argsBuilder: 'Relay::Connection'
      themes:
        type: '[Theme!]!'
      projects:
        type: '[InternalProject!]!'
      author:
        type: 'InternalUser'
      commentable:
        type: 'Boolean!'
        resolve: '@=value.isCommentable()'
      link:
        type: 'URI'
      media:
        type: 'InternalMedia'
      address:
        type: 'String'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({reason:"will be deleted"})'
      addressJson:
        type: 'String'
      url:
        type: 'URI!'
        description: 'The url of the event'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Event\\EventUrlResolver", [value])'
      slug:
        type: 'String'
        description: 'The slug of event'
      guestListEnabled:
        type: 'Boolean!'
      customCode:
        type: 'String'
      metaDescription:
        type: 'String'
      fullAddress:
        type: 'String'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({reason:"will be deleted"})'
      lat:
        type: 'Float'
      lng:
        type: 'Float'
      city:
        type: 'String'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({reason:"will be deleted"})'
      country:
        type: 'String'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({reason:"will be deleted"})'
      googleMapsAddress:
        type: 'GoogleMapsAddress'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Event\\EventAddressResolver", [value])'
