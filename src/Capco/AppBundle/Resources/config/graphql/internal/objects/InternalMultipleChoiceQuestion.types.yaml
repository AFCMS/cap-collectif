InternalMultipleChoiceQuestion:
  type: object
  inherits:
    - InternalQuestion
  config:
    name: MultipleChoiceQuestion
    interfaces:
      - InternalQuestion
      - Node
    description: 'A multiple choice question'
    fields:
      kind:
        resolve: 'multiple_choice'
      # TODO we can probably design this better
      isOtherAllowed:
        type: 'Boolean!'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\QuestionChoice\\QuestionChoiceIsOtherAllowedResolver", [value])'
      # TODO we can probably design this better
      otherResponses:
        type: 'InternalResponseConnection!'
        argsBuilder: 'Relay::Connection'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\QuestionChoice\\OtherQuestionChoiceResponseResolver", [value, args])'
        description: 'Responses of the `other` question choice.'
      choices:
        type: '[InternalQuestionChoice!]!'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Question\\QuestionChoicesResolver", [value, args])'
        args:
          allowRandomize:
            type: 'Boolean'
            defaultValue: false
            description: 'If the question has `randomQuestionChoices: true` will return choices in a random order.'
      validationRule:
        type: 'MultipleChoiceQuestionValidationRule'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Question\\QuestionValidationRuleResolver", [value])'
      randomQuestionChoices:
        type: 'Boolean!'
        resolve: '@=value.isRandomQuestionChoices()'
