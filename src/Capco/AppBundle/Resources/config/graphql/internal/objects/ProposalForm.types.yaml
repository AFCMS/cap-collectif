ProposalForm:
    type: object
    inherits:
        - Node
        - InternalWithProposals
        - UniformResourceLocatable
    config:
        description: 'A budget form'
        interfaces:
            - Node
            - UniformResourceLocatable
        fields:
            reference:
                type: 'String!'
            description:
                type: 'String'
            summaryHelpText:
                type: 'String'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormSummaryHelpTextResolver", [value])'
            illustrationHelpText:
                type: 'String'
            title:
                type: 'String!'
            proposals:
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormProposalsResolver", [value, args, getUser(), serv("request_stack")])'
            viewerProposalsUnpublished:
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormViewerProposalsUnpublishedResolver", [value, args, getUser()])'
            categories:
                type: '[ProposalCategory!]!'
                args:
                    order:
                        type: 'CategoryOrderField'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormCategoriesResolver", [value, args["order"]])'
                description: 'Available categories for proposals of this form.'
            usingThemes:
                type: 'Boolean!'
            contribuable:
                type: 'Boolean!'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormViewerCanContributeResolver", [value, getUser()])'
                description: 'Viewer can contribute to the form'
            themeMandatory:
                type: 'Boolean!'
            themeHelpText:
                type: 'String'
            usingDistrict:
                type: 'Boolean!'
            commentable:
                type: 'Boolean!'
            costable:
                type: 'Boolean!'
            proposalInAZoneRequired:
                type: 'Boolean!'
            districts:
                type: '[ProposalDistrict!]!'
                args:
                    order:
                        type: 'DistrictOrderField'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormDistrictsResolver", [value, args["order"]])'
            districtMandatory:
                type: 'Boolean!'
            districtHelpText:
                type: 'String'
            usingCategories:
                type: 'Boolean!'
            categoryMandatory:
                type: 'Boolean!'
            categoryHelpText:
                type: 'String'
            usingAddress:
                type: 'Boolean!'
            titleHelpText:
                type: 'String'
            descriptionHelpText:
                type: 'String'
            addressHelpText:
                type: 'String'
            questions:
                type: '[InternalQuestion!]!'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormQuestionsResolver", [value])'
            mapCenter:
                type: 'PreviewGoogleMapsAddress'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalFormMapCenterResolver", [value])'
            zoomMap:
                type: 'Int'
            adminUrl:
                type: URI!
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormAdminUrlResolver", [value])'
            url:
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ProposalForm\\ProposalFormUrlResolver", [value])'
            notificationsConfiguration:
                type: 'NotificationsConfiguration!'
            evaluationForm:
                type: 'EvaluationForm'
                description: 'Get the evaluation form of the proposal form'
            step:
                type: 'InternalCollectStep'
                description: 'Identifies the step that use the proposal form.'
            allowAknowledge:
                type: 'Boolean!'
            isProposalForm:
                type: 'Boolean!'
                description: 'Proposal form is type of Proposal or Question'
            usingDescription:
                type: 'Boolean!'
                description: 'Proposal form using description field'
            usingIllustration:
                type: 'Boolean!'
                description: 'Proposal form using illustration field'
            usingSummary:
                type: 'Boolean!'
                description: 'Proposal form using summary field'
            descriptionMandatory:
                type: 'Boolean!'
                description: 'Proposal form is description field is mandatory or not'
            suggestingSimilarProposals:
                type: 'Boolean!'
                description: 'When a user is creating a proposal, suggest similar to avoid duplicate.'
            isIndexationDone:
                type: 'Boolean!'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\IsIndexationDoneResolver")'
            canContact:
                type: 'Boolean!'
                description: 'can the viewer send a contact message to the proposals author'
            analysisConfiguration:
                type: 'InternalAnalysisConfiguration'
                description: 'The configuration for the related analysis.'
            isGridViewEnabled:
                type: 'Boolean!'
                description: 'True if the grid view is enabled.'
            isListViewEnabled:
                type: 'Boolean!'
                description: 'True if the grid view is enabled.'
            isMapViewEnabled:
                type: 'Boolean!'
                description: 'True if the grid view is enabled.'
