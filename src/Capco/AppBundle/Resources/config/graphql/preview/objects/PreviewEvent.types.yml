PreviewEvent:
  type: object
  inherits:
    - Node
    - UniformResourceLocatable
    - Timestampable
    - PreviewTimeRangeable
    - Authorable
  config:
    interfaces:
      - Node
      - UniformResourceLocatable
    name: Event
    description: 'Represents a calendar event.'
    fields:
      id:
        description: 'The ID of an object.'
        builder: 'Relay::GlobalId'
        builderConfig:
          typeName: Event
      author:
        type: 'PreviewUser'
        description: 'Identifies the author of the event.'
      title:
        type: 'String!'
        description: 'Identifies the title of the event.'
      startAt:
        type: 'DateTime!'
        description: 'The start date of the event.'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({startAt: "2020-03-01", reason: "This field has been moved.", description: "Field `startAt` will be removed.", supersededBy: "Use `timeRange.startAt` instead."})'
      endAt:
        type: 'DateTime'
        description: 'The end date of the event.'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({startAt: "2020-03-01", reason: "This field has been moved.", description: "Field `endAt` will be removed.", supersededBy: "Use `timeRange.endAt` instead."})'
      body:
        type: 'HTML!'
        description: 'Identifies the body of the event.'
      enabled:
        type: 'Boolean!'
        description: 'Whether or not this event is published.'
      url:
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Event\\EventUrlResolver", [value])'
      lat:
        type: 'Float'
        description: 'Identifies the latitude of the event.'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({startAt: "2020-03-01", reason: "This field use our legacy address format.", description: "Field `lat` will be removed.", supersededBy: "Use `googleMapsAddress.lat`  instead."})'
      lng:
        type: 'Float'
        description: 'Identifies the longitude of the event.'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({startAt: "2020-03-01", reason: "This field use our legacy address format.", description: "Field `lng` will be removed.", supersededBy: "Use `googleMapsAddress.lng` instead."})'
      link:
        type: 'URI'
        description: 'Identifies the registration link of the event.'
      zipCode:
        type: 'String'
        description: 'Identifies the zip code of the event.'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({startAt: "2020-03-01", reason: "This field use our legacy address format.", description: "Field `zipCode` will be removed.", supersededBy: "Use `googleMapsAddress` instead."})'
      fullAddress:
        type: 'String'
        description: 'Identifies the address of the event.'
        deprecationReason: '@=service("Capco\\AppBundle\\GraphQL\\Deprecation").toString({startAt: "2020-03-01", reason: "This field use our legacy address format.", description: "Field `fullAddress` will be removed.", supersededBy: "Use `googleMapsAddress.formatted` instead."})'
      googleMapsAddress:
        type: 'PreviewGoogleMapsAddress'
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Event\\EventAddressResolver", [value])'
        description: 'Identifies the address of the event in google Maps format.'
      deletedAt:
        type: 'DateTime'
        description: 'The delete date.'
