PreviewSource:
  type: object
  inherits:
    - Node
    - PublicPublishable
    - PreviewContribution
    - Trashable
    - UniformResourceLocatable
  config:
    name: Source
    description: 'A source'
    interfaces:
      - Node
      - PublicPublishable
      - PreviewContribution
      - Trashable
      - UniformResourceLocatable
    fields:
      createdAt:
        type: 'DateTime!'
        description: 'Identifies the date and time when the object was created.'
      updatedAt:
        type: 'DateTime'
        description: 'Identifies the date and time when the object was updated.'
      viewerHasReport:
        type: 'Boolean!'
        description: 'Whether or not the user has report the source.'
        resolve: '@=value.userHasReport(getUser())'
      contribuable:
        type: 'Boolean!'
        description: 'Whether or not the user can contribute to the source.'
        resolve: '@=value.canContribute(getUser())'
      viewerHasVote:
        description: 'Whether or not the user has voted for this source.'
        type: 'Boolean!'
        access: "@=hasRole('ROLE_USER')"
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Source\\SourceViewerHasVoteResolver", [value, getUser()])'
      title:
        type: 'String!'
        description: 'The title of the source.'
      body:
        type: 'String!'
        description: 'The content of the source.'
      url:
        description: "The source's url"
        resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Source\\SourceUrlResolver", [value])'
