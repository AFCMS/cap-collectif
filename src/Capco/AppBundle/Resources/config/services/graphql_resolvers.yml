services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false
  _instanceof:
    Overblog\GraphQLBundle\Definition\Resolver\ResolverInterface:
      tags: ['overblog_graphql.resolver']

  Capco\AppBundle\GraphQL\Resolver\:
    resource: '%kernel.root_dir%/../src/Capco/AppBundle/GraphQL/Resolver/*'
    exclude: '%kernel.root_dir%/../src/Capco/AppBundle/GraphQL/Resolver/{GlobalIdResolver.php,QuestionResolver.php,ConsultationResolver.php,UserResolver.php, Group/GroupResolver.php, Proposal/ProposalEvaluationResolver.php,UserIsGrantedResolver.php}'

  global_id_resolver:
    class: Capco\AppBundle\GraphQL\Resolver\GlobalIdResolver
    autowire: true
    tags:
      - { name: overblog_graphql.resolver, alias: 'query_node', method: 'resolve' }
      - { name: overblog_graphql.resolver, alias: 'query_nodes', method: 'resolveMultiple' }


  capco.resolver.question:
    class: Capco\AppBundle\GraphQL\Resolver\QuestionResolver
    autowire: true
    tags:
      - { name: overblog_graphql.resolver, alias: 'query_question', method: 'resolve' }
      - { name: overblog_graphql.resolver, alias: 'question_type', method: 'resolveType' }
      - { name: overblog_graphql.resolver, alias: 'question_position', method: 'resolvePosition' }
      - {
          name: overblog_graphql.resolver,
          alias: 'query_available_districts_for_location',
          method: 'resolveDistrictsForLocalisation',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'question_isOtherAllowed',
          method: 'resolveisOtherAllowed',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'question_validation_rule',
          method: 'resolveValidationRule',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'query_get_available_questionnaires',
          method: 'resolveAvailableQuestionnaires',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'questionnaire_questions',
          method: 'resolveQuestionnaireQuestions',
        }

  capco.resolver.proposals:
    class: Capco\AppBundle\GraphQL\Resolver\Proposal\ProposalResolver
    autowire: true
    tags:
      - {
          name: overblog_graphql.resolver,
          alias: 'proposal_viewer_is_evaluer',
          method: 'resolveViewerIsEvaluer',
        }
      - { name: overblog_graphql.resolver, alias: 'post_abstract', method: 'resolvePostAbstract' }
      - { name: overblog_graphql.resolver, alias: 'proposal_news', method: 'resolveNews' }
   
      - { name: overblog_graphql.resolver, alias: 'response_type', method: 'resolveResponseType' }
      - { name: overblog_graphql.resolver, alias: 'proposal_reference', method: 'resolveReference' }
      - {
          name: overblog_graphql.resolver,
          alias: 'proposal_evaluation',
          method: 'resolveEvaluation',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'query_get_draft_proposals_for_user_in_step',
          method: 'resolveDraftProposalsForUserInStep',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'proposal_posts_count',
          method: 'resolvePostsCount',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'proposal_viewer_can_see_evaluation',
          method: 'resolveViewerCanSeeEvaluation',
        }

  capco.resolver.consultations:
    class: Capco\AppBundle\GraphQL\Resolver\ConsultationResolver
    tags:
      - {
          name: overblog_graphql.resolver,
          alias: 'sectionappendixtype_id',
          method: 'getSectionAppendixId',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'sectionappendixtype_title',
          method: 'getSectionAppendixTitle',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'consultationContributionsRelay',
          method: 'getConsultationContributionsConnection',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'sectionContributionsRelay',
          method: 'getSectionContributionsConnection',
        }
      - { name: overblog_graphql.resolver, alias: 'section_url', method: 'getSectionUrl' }
      - {
          name: overblog_graphql.resolver,
          alias: 'contributionsBySection',
          method: 'getContributionsBySection',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'section_contributionsCount',
          method: 'getSectionOpinionsCount',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'section_contributions',
          method: 'getSectionOpinions',
        }
      - { name: overblog_graphql.resolver, alias: 'section_sections', method: 'getSectionChildren' }
      - { name: overblog_graphql.resolver, alias: 'consultation', method: 'resolve' }
      - {
          name: overblog_graphql.resolver,
          alias: 'proposition_section',
          method: 'resolvePropositionSection',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'consultation_sections',
          method: 'resolveConsultationSections',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'proposition_arguments',
          method: 'resolvePropositionArguments',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'proposition_vote_author',
          method: 'resolvePropositionVoteAuthor',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'votesByContribution',
          method: 'resolveVotesByContribution',
        }
      - {
          name: overblog_graphql.resolver,
          alias: 'consultation_contribuable',
          method: 'resolveConsultationIsContribuable',
        }
      - { name: overblog_graphql.resolver, alias: 'argument_url', method: 'resolveArgumentUrl' }
      - {
          name: overblog_graphql.resolver,
          alias: 'reporting_author',
          method: 'resolveReportingAuthor',
        }
      - { name: overblog_graphql.resolver, alias: 'reporting_type', method: 'resolveReportingType' }
      - {
          name: overblog_graphql.resolver,
          alias: 'contribution_type',
          method: 'resolveContributionType',
        }

  capco.resolvers.users:
    class: Capco\AppBundle\GraphQL\Resolver\UserResolver
    tags:
      - { name: overblog_graphql.resolver, alias: 'user_email', method: 'resolveEmail' }
      - {
          name: overblog_graphql.resolver,
          alias: 'user_phoneConfirmationSentAt',
          method: 'resolvePhoneConfirmationSentAt',
        }
      - { name: overblog_graphql.resolver, alias: 'user_gender', method: 'resolveGender' }
      - { name: overblog_graphql.resolver, alias: 'user_rolesText', method: 'resolveRolesText' }
      - {
          name: overblog_graphql.resolver,
          alias: 'user_contributionsToDeleteCount',
          method: 'contributionsToDeleteCount',
        }

  capco.resolvers.groups:
    class: Capco\AppBundle\GraphQL\Resolver\Group\GroupResolver
    tags:
      - { name: overblog_graphql.resolver, alias: 'groups', method: 'resolveAll' }
      - { name: overblog_graphql.resolver, alias: 'group', method: 'resolve' }
      - {
          name: overblog_graphql.resolver,
          alias: 'group_users_connection',
          method: 'resolveUsersConnection',
        }

  # This is not a resolver but a voter, rename and move this elsewhere
  Capco\AppBundle\GraphQL\Resolver\UserIsGrantedResolver:
    autowire: true
    public: true

  Capco\AppBundle\GraphQL\Deprecation:
    autowire: true
    public: true
