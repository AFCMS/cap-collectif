{%  set currentUser = app.user %}
{% set author = comment.Author %}
{% set longComment = comment.body | length > 500 ? true : false %}
<li class="opinion  opinion--comment {% if classes is defined %}{{ classes }}{% endif %}" id="comment-{{ comment.id }}">
    <div class="opinion__body">
        {% include 'CapcoUserBundle:Avatar:avatar.html.twig' with { 'user': author, 'link_classes': 'pull-left'} only %}
        <div class="opinion__data">
            <p class="h5  opinion__user">
                {% if null != author %}
                    <a href="{{ path('capco_user_profile_show_all', {'slug': author.slug}) }}">{{ author.username }}</a>
                {% else %}
                    {{ comment.authorName }}
                {% endif %}
            </p>
            <p class="excerpt  opinion__date">{{ comment.createdAt | localizeddate('long', 'short', app.request.locale) }}</p>
        </div>
        {% if profile is defined %}
            <p>{{ 'comment.linked_object' | trans({}, 'CapcoAppBundle') }} <a href="{{ capco_comment_object_url(comment) }}">{{ capco_comment_object(comment) }}</a></p>
        {% endif %}

        {% if longComment %}
            <input type="checkbox" class="read-more-state" id="readmore-comment-{{ comment.id }}" />
        {% endif %}

        <p class="opinion__text {% if longComment %}read-more-wrap{% endif %}">
            {% spaceless %}
                {% if comment.isTrashed %}<span class="label label-default" style="position: static">{{ 'comment.trashed.label'|trans({}, 'CapcoAppBundle') }}</span> {% endif %}
                <span>{{ comment.body | slice(0, 500) | escape | nl2br }}</span>
                {% if longComment %}
                    <span class="read-more-target">{{ comment.body| slice(500) | escape | nl2br }}</span>
                {% endif %}
            {% endspaceless %}
        </p>

        {% if longComment %}
            <label for="readmore-comment-{{ comment.id }}" class="read-more-trigger"></label>
        {% endif %}

        {% if false == comment.canContribute %}
            <button disabled="disabled" class="btn  btn-dark-gray  btn-xs"><i class="cap-hand-like-2"></i> {{ 'comment.vote.submit'|trans({}, 'CapcoAppBundle') }}</button>
        {% else %}
            <form method="POST" style="display: inline-block;" action="{{ path('app_comment_vote', {'commentId': comment.id } ) }}">
                {% if comment.userHasVote(currentUser) %}
                    <button class="btn  btn-danger  btn-xs">{{ 'comment.vote.delete'|trans({}, 'CapcoAppBundle') }}</button>
                {% else %}
                    <button class="btn  btn-success  btn--outline  btn-xs"><i class="cap-hand-like-2"></i> {{ 'comment.vote.submit'|trans({}, 'CapcoAppBundle') }}</button>
                {% endif %}
                <input type="hidden" name="_csrf_token" value="{{ token }}">
            </form>
        {% endif %}
        <span class="opinion__votes-nb">{{ comment.VoteCount }}</span>

        {% if comment.userHasReport(currentUser) %}
            <button disabled="disabled" class="btn btn-xs btn-dark-gray"><i class="cap cap-flag-1"></i> {{ 'comment.report.reported'|trans({}, 'CapcoAppBundle') }}</button>
        {% else %}
            <a href="{{ path('app_report_comment' ,{'commentId': comment.id } ) }}" class="btn btn-xs btn-dark-gray  btn--outline"><i class="cap cap-flag-1"></i> {{ 'comment.report.submit'|trans({}, 'CapcoAppBundle') }}</a>
        {% endif  %}


        {% if comment.canContribute and currentUser is not null and currentUser == comment.Author and comment.canContribute %}
            <a href="{{ path('app_comment_edit' ,{'commentId': comment.id } ) }}" class="btn  btn-dark-gray  btn--outline  btn-xs"><i class="cap cap-pencil-1"></i> {{ 'comment.update.button'|trans({}, 'CapcoAppBundle') }}</a>
        {% endif %}

    </div>
</li>
