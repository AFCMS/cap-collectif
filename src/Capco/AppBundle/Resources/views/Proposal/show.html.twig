{% extends '@CapcoApp/base.html.twig' %}

{% block canonical_link %}{{ '' }}{% endblock %}

{% block metaTags %}
    {% set image %}{% if proposal.media %}{% path proposal.media, 'blockHeader' %}{% endif %}{% endset %}
    {% include 'CapcoAppBundle:Default:meta.html.twig' with {
        'title':       proposal.title,
        'description': proposal.body|striptags|truncate(250, true),
        'image':       image,
        'url':         url('app_project_show_proposal', {'projectSlug': project.slug, 'stepSlug': currentStep.slug, 'proposalSlug': proposal.slug})
    } only %}
{% endblock %}

{% set showVotesWidget = app.user and ((currentStep is defined and currentStep.slug is defined and attribute(currentStep, 'isVotable') is defined and currentStep.isVotable() and (currentStep.isCollectStep() or currentStep.isSelectionStep())) or (proposal is defined and proposal|current_votable_step)) %}
{% set page_class = showVotesWidget ? "has-vote-widget" : "" %}

{% block title %}
    {{ parent() }} - {{ proposal.title }}
{% endblock %}

{% block jumbotron %}{% endblock %}

{% block reduxStore %}
    {% set initialState = {
        'proposal': {
            'referer': referer,
        }
    } %}
    {% include '@CapcoApp/redux_store.html.twig' with {'data' : initialState, 'project': project} %}
{% endblock %}

{% block body %}
    {{ react_render_component('ProposalPageApp', {'props':{'currentVotableStepId': currentVotableStepId,
    'proposalTitle': proposal.title,
    'opinionCanBeFollowed': project.opinionCanBeFollowed,
    'hasVotableStep': currentStep != null,
    'proposalId': proposal.id|toGlobalId('Proposal'),
    'image': media_public_url(capco_site_image_media('image.votes_bar'), 'default_small'),
    'votesPageUrl': path('app_project_show_user_votes', {'projectSlug': project.slug}),
    'showVotesWidget': showVotesWidget,
     }}) }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {% include 'CapcoAdminBundle::googlemapsapi.html.twig' %}
{% endblock %}
