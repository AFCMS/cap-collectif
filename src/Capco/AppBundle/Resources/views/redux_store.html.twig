{% set state = {
  'default': {
    'districts': districts_list(),
    'themes': themes_list(),
    'features': features_list(),
    'userTypes': user_type_list()|default([]),
    'parameters': site_parameters_list(),
    'isLoggedIn': app.user ? true : false,
  },
  'user': {
    'user': app.user
      ? {
        'id': app.user.id,
        'username': app.user.username,
        'isEmailConfirmed': app.user.isEmailConfirmed,
        'isPhoneConfirmed': app.user.isPhoneConfirmed,
        'phone': app.user.phone,
        'isAdmin': app.user.isAdmin,
        'email': app.user.email,
        'newEmailToConfirm': app.user.newEmailToConfirm,
        'media': app.user.Media
        ? {
            'url': media_public_url(app.user.Media, 'default_avatar')
          }
        : null,
        'displayName': app.user.username,
        'uniqueId': app.user.slug,
      }
    : null,
  }
} %}
{% if project is defined %}
  {% set projectSteps = [] %}
  {% for step in project.steps if step.step.isEnabled %}
      {% set stepStatuses = [] %}
      {% for status in step.step.statuses %}
        {%
          set stepStatuses = stepStatuses|merge([
            {
              'id': status.id,
              'name': status.name
            }
          ])
        %}
      {% endfor %}
      {%
      set projectSteps = projectSteps|merge([{
        'id': step.step.id,
        'title': step.step.title,
        'body': step.step.body,
        'startAt': step.step.startAt ? step.step.startAt|localizeddate('medium', 'none') : null,
        'endAt': step.step.endAt ? step.step.endAt|localizeddate('medium', 'none') : null,
        'position': step.step.position,
        'type': step.step.getType(),
        'showProgressSteps': step.step.allowingProgressSteps|default(false),
        'statuses': stepStatuses,
        'open': step.step.open,
        'voteThreshold': step.step.voteThreshold|default(null),
        'votesHelpText': step.step.votesHelpText|default(null),
        'votesLimit': step.step.votesLimit|default(null),
        'votable': step.step.isVotable()|default(false),
        'voteType': step.step.voteType|default(0),
        'budget': step.step.budget|default(null),
        'timeless': step.step.isTimeless()|default(false),
        'isPrivate': step.step.isPrivate()|default(false),
        'titleHelpText': step.step.titleHelpText|default(null),
        'descriptionHelpText': step.step.descriptionHelpText|default(null),
        '_links': {
          'show': step.step.getType() == 'other' ? '' : path('app_project_show_'~ step.step.getType(), {'projectSlug': project.slug, 'stepSlug': step.step.slug})
        }
      }])
      %}
  {% endfor %}
  {% set state = state|merge({
    'project': {
      'currentProjectStepById': currentStep.id|default(null),
      'currentProjectById': project.id,
      'projects': {
        (project.id) : {
          'slug': project.slug,
          'steps': projectSteps
        }
      }
    }
  }) %}
{% endif %}
{% set state = state|merge(data is defined ? data : {}) %}
{{ redux_store('appStore', state) }}
