services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  Capco\UserBundle\:
    resource: 'Capco/UserBundle/*'

  # Redeclare Sonata services
  sonata.user.admin.group:
    abstract: false
    public: true
  sonata.user.orm.group_manager:
    abstract: false
    public: true

  Capco\UserBundle\Security\Core\User\OauthUserProvider:
    arguments: ['@fos_user.user_manager', { facebook: facebook_id, google: google_id }]

  Capco\UserBundle\Security\Core\User\SamlUserProvider:
    arguments: ['@fos_user.user_manager', '%simplesamlphp.sp%']

  Capco\UserBundle\Security\Core\User\MonCompteParisUserProvider:
    arguments: ['@fos_user.user_manager', 'Capco\UserBundle\MonCompteParis\OpenAmClient']


  Capco\UserBundle\Listener\UserNotificationsListener:
    tags:
      - { name: doctrine.orm.entity_listener, event: prePersist }
    arguments: ['@fos_user.util.token_generator']

  Capco\UserBundle\Security\Core\User\UserEmailProvider:
    arguments: ['@fos_user.user_manager', {}]

  drupal.encoder:
    class: Capco\UserBundle\Security\DrupalEncoder

  # We override default security services:
  security.authentication.success_handler:
    class: Capco\UserBundle\Handler\AuthenticationSuccessHandler
    arguments:
      ['@security.http_utils', {}, 'Capco\AppBundle\Toggle\Manager', '@security.token_storage']
    tags:
      - { name: 'monolog.logger', channel: 'security' }
  security.authentication.failure_handler:
    class: Capco\UserBundle\Handler\AuthenticationFailureHandler
    arguments: ['@http_kernel', '@security.http_utils', {}, '@logger']
    tags:
      - { name: 'monolog.logger', channel: 'security' }

  Capco\UserBundle\Doctrine\UserManager:
    arguments:
      - '@fos_user.util.password_updater'
      - '@fos_user.util.canonical_fields_updater'
      - '@fos_user.object_manager'
      - '%fos_user.model.user.class%'
